<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Editline</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../demo.htm">Demo</a>
<a class="menu" href="../scrshots/index.htm">Screenshots</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive.htm">Archive</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="basearray.htm">Base idx array</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="bzip2.htm">Bzip2</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="compress.htm">Compress</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elf.htm">ELF</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="exif.htm">Exif</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="json.htm">JSON</a>
<a class="menu" href="json_serde.htm">JSON serialize</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="magic.htm">Magic numbers</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixelimage.htm">Pixel image</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="pbm.htm">PBM</a>
<a class="menu" href="pgm.htm">PGM</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="rpmext.htm">Rpm extension</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanjson.htm">Scan JSON</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="scantoml.htm">Scan TOML</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="struct_elem.htm">Struct element</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tga.htm">TGA</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Editline</big></b></td>
<td align="right"><a class="link" href="../lib/editline.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/echo.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/elf.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Types</td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#editLineFile">editLineFile</a></b></td></tr>
<tr><td width="30"></td><td><a class="link" href="file.htm" title="File">File</a> implementation type for linewise editing with history.</td></tr></table></td></tr>
</table>
</div>
<div>
<div><a name="editLineFile"><h3>editLineFile</h3></a>
<p>
const type: <b>editLineFile</b></p><dl><dd>
<p>
<a class="link" href="file.htm" title="File">File</a> implementation type for linewise editing with history.
The possibilities of editing are described in the documentation of
the function <a class="link" href="#getln(inout_editLineFile)" title="getln">getln</a>.
</p>
</dd>
</dl></div>
<br /></div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">file</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openEditLine(in_file,in_file)">openEditLine</a></b> (in file: inFile, in file: outFile)</td></tr>
<tr><td width="30"></td><td>Open an Unicode filter file for linewise editing with history.</td></tr></table></td></tr>
<tr><td align="right" valign="top">file</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openEditLineLatin1(in_file,in_file)">openEditLineLatin1</a></b> (in file: inFile, in file: outFile)</td></tr>
<tr><td width="30"></td><td>Open a Latin-1 filter file for linewise editing with history.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getln(inout_editLineFile)">getln</a></b> (inout editLineFile: inEditLine)</td></tr>
<tr><td width="30"></td><td>Read a line from <i>inEditLine</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">char</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getc(inout_editLineFile)">getc</a></b> (inout editLineFile: inEditLine)</td></tr>
<tr><td width="30"></td><td>Read a character from <i>inEditLine</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#gets(inout_editLineFile,in_integer)">gets</a></b> (inout editLineFile: inEditLine, in integer: maxLength)</td></tr>
<tr><td width="30"></td><td>Read a <a class="link" href="string.htm" title="string">string</a> with maximum length from <i>inEditLine</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#eof(in_editLineFile)">eof</a></b> (in editLineFile: inEditLine)</td></tr>
<tr><td width="30"></td><td>Determine the end-of-file indicator.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#hasNext(in_editLineFile)">hasNext</a></b> (in editLineFile: inEditLine)</td></tr>
<tr><td width="30"></td><td>Determine if at least one character can be read successfully.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="openEditLine(in_file,in_file)"><h3>openEditLine</h3></a>
<p>
const func file: <b>openEditLine</b> (in file: inFile, in file: outFile)</p><dl><dd>
<p>
Open an Unicode filter file for linewise editing with history.
Unicode characters and editing keys are read from <i>inFile</i>.
All Unicode characters are accepted and written to <i>outFile</i>.
To avoid RANGE_ERROR use an Unicode capable file as <i>outFile</i>.
The following editing keys are accepted: Backspace, delete,
home, end and the cursor keys. The history is accessed with
the vertical cursor keys. Ctrl-C and ctrl-T allow terminating
the program. Other keys (e.g. function keys) are ignored.
Call <i>openEditLine</i> with
</p>
<pre class="indent">
IN := openEditLine(KEYBOARD, OUT);
</pre>
<p>
to allow editing standard console input.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the file opened.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="openEditLineLatin1(in_file,in_file)"><h3>openEditLineLatin1</h3></a>
<p>
const func file: <b>openEditLineLatin1</b> (in file: inFile, in file: outFile)</p><dl><dd>
<p>
Open a Latin-1 filter file for linewise editing with history.
Unicode characters and editing keys are read from <i>inFile</i>.
Only Latin-1 characters are accepted and written to <i>outFile</i>.
Unicode characters beyond ISO Latin-1 (ISO-8859-1) are ignored.
This allows that a normal byte file is used as <i>outFile</i>.
The following editing keys are accepted: Backspace, delete,
home, end and the cursor keys. The history is accessed with
the vertical cursor keys. Ctrl-C and ctrl-T allow terminating
the program. Other keys (e.g. function keys) are ignored.
Call <i>openEditLine</i> with
</p>
<pre class="indent">
IN := openEditLineLatin1(KEYBOARD, OUT);
</pre>
<p>
to allow editing standard console input.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the file opened.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getln(inout_editLineFile)"><h3>getln</h3></a>
<p>
const func string: <b>getln</b> (inout editLineFile: inEditLine)</p><dl><dd>
<p>
Read a line from <i>inEditLine</i>.
Before the line is sent it can be edited. It is possible to
move the cursor with horizontal cursor keys. The home key and
the end key move the cursor to the beginning respectively end
of the input line. Characters can be inserted at the current
cursor position. Backspace and delete can be used to remove
characters. Vertical cursor keys allow browsing the history of
input lines. Sending the line is done with enter/return ('\n').
The line ending character is not copied into the string. When
the function is left inEditLine.bufferChar contains '\n' or
<a class="link" href="char.htm#EOF" title="EOF">EOF</a>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the line read.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getc(inout_editLineFile)"><h3>getc</h3></a>
<p>
const func char: <b>getc</b> (inout editLineFile: inEditLine)</p><dl><dd>
<p>
Read a character from <i>inEditLine</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the character read, or <a class="link" href="char.htm#EOF" title="EOF">EOF</a> at the end of the file.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="gets(inout_editLineFile,in_integer)"><h3>gets</h3></a>
<p>
const func string: <b>gets</b> (inout editLineFile: inEditLine, in integer: maxLength)</p><dl><dd>
<p>
Read a <a class="link" href="string.htm" title="string">string</a> with maximum length from <i>inEditLine</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the string read.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - The parameter <i>maxLength</i> is negative.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="eof(in_editLineFile)"><h3>eof</h3></a>
<p>
const func boolean: <b>eof</b> (in editLineFile: inEditLine)</p><dl><dd>
<p>
Determine the end-of-file indicator.
The end-of-file indicator is set if at least one request to read
from the file failed.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE if the end-of-file indicator is set, FALSE otherwise.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="hasNext(in_editLineFile)"><h3>hasNext</h3></a>
<p>
const func boolean: <b>hasNext</b> (in editLineFile: inEditLine)</p><dl><dd>
<p>
Determine if at least one character can be read successfully.
This function allows a file to be handled like an iterator.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>FALSE if <i>getc</i> would return <a class="link" href="char.htm#EOF" title="EOF">EOF</a>,         TRUE otherwise.</dd></dl></dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/echo.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/elf.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
