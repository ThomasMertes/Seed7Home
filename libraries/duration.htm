<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Duration</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../scrshots/index.htm">Programs</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Duration</big></b></td>
<td align="right"><a class="link" href="../lib/duration.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/draw.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/echo.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Types</td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#duration">duration</a></b></td></tr>
<tr><td width="30"></td><td>Describes time and date durations.</td></tr></table></td></tr>
</table>
</div>
<div>
<div><a name="duration"><h3>duration</h3></a>
<p>
const type: <b>duration</b></p><dl><dd>
<p>
Describes time and date durations.
</p>
</dd>
</dl></div>
<br /></div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Operator Summary</td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(attr duration) <b><a class="link" href="#(attr_duration)parse(in_string)">parse</a></b> (in string: stri)</td></tr>
<tr><td width="30"></td><td>Convert a string to a <i>duration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)=(in_duration)">=</a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Check if two <i>duration</i> values are equal.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)&lt;>(in_duration)">&lt;></a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Check if two <i>duration</i> values are not equal.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)&lt;=(in_duration)">&lt;=</a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Check if <i>aDuration1</i> is less than or equal to <i>aDuration2</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)>=(in_duration)">>=</a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Check if <i>aDuration1</i> is greater than or equal to <i>aDuration2</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)&lt;(in_duration)">&lt;</a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Check if <i>aDuration1</i> is less than <i>aDuration2</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)>(in_duration)">></a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Check if <i>aDuration1</i> is greater than <i>aDuration2</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#+(in_duration)">+</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Plus sign for durations.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#-(in_duration)">-</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Minus sign, negate a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)+(in_duration)">+</a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Add two durations.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration1) <b><a class="link" href="#(in_duration)-(in_duration)">-</a></b> (in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Compute the subtraction of two durations.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in integer: number) <b><a class="link" href="#(in_integer)*(in_duration)">*</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Multiply a duration by a number.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in duration: aDuration) <b><a class="link" href="#(in_duration)*(in_integer)">*</a></b> (in integer: number)</td></tr>
<tr><td width="30"></td><td>Multiply a duration by a number.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(inout duration: aDuration) <b><a class="link" href="#(inout_duration)+:=(in_duration)">+:=</a></b> (in duration: delta)</td></tr>
<tr><td width="30"></td><td>Increment a duration by a delta.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(inout duration: aDuration) <b><a class="link" href="#(inout_duration)-:=(in_duration)">-:=</a></b> (in duration: delta)</td></tr>
<tr><td width="30"></td><td>Decrement a duration by a delta.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(inout time: tim) <b><a class="link" href="#(inout_time)+:=(in_duration)">+:=</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Increment a <a class="link" href="time.htm" title="time">time</a> by a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(inout time: tim) <b><a class="link" href="#(inout_time)-:=(in_duration)">-:=</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Decrement a <a class="link" href="time.htm" title="time">time</a> by a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">time</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in time: tim) <b><a class="link" href="#(in_time)+(in_duration)">+</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Add a duration to a <a class="link" href="time.htm" title="time">time</a>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">time</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in time: tim) <b><a class="link" href="#(in_time)-(in_duration)">-</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Subtract a duration from a <a class="link" href="time.htm" title="time">time</a>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in time: tim1) <b><a class="link" href="#(in_time)-(in_time)">-</a></b> (in time: tim2)</td></tr>
<tr><td width="30"></td><td>Subtract two <a class="link" href="time.htm" title="times">times</a>.</td></tr></table></td></tr>
</table>
</div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getYears(in_duration)">getYears</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Obtain the years of a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getMonths(in_duration)">getMonths</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Obtain the months of a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getDays(in_duration)">getDays</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Obtain the days of a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getHours(in_duration)">getHours</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Obtain the hours of a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getMinutes(in_duration)">getMinutes</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Obtain the minutes of a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getSeconds(in_duration)">getSeconds</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Obtain the seconds of a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getMicroSeconds(in_duration)">getMicroSeconds</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Obtain the micro seconds of a duration.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#str(in_duration)">str</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Convert a duration to a string.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#literal(in_duration)">literal</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Convert a duration to a duration literal.</td></tr></table></td></tr>
<tr><td align="right" valign="top">duration</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#duration(in_var_string)">duration</a></b> (in var string: stri)</td></tr>
<tr><td width="30"></td><td>Convert a string to a <i>duration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#compare(in_duration,in_duration)">compare</a></b> (in duration: aDuration1, in duration: aDuration2)</td></tr>
<tr><td width="30"></td><td>Compares two durations.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#hashCode(in_duration)">hashCode</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the hash value of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#toYears(in_duration)">toYears</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the years of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#toMonths(in_duration)">toMonths</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the months of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#toDays(in_duration)">toDays</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the days of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#toHours(in_duration)">toHours</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the hours of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#toMinutes(in_duration)">toMinutes</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the minutes of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#toSeconds(in_duration)">toSeconds</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the seconds of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#toMicroSeconds(in_duration)">toMicroSeconds</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Compute the micro seconds of <i>aDuration</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#wait(in_duration)">wait</a></b> (in duration: aDuration)</td></tr>
<tr><td width="30"></td><td>Wait for a given duration.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Operator Detail</td></tr></table></p>
<div><a name="(attr_duration)parse(in_string)"><h3>parse</h3></a>
<p>
const func duration: (attr duration) <b>parse</b> (in string: stri)</p><dl><dd>
<p>
Convert a string to a <i>duration</i>.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>stri</tt> - A duration in the format P[nY][nM][nD][T[nH][nM][n[.n]S]]</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the <i>duration</i> result of the conversion.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - If stri contains not a valid duration value.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)=(in_duration)"><h3>=</h3></a>
<p>
const func boolean: (in duration: aDuration1) <b>=</b> (in duration: aDuration2)</p><dl><dd>
<p>
Check if two <i>duration</i> values are equal.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE if both durations are equal, FALSE otherwise.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)&lt;>(in_duration)"><h3>&lt;></h3></a>
<p>
const func boolean: (in duration: aDuration1) <b>&lt;></b> (in duration: aDuration2)</p><dl><dd>
<p>
Check if two <i>duration</i> values are not equal.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>FALSE if both durations are equal, TRUE otherwise.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)&lt;=(in_duration)"><h3>&lt;=</h3></a>
<p>
const func boolean: (in duration: aDuration1) <b>&lt;=</b> (in duration: aDuration2)</p><dl><dd>
<p>
Check if <i>aDuration1</i> is less than or equal to <i>aDuration2</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE if <i>aDuration1</i> is less than or equal to <i>aDuration2</i>,         FALSE otherwise.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)>=(in_duration)"><h3>>=</h3></a>
<p>
const func boolean: (in duration: aDuration1) <b>>=</b> (in duration: aDuration2)</p><dl><dd>
<p>
Check if <i>aDuration1</i> is greater than or equal to <i>aDuration2</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE if <i>aDuration1</i> is greater than or equal to <i>aDuration2</i>,         FALSE otherwise.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)&lt;(in_duration)"><h3>&lt;</h3></a>
<p>
const func boolean: (in duration: aDuration1) <b>&lt;</b> (in duration: aDuration2)</p><dl><dd>
<p>
Check if <i>aDuration1</i> is less than <i>aDuration2</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE if <i>aDuration1</i> is less than <i>aDuration2</i>,         FALSE otherwise.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)>(in_duration)"><h3>></h3></a>
<p>
const func boolean: (in duration: aDuration1) <b>></b> (in duration: aDuration2)</p><dl><dd>
<p>
Check if <i>aDuration1</i> is greater than <i>aDuration2</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE if <i>aDuration1</i> is greater than <i>aDuration2</i>,         FALSE otherwise.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="+(in_duration)"><h3>+</h3></a>
<p>
const func duration: <b>+</b> (in duration: aDuration)</p><dl><dd>
<p>
Plus sign for durations.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>its operand unchanged.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="-(in_duration)"><h3>-</h3></a>
<p>
const func duration: <b>-</b> (in duration: aDuration)</p><dl><dd>
<p>
Minus sign, negate a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the negated duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)+(in_duration)"><h3>+</h3></a>
<p>
const func duration: (in duration: aDuration1) <b>+</b> (in duration: aDuration2)</p><dl><dd>
<p>
Add two durations.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the sum of the two durations.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)-(in_duration)"><h3>-</h3></a>
<p>
const func duration: (in duration: aDuration1) <b>-</b> (in duration: aDuration2)</p><dl><dd>
<p>
Compute the subtraction of two durations.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the difference of the two durations.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_integer)*(in_duration)"><h3>*</h3></a>
<p>
const func duration: (in integer: number) <b>*</b> (in duration: aDuration)</p><dl><dd>
<p>
Multiply a duration by a number.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the multiplied duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_duration)*(in_integer)"><h3>*</h3></a>
<p>
const func duration: (in duration: aDuration) <b>*</b> (in integer: number)</p><dl><dd>
<p>
Multiply a duration by a number.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the multiplied duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(inout_duration)+:=(in_duration)"><h3>+:=</h3></a>
<p>
const proc: (inout duration: aDuration) <b>+:=</b> (in duration: delta)</p><dl><dd>
<p>
Increment a duration by a delta.
</p>
</dd>
</dl></div>
<hr />
<div><a name="(inout_duration)-:=(in_duration)"><h3>-:=</h3></a>
<p>
const proc: (inout duration: aDuration) <b>-:=</b> (in duration: delta)</p><dl><dd>
<p>
Decrement a duration by a delta.
</p>
</dd>
</dl></div>
<hr />
<div><a name="(inout_time)+:=(in_duration)"><h3>+:=</h3></a>
<p>
const proc: (inout time: tim) <b>+:=</b> (in duration: aDuration)</p><dl><dd>
<p>
Increment a <a class="link" href="time.htm" title="time">time</a> by a duration.
</p>
</dd>
</dl></div>
<hr />
<div><a name="(inout_time)-:=(in_duration)"><h3>-:=</h3></a>
<p>
const proc: (inout time: tim) <b>-:=</b> (in duration: aDuration)</p><dl><dd>
<p>
Decrement a <a class="link" href="time.htm" title="time">time</a> by a duration.
</p>
</dd>
</dl></div>
<hr />
<div><a name="(in_time)+(in_duration)"><h3>+</h3></a>
<p>
const func time: (in time: tim) <b>+</b> (in duration: aDuration)</p><dl><dd>
<p>
Add a duration to a <a class="link" href="time.htm" title="time">time</a>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the time result of the addition.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_time)-(in_duration)"><h3>-</h3></a>
<p>
const func time: (in time: tim) <b>-</b> (in duration: aDuration)</p><dl><dd>
<p>
Subtract a duration from a <a class="link" href="time.htm" title="time">time</a>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the time result of the subtraction.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="(in_time)-(in_time)"><h3>-</h3></a>
<p>
const func duration: (in time: tim1) <b>-</b> (in time: tim2)</p><dl><dd>
<p>
Subtract two <a class="link" href="time.htm" title="times">times</a>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration between the two points in time.</dd></dl></dd>
</dl></div>
<br /></div>
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="getYears(in_duration)"><h3>getYears</h3></a>
<p>
const func integer: <b>getYears</b> (in duration: aDuration)</p><dl><dd>
<p>
Obtain the years of a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the years of a duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getMonths(in_duration)"><h3>getMonths</h3></a>
<p>
const func integer: <b>getMonths</b> (in duration: aDuration)</p><dl><dd>
<p>
Obtain the months of a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the months of a duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getDays(in_duration)"><h3>getDays</h3></a>
<p>
const func integer: <b>getDays</b> (in duration: aDuration)</p><dl><dd>
<p>
Obtain the days of a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the days of a duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getHours(in_duration)"><h3>getHours</h3></a>
<p>
const func integer: <b>getHours</b> (in duration: aDuration)</p><dl><dd>
<p>
Obtain the hours of a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the hours of a duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getMinutes(in_duration)"><h3>getMinutes</h3></a>
<p>
const func integer: <b>getMinutes</b> (in duration: aDuration)</p><dl><dd>
<p>
Obtain the minutes of a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the minutes of a duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getSeconds(in_duration)"><h3>getSeconds</h3></a>
<p>
const func integer: <b>getSeconds</b> (in duration: aDuration)</p><dl><dd>
<p>
Obtain the seconds of a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the seconds of a duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getMicroSeconds(in_duration)"><h3>getMicroSeconds</h3></a>
<p>
const func integer: <b>getMicroSeconds</b> (in duration: aDuration)</p><dl><dd>
<p>
Obtain the micro seconds of a duration.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the micro seconds of a duration.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="str(in_duration)"><h3>str</h3></a>
<p>
const func string: <b>str</b> (in duration: aDuration)</p><dl><dd>
<p>
Convert a duration to a string.
The duration format is P[nY][nM][nD][T[nH][nM][n[.n]S]], where
n is a signed decimal of a date or time element.
</p>
<pre class="indent">
str(duration("P1Y2M3DT4H5M6S"))  returns  "P1Y2M3DT4H5M6S"
</pre>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the result of the conversion.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="literal(in_duration)"><h3>literal</h3></a>
<p>
const func string: <b>literal</b> (in duration: aDuration)</p><dl><dd>
<p>
Convert a duration to a duration literal.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration literal.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="duration(in_var_string)"><h3>duration</h3></a>
<p>
const func duration: <b>duration</b> (in var string: stri)</p><dl><dd>
<p>
Convert a string to a <i>duration</i>.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>stri</tt> - A duration in the format P[nY][nM][nD][T[nH][nM][n[.n]S]]</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the <i>duration</i> result of the conversion.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - If stri contains not a valid duration value.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="compare(in_duration,in_duration)"><h3>compare</h3></a>
<p>
const func integer: <b>compare</b> (in duration: aDuration1, in duration: aDuration2)</p><dl><dd>
<p>
Compares two durations.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>-1, 0 or 1 if the first argument is considered to be         respectively less than, equal to, or greater than the second.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="hashCode(in_duration)"><h3>hashCode</h3></a>
<p>
const func integer: <b>hashCode</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the hash value of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the hash value.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="toYears(in_duration)"><h3>toYears</h3></a>
<p>
const func integer: <b>toYears</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the years of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration in years.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="toMonths(in_duration)"><h3>toMonths</h3></a>
<p>
const func integer: <b>toMonths</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the months of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration in months.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="toDays(in_duration)"><h3>toDays</h3></a>
<p>
const func integer: <b>toDays</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the days of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration in days.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="toHours(in_duration)"><h3>toHours</h3></a>
<p>
const func integer: <b>toHours</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the hours of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration in hours.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="toMinutes(in_duration)"><h3>toMinutes</h3></a>
<p>
const func integer: <b>toMinutes</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the minutes of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration in minutes.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="toSeconds(in_duration)"><h3>toSeconds</h3></a>
<p>
const func integer: <b>toSeconds</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the seconds of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration in seconds.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="toMicroSeconds(in_duration)"><h3>toMicroSeconds</h3></a>
<p>
const func integer: <b>toMicroSeconds</b> (in duration: aDuration)</p><dl><dd>
<p>
Compute the micro seconds of <i>aDuration</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the duration in micro seconds.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="wait(in_duration)"><h3>wait</h3></a>
<p>
const proc: <b>wait</b> (in duration: aDuration)</p><dl><dd>
<p>
Wait for a given duration.
</p>
</dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/draw.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/echo.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
