<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Pixel image</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../demo.htm">Demo</a>
<a class="menu" href="../scrshots/index.htm">Screenshots</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive.htm">Archive</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="basearray.htm">Base idx array</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="bzip2.htm">Bzip2</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="compress.htm">Compress</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elf.htm">ELF</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="exif.htm">Exif</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="json.htm">JSON</a>
<a class="menu" href="json_serde.htm">JSON serialize</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="magic.htm">Magic numbers</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixelimage.htm">Pixel image</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="pbm.htm">PBM</a>
<a class="menu" href="pgm.htm">PGM</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="rpmext.htm">Rpm extension</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanjson.htm">Scan JSON</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="scantoml.htm">Scan TOML</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="struct_elem.htm">Struct element</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Pixel image</big></b></td>
<td align="right"><a class="link" href="../lib/pixelimage.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/pic_util.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/pixmap_file.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Types</td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#pixelImage">pixelImage</a></b></td></tr>
<tr><td width="30"></td><td>Two dimensional array of pixels.</td></tr></table></td></tr>
</table>
</div>
<div>
<div><a name="pixelImage"><h3>pixelImage</h3></a>
<p>
const type: <b>pixelImage</b></p><dl><dd>
<p>
Two dimensional array of pixels.
</p>
</dd>
</dl></div>
<br /></div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setPixels(inout_pixelArray,in_integer,in_integer,in_pixel)">setPixels</a></b> (inout pixelArray: imageLine, in integer: startColumn,
    in integer: stopColumn, in pixel: currentPixel)</td></tr>
<tr><td width="30"></td><td>Set pixels in an image line.</td></tr></table></td></tr>
<tr><td align="right" valign="top">PRIMITIVE_WINDOW</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getPixmap(ref_pixelImage)">getPixmap</a></b> (ref pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Create a new pixmap from a two-dimensional array of pixels.</td></tr></table></td></tr>
<tr><td align="right" valign="top">pixelImage</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getPixelImage(in_PRIMITIVE_WINDOW)">getPixelImage</a></b> (in PRIMITIVE_WINDOW: aWindow)</td></tr>
<tr><td width="30"></td><td>Get a two-dimensional array of pixels from <i>aWindow</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">pixelImage</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getRotated90(in_pixelImage)">getRotated90</a></b> (in pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Return <i>image</i> rotated by 90 degrees counterclockwise.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#rotate90(inout_pixelImage)">rotate90</a></b> (inout pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Rotate the given <i>image</i> by 90 degrees counterclockwise.</td></tr></table></td></tr>
<tr><td align="right" valign="top">pixelImage</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getRotated180(in_pixelImage)">getRotated180</a></b> (in pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Return <i>image</i> rotated by 180 degrees.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#rotate180(inout_pixelImage)">rotate180</a></b> (inout pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Rotate the given <i>image</i> by 180 degrees.</td></tr></table></td></tr>
<tr><td align="right" valign="top">pixelImage</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getRotated270(in_pixelImage)">getRotated270</a></b> (in pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Return <i>image</i> rotated by 270 degrees counterclockwise.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#rotate270(inout_pixelImage)">rotate270</a></b> (inout pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Rotate the given <i>image</i> by 270 degrees counterclockwise.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#mirrorHorizontally(inout_pixelImage)">mirrorHorizontally</a></b> (inout pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Mirror the given <i>image</i> horizontally.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#mirrorVertically(inout_pixelImage)">mirrorVertically</a></b> (inout pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Mirror the given <i>image</i> vertically.</td></tr></table></td></tr>
<tr><td align="right" valign="top">pixelImage</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getRotated90AndMirroredHorizontally(in_pixelImage)">getRotated90AndMirroredHorizontally</a></b> (in pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Return <i>image</i> rotated by 90 degrees counterclockwise and mirrored horizontally.</td></tr></table></td></tr>
<tr><td align="right" valign="top">pixelImage</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getRotated270AndMirroredHorizontally(in_pixelImage)">getRotated270AndMirroredHorizontally</a></b> (in pixelImage: image)</td></tr>
<tr><td width="30"></td><td>Return <i>image</i> rotated by 270 degrees counterclockwise and mirrored horizontally.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="setPixels(inout_pixelArray,in_integer,in_integer,in_pixel)"><h3>setPixels</h3></a>
<p>
const proc: <b>setPixels</b> (inout pixelArray: imageLine, in integer: startColumn,
    in integer: stopColumn, in pixel: currentPixel)</p><dl><dd>
<p>
Set pixels in an image line.
</p>
</dd>
</dl></div>
<hr />
<div><a name="getPixmap(ref_pixelImage)"><h3>getPixmap</h3></a>
<p>
const func PRIMITIVE_WINDOW: <b>getPixmap</b> (ref pixelImage: image)</p><dl><dd>
<p>
Create a new pixmap from a two-dimensional array of pixels.
The array of pixels might come from a image file.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>image</tt> - Pixel array with lines from top downward and columns from left to right.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the created pixmap.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getPixelImage(in_PRIMITIVE_WINDOW)"><h3>getPixelImage</h3></a>
<p>
const func pixelImage: <b>getPixelImage</b> (in PRIMITIVE_WINDOW: aWindow)</p><dl><dd>
<p>
Get a two-dimensional array of pixels from <i>aWindow</i>.
The array of pixels can be used to write the image to a file.
This is used by the function str(aWindow, PPM):
</p>
<pre class="indent">
image := getPixelImage(pixmap);
for line range 1 to height do
  for pix range image[line] do
    col := pixelToColor(pix);
    stri &amp;:= chr(col.redLight   mdiv 256);
    stri &amp;:= chr(col.greenLight mdiv 256);
    stri &amp;:= chr(col.blueLight  mdiv 256);
  end for;
end for;
</pre>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>aWindow</tt> - Window or pixmap source to create the array of pixels.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a pixel array with lines from top downward and columns from left to right.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getRotated90(in_pixelImage)"><h3>getRotated90</h3></a>
<p>
const func pixelImage: <b>getRotated90</b> (in pixelImage: image)</p><dl><dd>
<p>
Return <i>image</i> rotated by 90 degrees counterclockwise.
</p>
</dd>
</dl></div>
<hr />
<div><a name="rotate90(inout_pixelImage)"><h3>rotate90</h3></a>
<p>
const proc: <b>rotate90</b> (inout pixelImage: image)</p><dl><dd>
<p>
Rotate the given <i>image</i> by 90 degrees counterclockwise.
</p>
</dd>
</dl></div>
<hr />
<div><a name="getRotated180(in_pixelImage)"><h3>getRotated180</h3></a>
<p>
const func pixelImage: <b>getRotated180</b> (in pixelImage: image)</p><dl><dd>
<p>
Return <i>image</i> rotated by 180 degrees.
</p>
</dd>
</dl></div>
<hr />
<div><a name="rotate180(inout_pixelImage)"><h3>rotate180</h3></a>
<p>
const proc: <b>rotate180</b> (inout pixelImage: image)</p><dl><dd>
<p>
Rotate the given <i>image</i> by 180 degrees.
</p>
</dd>
</dl></div>
<hr />
<div><a name="getRotated270(in_pixelImage)"><h3>getRotated270</h3></a>
<p>
const func pixelImage: <b>getRotated270</b> (in pixelImage: image)</p><dl><dd>
<p>
Return <i>image</i> rotated by 270 degrees counterclockwise.
</p>
</dd>
</dl></div>
<hr />
<div><a name="rotate270(inout_pixelImage)"><h3>rotate270</h3></a>
<p>
const proc: <b>rotate270</b> (inout pixelImage: image)</p><dl><dd>
<p>
Rotate the given <i>image</i> by 270 degrees counterclockwise.
</p>
</dd>
</dl></div>
<hr />
<div><a name="mirrorHorizontally(inout_pixelImage)"><h3>mirrorHorizontally</h3></a>
<p>
const proc: <b>mirrorHorizontally</b> (inout pixelImage: image)</p><dl><dd>
<p>
Mirror the given <i>image</i> horizontally.
</p>
</dd>
</dl></div>
<hr />
<div><a name="mirrorVertically(inout_pixelImage)"><h3>mirrorVertically</h3></a>
<p>
const proc: <b>mirrorVertically</b> (inout pixelImage: image)</p><dl><dd>
<p>
Mirror the given <i>image</i> vertically.
</p>
</dd>
</dl></div>
<hr />
<div><a name="getRotated90AndMirroredHorizontally(in_pixelImage)"><h3>getRotated90AndMirroredHorizontally</h3></a>
<p>
const func pixelImage: <b>getRotated90AndMirroredHorizontally</b> (in pixelImage: image)</p><dl><dd>
<p>
Return <i>image</i> rotated by 90 degrees counterclockwise and mirrored horizontally.
This is the same as mirroring vertically and rotating by 90 degrees conterclockwise.
</p>
</dd>
</dl></div>
<hr />
<div><a name="getRotated270AndMirroredHorizontally(in_pixelImage)"><h3>getRotated270AndMirroredHorizontally</h3></a>
<p>
const func pixelImage: <b>getRotated270AndMirroredHorizontally</b> (in pixelImage: image)</p><dl><dd>
<p>
Return <i>image</i> rotated by 270 degrees counterclockwise and mirrored horizontally.
This is the same as mirroring vertically and rotating by 270 degrees conterclockwise.
</p>
</dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/pic_util.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/pixmap_file.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
