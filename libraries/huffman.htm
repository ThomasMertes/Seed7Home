<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Huffman</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../scrshots/index.htm">Programs</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="json.htm">JSON</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="magic.htm">Magic numbers</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanjson.htm">Scan JSON</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Huffman</big></b></td>
<td align="right"><a class="link" href="../lib/huffman.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/http_response.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/ico.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">msbHuffmanTable</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#createHuffmanTableMsb(in_integer,in_array_integer,in_string)">createHuffmanTableMsb</a></b> (in integer: maximumCodeLength,
    in array integer: numberOfCodesWithLength, in string: huffmanValues)</td></tr>
<tr><td width="30"></td><td>Create a Huffman table for reading in MSB-First order.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getHuffmanSymbol(inout_msbBitStream,in_msbHuffmanTable)">getHuffmanSymbol</a></b> (inout msbBitStream: inBitStream,
    in msbHuffmanTable: table)</td></tr>
<tr><td width="30"></td><td>Get a huffman symbol from a <a class="link" href="bitdata.htm#msbBitStream" title="msbBitStream">msbBitStream</a> using the huffman <i>table</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">lsbHuffmanTable</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#createHuffmanTableLsb(in_array_integer)">createHuffmanTableLsb</a></b> (in array integer: codeLengths)</td></tr>
<tr><td width="30"></td><td>Create a Huffman table for reading in LSB-First order.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getHuffmanSymbol(inout_lsbBitStream,in_lsbHuffmanTable)">getHuffmanSymbol</a></b> (inout lsbBitStream: inBitStream,
    in lsbHuffmanTable: table)</td></tr>
<tr><td width="30"></td><td>Get a huffman symbol from a <a class="link" href="bitdata.htm#lsbBitStream" title="lsbBitStream">lsbBitStream</a> using the huffman <i>table</i>.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="createHuffmanTableMsb(in_integer,in_array_integer,in_string)"><h3>createHuffmanTableMsb</h3></a>
<p>
const func msbHuffmanTable: <b>createHuffmanTableMsb</b> (in integer: maximumCodeLength,
    in array integer: numberOfCodesWithLength, in string: huffmanValues)</p><dl><dd>
<p>
Create a Huffman table for reading in MSB-First order.
This Huffman encoding is used by <a class="link" href="jpeg.htm" title="JPEG">JPEG</a> files. It can happen that
<i>huffmanValues</i> contains the same value twice. In that case
the same symbol is encoded in two ways. This makes absolutely no
sense but it can happen. For that reason it is necessary to use
table.codeLengths with the same index as table.symbols.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>numberOfCodesWithLength</tt> - Array to map bit width to number                                of symbols that use this bit width.</dd>
<dd><tt>huffmanValues</tt> - String with symbols ordered by the bit width.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getHuffmanSymbol(inout_msbBitStream,in_msbHuffmanTable)"><h3>getHuffmanSymbol</h3></a>
<p>
const func integer: <b>getHuffmanSymbol</b> (inout msbBitStream: inBitStream,
    in msbHuffmanTable: table)</p><dl><dd>
<p>
Get a huffman symbol from a <a class="link" href="bitdata.htm#msbBitStream" title="msbBitStream">msbBitStream</a> using the huffman <i>table</i>.
The read direction is from MSB (most significant bit) to LSB (least significant bit).
The function peeks bits from <i>inBitStream</i>. By default <i>inBitStream</i> appends some
'\16#ff;' bytes to allow that bits can be peeked always.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>inBitStream</tt> - MSB orderd bit stream from which the bits are skipped.</dd>
<dd><tt>table</tt> - Huffman table defining the bit sequences that encode the symbols.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="createHuffmanTableLsb(in_array_integer)"><h3>createHuffmanTableLsb</h3></a>
<p>
const func lsbHuffmanTable: <b>createHuffmanTableLsb</b> (in array integer: codeLengths)</p><dl><dd>
<p>
Create a Huffman table for reading in LSB-First order.
This Huffman encoding is used by the deflate algorithm.
E.g.: The code lengths (in bits) of
</p>
<pre class="indent">
4 0 0 6 5 3 3 3 3 3 4 3 0 0 0 0 5 5 6
</pre>
<p>
describe that 0 is encoded with 4 bits, 3 with 6 bits, etc.
This leads to the following encoding lengths:
</p>
<pre class="indent">
length 3: (5, 6, 7, 8, 9, 11)
length 4: (0, 10)
length 5: (4, 16, 17)
length 6: (3, 18)
</pre>
<p>
Beginning with the lowest length the following encodings are generated:
</p>
<pre class="indent">
000: 5
001: 6
...
101: 11
</pre>
<p>
For the next length (4 instead of 3) the value is incremented and shifted:
</p>
<pre class="indent">
1100: 0
</pre>
<p>
The encoder should be able fetch the maximum length of bits and to
use it as index. In order to allow that the data must be transformed.
The bits must be flipped and all variants of higher bits must be added:
</p>
<pre class="indent">
000000 encodes 5
000001 encodes 9
000010 encodes 7
000011 encodes 0
000100 encodes 6
...
001000 encodes 5
001001 encodes 9
001010 encodes 7
...
</pre>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>codeLengths</tt> - Array to map the codes to the number of bits used                    to encode this code. Zero means: This code is not used.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getHuffmanSymbol(inout_lsbBitStream,in_lsbHuffmanTable)"><h3>getHuffmanSymbol</h3></a>
<p>
const func integer: <b>getHuffmanSymbol</b> (inout lsbBitStream: inBitStream,
    in lsbHuffmanTable: table)</p><dl><dd>
<p>
Get a huffman symbol from a <a class="link" href="bitdata.htm#lsbBitStream" title="lsbBitStream">lsbBitStream</a> using the huffman <i>table</i>.
The read direction is from LSB (least significant bit) to MSB (most significant bit).
The function peeks bits from <i>inBitStream</i>. By default <i>inBitStream</i> appends some
'\16#ff;' bytes to allow that bits can be peeked always.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>inBitStream</tt> - LSB orderd bit stream from which the bits are skipped.</dd>
<dd><tt>table</tt> - Huffman table defining the bit sequences that encode the symbols.</dd>
</dl></dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/http_response.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/ico.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
