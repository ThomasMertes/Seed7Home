<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Ar</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../demo.htm">Demo</a>
<a class="menu" href="../scrshots/index.htm">Screenshots</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="basearray.htm">Base idx array</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="compress.htm">Compress</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elf.htm">ELF</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="exif.htm">Exif</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="json.htm">JSON</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="magic.htm">Magic numbers</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixelimage.htm">Pixel image</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="pbm.htm">PBM</a>
<a class="menu" href="pgm.htm">PGM</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="rpmext.htm">Rpm extension</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanjson.htm">Scan JSON</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Ar</big></b></td>
<td align="right"><a class="link" href="../lib/ar.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/aes_gcm.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/arc4.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Types</td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#arArchive">arArchive</a></b></td></tr>
<tr><td width="30"></td><td><a class="link" href="filesys.htm#fileSys" title="FileSys">FileSys</a> implementation type to access an AR archive.</td></tr></table></td></tr>
</table>
</div>
<div>
<div><a name="arArchive"><h3>arArchive</h3></a>
<p>
const type: <b>arArchive</b></p><dl><dd>
<p>
<a class="link" href="filesys.htm#fileSys" title="FileSys">FileSys</a> implementation type to access an AR archive.
File paths in an AR archive can be absolute (they start with a slash)
or relative (they do not start with a slash). The ar file system does
not support the concept of a current working directory. The functions
chdir and getcwd are not supported by the ar file system. Absolute
and relative paths in an AR archive can be accessed directly.
Since "/" is just a normal path in an AR archive the root path of a
ar file system is "". Possible usages of ar file system functions are:
</p>
<pre class="indent">
 getMTime(anArArchive, "src/drivers")   # Relative path in the archive.
 fileType(anArArchive, "/usr/include")  # Absolute path in the archive.
 fileSize(anArArchive, "/image")        # Absolute path in the archive.
 readDir(anArArchive, "")               # Return e.g.: "src" and "/"
 readDir(anArArchive, "/")              # Return e.g.: "usr" and "image"
</pre>
</dd>
</dl></div>
<br /></div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">fileSys</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openAr(inout_file)">openAr</a></b> (inout file: arFile)</td></tr>
<tr><td width="30"></td><td>Open an AR archive with the given arFile.</td></tr></table></td></tr>
<tr><td align="right" valign="top">fileSys</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openAr(in_string)">openAr</a></b> (in string: arFileName)</td></tr>
<tr><td width="30"></td><td>Open an AR archive with the given arFileName.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#close(inout_arArchive)">close</a></b> (inout arArchive: ar)</td></tr>
<tr><td width="30"></td><td>Close an AR archive. The AR file below stays open.</td></tr></table></td></tr>
<tr><td align="right" valign="top">array string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#readDir(inout_arArchive,in_string)">readDir</a></b> (inout arArchive: ar, in string: dirPath)</td></tr>
<tr><td width="30"></td><td>Determine the file names in a directory inside an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">array string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#readDir(inout_arArchive,RECURSIVE)">readDir</a></b> (inout arArchive: ar, RECURSIVE)</td></tr>
<tr><td width="30"></td><td>Determine the file paths in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">fileType</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#fileType(inout_arArchive,in_var_string)">fileType</a></b> (inout arArchive: ar, in var string: filePath)</td></tr>
<tr><td width="30"></td><td>Determine the type of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">fileType</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#fileTypeSL(inout_arArchive,in_string)">fileTypeSL</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Determine the type of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">fileMode</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getFileMode(inout_arArchive,in_string)">getFileMode</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Determine the file mode (permissions) of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setFileMode(inout_arArchive,in_string,in_fileMode)">setFileMode</a></b> (inout arArchive: ar, in string: filePath,
    in fileMode: mode)</td></tr>
<tr><td width="30"></td><td>Change the file mode (permissions) of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#fileSize(inout_arArchive,in_string)">fileSize</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Determine the size of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">time</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getMTime(inout_arArchive,in_string)">getMTime</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Determine the modification time of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setMTime(inout_arArchive,in_string,in_time)">setMTime</a></b> (inout arArchive: ar, in string: filePath,
    in time: modificationTime)</td></tr>
<tr><td width="30"></td><td>Set the modification time of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getOwner(inout_arArchive,in_string)">getOwner</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Determine the name of the owner (UID) of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setOwner(inout_arArchive,in_string,in_string)">setOwner</a></b> (inout arArchive: ar, in string: filePath,
    in string: owner)</td></tr>
<tr><td width="30"></td><td>Set the owner of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getGroup(inout_arArchive,in_string)">getGroup</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Determine the name of the group (GID) of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setGroup(inout_arArchive,in_string,in_string)">setGroup</a></b> (inout arArchive: ar, in string: filePath,
    in string: group)</td></tr>
<tr><td width="30"></td><td>Set the group of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">fileMode</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getFileMode(inout_arArchive,in_string,SYMLINK)">getFileMode</a></b> (inout arArchive: ar, in string: filePath, SYMLINK)</td></tr>
<tr><td width="30"></td><td>Determine the file mode (permissions) of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">time</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getMTime(inout_arArchive,in_string,SYMLINK)">getMTime</a></b> (inout arArchive: ar, in string: filePath, SYMLINK)</td></tr>
<tr><td width="30"></td><td>Determine the modification time of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setMTime(inout_arArchive,in_string,in_time,SYMLINK)">setMTime</a></b> (inout arArchive: ar, in string: filePath,
    in time: modificationTime, SYMLINK)</td></tr>
<tr><td width="30"></td><td>Set the modification time of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getOwner(inout_arArchive,in_string,SYMLINK)">getOwner</a></b> (inout arArchive: ar, in string: filePath, SYMLINK)</td></tr>
<tr><td width="30"></td><td>Determine the name of the owner (UID) of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setOwner(inout_arArchive,in_string,in_string,SYMLINK)">setOwner</a></b> (inout arArchive: ar, in string: filePath,
    in string: owner, SYMLINK)</td></tr>
<tr><td width="30"></td><td>Set the owner of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getGroup(inout_arArchive,in_string,SYMLINK)">getGroup</a></b> (inout arArchive: ar, in string: filePath, SYMLINK)</td></tr>
<tr><td width="30"></td><td>Determine the name of the group (GID) of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setGroup(inout_arArchive,in_string,in_string,SYMLINK)">setGroup</a></b> (inout arArchive: ar, in string: filePath,
    in string: group, SYMLINK)</td></tr>
<tr><td width="30"></td><td>Set the group of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#readLink(inout_arArchive,in_string)">readLink</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Reads the destination of a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#makeLink(inout_arArchive,in_string,in_string)">makeLink</a></b> (inout arArchive: ar, in string: symlinkPath,
    in string: targetPath)</td></tr>
<tr><td width="30"></td><td>Create a symbolic link in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getFile(inout_arArchive,in_string)">getFile</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Get the contents of a file in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#putFile(inout_arArchive,in_var_string,in_string)">putFile</a></b> (inout arArchive: ar, in var string: filePath,
    in string: data)</td></tr>
<tr><td width="30"></td><td>Write <i>data</i> to an AR archive with the given <i>filePath</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#makeDir(inout_arArchive,in_string)">makeDir</a></b> (inout arArchive: ar, in string: dirPath)</td></tr>
<tr><td width="30"></td><td>Create a new directory in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#removeFile(inout_arArchive,in_string)">removeFile</a></b> (inout arArchive: ar, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Remove any file except non-empty directories from an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#for(inout_string)range(inout_arArchive)do(in_proc)end_for">for</a></b> (inout string: filePath) range (inout arArchive: ar) do
              (in proc: statements)
            end for</td></tr>
<tr><td width="30"></td><td>For-loop which loops recursively over the paths in an AR archive.</td></tr></table></td></tr>
<tr><td align="right" valign="top">file</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#open(inout_arArchive,in_string,in_string)">open</a></b> (inout arArchive: ar, in string: filePath,
    in string: mode)</td></tr>
<tr><td width="30"></td><td>Open a file with <i>filePath</i> and <i>mode</i> in in an AR archive.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="openAr(inout_file)"><h3>openAr</h3></a>
<p>
const func fileSys: <b>openAr</b> (inout file: arFile)</p><dl><dd>
<p>
Open an AR archive with the given arFile.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>arFile</tt> - File that contains an AR archive.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a file system that accesses the AR archive.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="openAr(in_string)"><h3>openAr</h3></a>
<p>
const func fileSys: <b>openAr</b> (in string: arFileName)</p><dl><dd>
<p>
Open an AR archive with the given arFileName.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>arFileName</tt> - Name of the AR archive to be opened.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a file system that accesses the AR archive.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="close(inout_arArchive)"><h3>close</h3></a>
<p>
const proc: <b>close</b> (inout arArchive: ar)</p><dl><dd>
<p>
Close an AR archive. The AR file below stays open.
</p>
</dd>
</dl></div>
<hr />
<div><a name="readDir(inout_arArchive,in_string)"><h3>readDir</h3></a>
<p>
const func array string: <b>readDir</b> (inout arArchive: ar, in string: dirPath)</p><dl><dd>
<p>
Determine the file names in a directory inside an AR archive.
Note that the function returns only the file names.
Additional information must be obtained with other calls.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>ar</tt> - Open AR archive.</dd>
<dd><tt>dirPath</tt> - Path of a directory in the AR archive.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>an array with the file names.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>dirPath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>dirPath</i> is not present in the AR archive.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="readDir(inout_arArchive,RECURSIVE)"><h3>readDir</h3></a>
<p>
const func array string: <b>readDir</b> (inout arArchive: ar, RECURSIVE)</p><dl><dd>
<p>
Determine the file paths in an AR archive.
Note that the function returns only the file paths.
Additional information must be obtained with other calls.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>ar</tt> - Open AR archive.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>an array with the file paths.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="fileType(inout_arArchive,in_var_string)"><h3>fileType</h3></a>
<p>
const func fileType: <b>fileType</b> (inout arArchive: ar, in var string: filePath)</p><dl><dd>
<p>
Determine the type of a file in an AR archive.
The function does follow symbolic links. If the chain of
symbolic links is too long the function returns <i>FILE_SYMLINK</i>.
A return value of <i>FILE_ABSENT</i> does not imply that a file
with this name can be created, since missing directories and
invalid file names cause also <i>FILE_ABSENT</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the type of the file.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="fileTypeSL(inout_arArchive,in_string)"><h3>fileTypeSL</h3></a>
<p>
const func fileType: <b>fileTypeSL</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Determine the type of a file in an AR archive.
The function does not follow symbolic links. Therefore it may
return <i>FILE_SYMLINK</i>. A return value of <i>FILE_ABSENT</i> does
not imply that a file with this name can be created, since missing
directories and invalid file names cause also <i>FILE_ABSENT</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the type of the file.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getFileMode(inout_arArchive,in_string)"><h3>getFileMode</h3></a>
<p>
const func fileMode: <b>getFileMode</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Determine the file mode (permissions) of a file in an AR archive.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the file mode.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="setFileMode(inout_arArchive,in_string,in_fileMode)"><h3>setFileMode</h3></a>
<p>
const proc: <b>setFileMode</b> (inout arArchive: ar, in string: filePath,
    in fileMode: mode)</p><dl><dd>
<p>
Change the file mode (permissions) of a file in an AR archive.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="fileSize(inout_arArchive,in_string)"><h3>fileSize</h3></a>
<p>
const func integer: <b>fileSize</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Determine the size of a file in an AR archive.
The file size is measured in bytes.
For directories a size of 0 is returned.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the size of the file.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getMTime(inout_arArchive,in_string)"><h3>getMTime</h3></a>
<p>
const func time: <b>getMTime</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Determine the modification time of a file in an AR archive.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the modification time of the file.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="setMTime(inout_arArchive,in_string,in_time)"><h3>setMTime</h3></a>
<p>
const proc: <b>setMTime</b> (inout arArchive: ar, in string: filePath,
    in time: modificationTime)</p><dl><dd>
<p>
Set the modification time of a file in an AR archive.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>RANGE_ERROR</tt> - <i>aTime</i> is invalid or cannot be            converted to the system file time.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getOwner(inout_arArchive,in_string)"><h3>getOwner</h3></a>
<p>
const func string: <b>getOwner</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Determine the name of the owner (UID) of a file in an AR archive.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the name of the file owner.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive, or            the chain of symbolic links is too long.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="setOwner(inout_arArchive,in_string,in_string)"><h3>setOwner</h3></a>
<p>
const proc: <b>setOwner</b> (inout arArchive: ar, in string: filePath,
    in string: owner)</p><dl><dd>
<p>
Set the owner of a file in an AR archive.
The function follows symbolic links. The AR archive format allows
only a numeric UID. The <i>owner</i> "root" is mapped to the UID 0. Other
<i>owner</i> names raise a RANGE_ERROR.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation, or the <i>owner</i> cannot be mapped to a UID.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive, or            the chain of symbolic links is too long.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getGroup(inout_arArchive,in_string)"><h3>getGroup</h3></a>
<p>
const func string: <b>getGroup</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Determine the name of the group (GID) of a file in an AR archive.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the name of the file group.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive, or            the chain of symbolic links is too long.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="setGroup(inout_arArchive,in_string,in_string)"><h3>setGroup</h3></a>
<p>
const proc: <b>setGroup</b> (inout arArchive: ar, in string: filePath,
    in string: group)</p><dl><dd>
<p>
Set the group of a file in an AR archive.
The function follows symbolic links. The AR archive format allows
only a numeric GID. The <i>group</i> "root" is mapped to the GID 0. Other
<i>group</i> names raise a RANGE_ERROR.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation, or the <i>group</i> cannot be mapped to a GID.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive, or            the chain of symbolic links is too long.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getFileMode(inout_arArchive,in_string,SYMLINK)"><h3>getFileMode</h3></a>
<p>
const func fileMode: <b>getFileMode</b> (inout arArchive: ar, in string: filePath, SYMLINK)</p><dl><dd>
<p>
Determine the file mode (permissions) of a symbolic link in an AR archive.
The function only works for symbolic links and does not follow the
symbolic link.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the file mode.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - The file described with <i>filePath</i> is not            present in the AR archive, or it is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getMTime(inout_arArchive,in_string,SYMLINK)"><h3>getMTime</h3></a>
<p>
const func time: <b>getMTime</b> (inout arArchive: ar, in string: filePath, SYMLINK)</p><dl><dd>
<p>
Determine the modification time of a symbolic link in an AR archive.
The function only works for symbolic links and does not follow the
symbolic link.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the modification time of the symbolic link.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - The file described with <i>filePath</i> is not            present in the AR archive, or it is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="setMTime(inout_arArchive,in_string,in_time,SYMLINK)"><h3>setMTime</h3></a>
<p>
const proc: <b>setMTime</b> (inout arArchive: ar, in string: filePath,
    in time: modificationTime, SYMLINK)</p><dl><dd>
<p>
Set the modification time of a symbolic link in an AR archive.
The function only works for symbolic links and does not follow the
symbolic link.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>RANGE_ERROR</tt> - <i>modificationTime</i> is invalid or it cannot be            converted to the system file time.</dd>
<dd><tt>FILE_ERROR</tt> - The file described with <i>filePath</i> is not            present in the AR archive, or it is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getOwner(inout_arArchive,in_string,SYMLINK)"><h3>getOwner</h3></a>
<p>
const func string: <b>getOwner</b> (inout arArchive: ar, in string: filePath, SYMLINK)</p><dl><dd>
<p>
Determine the name of the owner (UID) of a symbolic link in an AR archive.
The function only works for symbolic links and does not follow the
symbolic link.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the name of the file owner.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - The file described with <i>filePath</i> is not            present in the AR archive, or it is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="setOwner(inout_arArchive,in_string,in_string,SYMLINK)"><h3>setOwner</h3></a>
<p>
const proc: <b>setOwner</b> (inout arArchive: ar, in string: filePath,
    in string: owner, SYMLINK)</p><dl><dd>
<p>
Set the owner of a symbolic link in an AR archive.
The function only works for symbolic links and does not follow the
symbolic link. The AR archive format allows only a numeric UID.
The <i>owner</i> "root" is mapped to the UID 0. Other <i>owner</i> names
raise a RANGE_ERROR.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation, or the <i>owner</i> cannot be mapped to a UID.</dd>
<dd><tt>FILE_ERROR</tt> - The file described with <i>filePath</i> is not            present in the AR archive, or it is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getGroup(inout_arArchive,in_string,SYMLINK)"><h3>getGroup</h3></a>
<p>
const func string: <b>getGroup</b> (inout arArchive: ar, in string: filePath, SYMLINK)</p><dl><dd>
<p>
Determine the name of the group (GID) of a symbolic link in an AR archive.
The function only works for symbolic links and does not follow the
symbolic link.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the name of the file group.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - The file described with <i>filePath</i> is not            present in the AR archive, or it is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="setGroup(inout_arArchive,in_string,in_string,SYMLINK)"><h3>setGroup</h3></a>
<p>
const proc: <b>setGroup</b> (inout arArchive: ar, in string: filePath,
    in string: group, SYMLINK)</p><dl><dd>
<p>
Set the group of a symbolic link in an AR archive.
The function only works for symbolic links and does not follow the
symbolic link. The AR archive format allows only a numeric GID.
The <i>group</i> "root" is mapped to the GID 0. Other <i>group</i> names
raise a RANGE_ERROR.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation, or the <i>group</i> cannot be mapped to a GID.</dd>
<dd><tt>FILE_ERROR</tt> - The file described with <i>filePath</i> is not            present in the AR archive, or it is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="readLink(inout_arArchive,in_string)"><h3>readLink</h3></a>
<p>
const func string: <b>readLink</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Reads the destination of a symbolic link in an AR archive.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>The destination referred by the symbolic link.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive,            or is not a symbolic link.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="makeLink(inout_arArchive,in_string,in_string)"><h3>makeLink</h3></a>
<p>
const proc: <b>makeLink</b> (inout arArchive: ar, in string: symlinkPath,
    in string: targetPath)</p><dl><dd>
<p>
Create a symbolic link in an AR archive.
The symbolic link <i>symlinkPath</i> will refer to <i>targetPath</i> afterwards.
The function does not follow symbolic links.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>ar</tt> - Open AR archive.</dd>
<dd><tt>symlinkPath</tt> - Name of the symbolic link to be created.</dd>
<dd><tt>targetPath</tt> - String to be contained in the symbolic link.</dd>
</dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>targetPath</i> or <i>symlinkPath</i> does not use the            standard path representation.</dd>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getFile(inout_arArchive,in_string)"><h3>getFile</h3></a>
<p>
const func string: <b>getFile</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Get the contents of a file in an AR archive.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the specified file as string.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - <i>filePath</i> is not present in the AR archive,            or is not a regular file.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="putFile(inout_arArchive,in_var_string,in_string)"><h3>putFile</h3></a>
<p>
const proc: <b>putFile</b> (inout arArchive: ar, in var string: filePath,
    in string: data)</p><dl><dd>
<p>
Write <i>data</i> to an AR archive with the given <i>filePath</i>.
If the file exists already, it is overwritten.
The function follows symbolic links.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="makeDir(inout_arArchive,in_string)"><h3>makeDir</h3></a>
<p>
const proc: <b>makeDir</b> (inout arArchive: ar, in string: dirPath)</p><dl><dd>
<p>
Create a new directory in an AR archive.
The function does not follow symbolic links.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>ar</tt> - Open AR archive.</dd>
<dd><tt>dirPath</tt> - Name of the directory to be created.</dd>
</dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>dirPath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - The file <i>dirPath</i> already exists.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="removeFile(inout_arArchive,in_string)"><h3>removeFile</h3></a>
<p>
const proc: <b>removeFile</b> (inout arArchive: ar, in string: filePath)</p><dl><dd>
<p>
Remove any file except non-empty directories from an AR archive.
The function does not follow symbolic links. An attempt to remove a
directory that is not empty triggers FILE_ERROR.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>ar</tt> - Open AR archive.</dd>
<dd><tt>filePath</tt> - Name of the file to be removed.</dd>
</dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - <i>filePath</i> does not use the standard path            representation.</dd>
<dd><tt>FILE_ERROR</tt> - The file does not exist or it is a directory            that is not empty.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="for(inout_string)range(inout_arArchive)do(in_proc)end_for"><h3>for</h3></a>
<p>
const proc: <b>for</b> (inout string: filePath) range (inout arArchive: ar) do
              (in proc: statements)
            end for</p><dl><dd>
<p>
For-loop which loops recursively over the paths in an AR archive.
</p>
</dd>
</dl></div>
<hr />
<div><a name="open(inout_arArchive,in_string,in_string)"><h3>open</h3></a>
<p>
const func file: <b>open</b> (inout arArchive: ar, in string: filePath,
    in string: mode)</p><dl><dd>
<p>
Open a file with <i>filePath</i> and <i>mode</i> in in an AR archive.
</p>
</dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/aes_gcm.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/arc4.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
