<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Ftp</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../scrshots/index.htm">Programs</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="json.htm">JSON</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="magic.htm">Magic numbers</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanjson.htm">Scan JSON</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Ftp</big></b></td>
<td align="right"><a class="link" href="../lib/ftp.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/forloop.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/getf.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Types</td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#ftpFileSys">ftpFileSys</a></b></td></tr>
<tr><td width="30"></td><td>Extended <a class="link" href="filesys.htm#fileSys" title="FileSys">FileSys</a> interface type for FTP file systems.</td></tr></table></td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#ftpConnection">ftpConnection</a></b></td></tr>
<tr><td width="30"></td><td><a class="link" href="#ftpFileSys" title="ftpFileSys">ftpFileSys</a> implementation type for a connection to a FTP server.</td></tr></table></td></tr>
</table>
</div>
<div>
<div><a name="ftpFileSys"><h3>ftpFileSys</h3></a>
<p>
const type: <b>ftpFileSys</b></p><dl><dd>
<p>
Extended <a class="link" href="filesys.htm#fileSys" title="FileSys">FileSys</a> interface type for FTP file systems.
This interface type allows access to FTP specific methods:
<a class="link" href="#listDir(inout_ftpConnection,in_string)" title=" listDir"> listDir</a>,
<a class="link" href="#getActiveMode(in_ftpConnection)" title="getActiveMode">getActiveMode</a>,
<a class="link" href="#setActiveMode(inout_ftpConnection,in_boolean)" title="setActiveMode">setActiveMode</a>,
<a class="link" href="#getAsciiTransfer(in_ftpConnection)" title="getAsciiTransfer">getAsciiTransfer</a>,
<a class="link" href="#setAsciiTransfer(inout_ftpConnection,in_boolean)" title="setAsciiTransfer">setAsciiTransfer</a>.
If this methods are not needed the interface type fileSys
can be used instead.
</p>
</dd>
</dl></div>
<hr />
<div><a name="ftpConnection"><h3>ftpConnection</h3></a>
<p>
const type: <b>ftpConnection</b></p><dl><dd>
<p>
<a class="link" href="#ftpFileSys" title="ftpFileSys">ftpFileSys</a> implementation type for a connection to a FTP server.
The file system methods trigger requests to the FTP server.
</p>
</dd>
</dl></div>
<br /></div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">ftpFileSys</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openFtp(in_string,in_string,in_string,in_integer)">openFtp</a></b> (in string: hostName, in string: user,
    in string: password, in integer: ftpControlPort)</td></tr>
<tr><td width="30"></td><td>Open a FTP file system at the specified host, user and port.</td></tr></table></td></tr>
<tr><td align="right" valign="top">ftpFileSys</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openFtp(in_string,in_string,in_string)">openFtp</a></b> (in string: hostName,
    in string: user, in string: password)</td></tr>
<tr><td width="30"></td><td>Open a FTP file system at the specified host and user.</td></tr></table></td></tr>
<tr><td align="right" valign="top">ftpFileSys</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openFtp(in_string,in_integer)">openFtp</a></b> (in string: connectStri, in integer: ftpControlPort)</td></tr>
<tr><td width="30"></td><td>Open a FTP file system with the specified <i>connectStri</i> and port.</td></tr></table></td></tr>
<tr><td align="right" valign="top">ftpFileSys</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#openFtp(in_string)">openFtp</a></b> (in string: connectStri)</td></tr>
<tr><td width="30"></td><td>Open a FTP file system with the specified <i>connectStri</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#close(inout_ftpConnection)">close</a></b> (inout ftpConnection: ftp)</td></tr>
<tr><td width="30"></td><td>Close a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">array string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#readDir(inout_ftpConnection,in_string)">readDir</a></b> (inout ftpConnection: ftp, in string: dirPath)</td></tr>
<tr><td width="30"></td><td>Determine the filenames in a directory, using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">array string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#listDir(inout_ftpConnection,in_string)">listDir</a></b> (inout ftpConnection: ftp, in string: dirPath)</td></tr>
<tr><td width="30"></td><td>Get a directory listing, using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#chdir(inout_ftpConnection,in_string)">chdir</a></b> (inout ftpConnection: ftp, in string: dirName)</td></tr>
<tr><td width="30"></td><td>Change the current working directory of a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getcwd(inout_ftpConnection)">getcwd</a></b> (inout ftpConnection: ftp)</td></tr>
<tr><td width="30"></td><td>Determine the current working directory of a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">fileType</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#fileType(inout_ftpConnection,in_string)">fileType</a></b> (inout ftpConnection: ftp, in string: fileName)</td></tr>
<tr><td width="30"></td><td>Determine the type of a file.</td></tr></table></td></tr>
<tr><td align="right" valign="top">fileType</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#fileTypeSL(inout_ftpConnection,in_string)">fileTypeSL</a></b> (inout ftpConnection: ftp, in string: fileName)</td></tr>
<tr><td width="30"></td><td>Determine the type of a file.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#fileSize(inout_ftpConnection,in_string)">fileSize</a></b> (inout ftpConnection: ftp, in string: fileName)</td></tr>
<tr><td width="30"></td><td>Determine the file size of a file.</td></tr></table></td></tr>
<tr><td align="right" valign="top">bigInteger</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#bigFileSize(inout_ftpConnection,in_string)">bigFileSize</a></b> (inout ftpConnection: ftp, in string: fileName)</td></tr>
<tr><td width="30"></td><td>Determine the file size of a file.</td></tr></table></td></tr>
<tr><td align="right" valign="top">time</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getMTime(inout_ftpConnection,in_string)">getMTime</a></b> (inout ftpConnection: ftp, in string: fileName)</td></tr>
<tr><td width="30"></td><td>Determine the modification time of a file.</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getActiveMode(in_ftpConnection)">getActiveMode</a></b> (in ftpConnection: ftp)</td></tr>
<tr><td width="30"></td><td>Get the data transfer mode.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setActiveMode(inout_ftpConnection,in_boolean)">setActiveMode</a></b> (inout ftpConnection: ftp, in boolean: activeMode)</td></tr>
<tr><td width="30"></td><td>Set the data transfer mode to active (=TRUE) or passive (=FALSE).</td></tr></table></td></tr>
<tr><td align="right" valign="top">boolean</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getAsciiTransfer(in_ftpConnection)">getAsciiTransfer</a></b> (in ftpConnection: ftp)</td></tr>
<tr><td width="30"></td><td>Get the file transfer type.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#setAsciiTransfer(inout_ftpConnection,in_boolean)">setAsciiTransfer</a></b> (inout ftpConnection: ftp, in boolean: asciiTransfer)</td></tr>
<tr><td width="30"></td><td>Set the file transfer type to ASCII (=TRUE) or BINARY (=FALSE).</td></tr></table></td></tr>
<tr><td align="right" valign="top">file</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#open(inout_ftpConnection,in_string,in_string)">open</a></b> (inout ftpConnection: ftp, in string: filePath,
    in string: mode)</td></tr>
<tr><td width="30"></td><td>Open a file with <i>filePath</i> and <i>mode</i> using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getFile(inout_ftpConnection,in_string)">getFile</a></b> (inout ftpConnection: ftp, in string: filePath)</td></tr>
<tr><td width="30"></td><td>Get the contents of file <i>filePath</i> using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#putFile(inout_ftpConnection,in_string,in_string)">putFile</a></b> (inout ftpConnection: ftp, in string: filePath,
    in string: stri)</td></tr>
<tr><td width="30"></td><td>Write <i>stri</i> to remote file <i>filePath</i> using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#removeFile(inout_ftpConnection,in_string)">removeFile</a></b> (inout ftpConnection: ftp, in string: fileName)</td></tr>
<tr><td width="30"></td><td>Remove a file using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#moveFile(inout_ftpConnection,in_string,in_string)">moveFile</a></b> (inout ftpConnection: ftp, in string: sourcePath, in string: destPath)</td></tr>
<tr><td width="30"></td><td>Rename a file using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#makeDir(inout_ftpConnection,in_string)">makeDir</a></b> (inout ftpConnection: ftp, in string: dirName)</td></tr>
<tr><td width="30"></td><td>Creates a directory on a remote host using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#rmdir(inout_ftpConnection,in_string)">rmdir</a></b> (inout ftpConnection: ftp, in string: dirName)</td></tr>
<tr><td width="30"></td><td>Deletes an empty directory using a FTP connection.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getFtp(in_string)">getFtp</a></b> (in string: location)</td></tr>
<tr><td width="30"></td><td>Get data specified by a <i>location</i> using the FTP protocol.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="openFtp(in_string,in_string,in_string,in_integer)"><h3>openFtp</h3></a>
<p>
const func ftpFileSys: <b>openFtp</b> (in string: hostName, in string: user,
    in string: password, in integer: ftpControlPort)</p><dl><dd>
<p>
Open a FTP file system at the specified host, user and port.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>hostName</tt> - Either a host name ("e.g.: "www.example.org"),                 or an IPv4 address in standard dot notation                 (e.g.: "192.0.2.235"), or an IPv6 address in                 colon notation.</dd>
<dd><tt>user</tt> - Username to be used for the login.</dd>
<dd><tt>password</tt> - Password to be used for the login.</dd>
<dd><tt>ftpControlPort</tt> - Port to be used for the control connection.                       FTP usually uses the port 21, but other                       ports can also be specified.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a file system that uses the FTP connection, or         fileSys.value if the connection to the remote host         could not be established.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="openFtp(in_string,in_string,in_string)"><h3>openFtp</h3></a>
<p>
const func ftpFileSys: <b>openFtp</b> (in string: hostName,
    in string: user, in string: password)</p><dl><dd>
<p>
Open a FTP file system at the specified host and user.
This function uses port 21.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>hostName</tt> - Either a host name ("e.g.: "www.example.org"),                 or an IPv4 address in standard dot notation                 (e.g.: "192.0.2.235"), or an IPv6 address in                 colon notation.</dd>
<dd><tt>user</tt> - Username to be used for the login.</dd>
<dd><tt>password</tt> - Password to be used for the login.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a file system that uses the FTP connection, or         fileSys.value if the connection to the remote host         could not be established.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="openFtp(in_string,in_integer)"><h3>openFtp</h3></a>
<p>
const func ftpFileSys: <b>openFtp</b> (in string: connectStri, in integer: ftpControlPort)</p><dl><dd>
<p>
Open a FTP file system with the specified <i>connectStri</i> and port.
The <i>connectStri</i> should be in the form
</p>
<pre class="indent">
user:password@hostName
</pre>
<p>
to specify user and password. If no password is specified the
password "anonymous" is used instead:
</p>
<pre class="indent">
user@hostName
</pre>
<p>
If no user and password are specified the user "anonymous" is
used together with the password "anonymous":
</p>
<pre class="indent">
hostName
</pre>
<p>
The <i>hostName</i> is either a host name ("e.g.: "www.example.org"),
or an IPv4 address in standard dot notation (e.g.: "192.0.2.235").
Operating systems supporting IPv6 may also accept an IPv6 address
in colon notation.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>connectStri</tt> - Connection string in one of the forms        user:password@hostName user@hostName or hostName        If no user is specified the user "anonymous" is used.        If no password is specified the password "anonymous" is used.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a file system that uses the FTP connection, or         fileSys.value if the connection to the remote host         could not be established.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="openFtp(in_string)"><h3>openFtp</h3></a>
<p>
const func ftpFileSys: <b>openFtp</b> (in string: connectStri)</p><dl><dd>
<p>
Open a FTP file system with the specified <i>connectStri</i>.
The <i>connectStri</i> should be in the form
</p>
<pre class="indent">
user:password@hostName
</pre>
<p>
to specify user and password. If no password is specified the
password "anonymous" is used instead:
</p>
<pre class="indent">
user@hostName
</pre>
<p>
If no user and password are specified the user "anonymous" is
used together with the password "anonymous":
</p>
<pre class="indent">
hostName
</pre>
<p>
This function uses the port 21 (defined as defaultFtpControlPort).
The <i>hostName</i> is either a host name ("e.g.: "www.example.org"),
or an IPv4 address in standard dot notation (e.g.: "192.0.2.235").
Operating systems supporting IPv6 may also accept an IPv6 address
in colon notation.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>connectStri</tt> - Connection string in one of the forms        user:password@hostName user@hostName or hostName        If no user is specified the user "anomymous" is used.        If no password is specified the password "anomymous" is used.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a file system that uses the FTP connection, or         fileSys.value if the connection to the remote host         could not be established.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="close(inout_ftpConnection)"><h3>close</h3></a>
<p>
const proc: <b>close</b> (inout ftpConnection: ftp)</p><dl><dd>
<p>
Close a FTP connection.
</p>
</dd>
</dl></div>
<hr />
<div><a name="readDir(inout_ftpConnection,in_string)"><h3>readDir</h3></a>
<p>
const func array string: <b>readDir</b> (inout ftpConnection: ftp, in string: dirPath)</p><dl><dd>
<p>
Determine the filenames in a directory, using a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>an array with the file names.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="listDir(inout_ftpConnection,in_string)"><h3>listDir</h3></a>
<p>
const func array string: <b>listDir</b> (inout ftpConnection: ftp, in string: dirPath)</p><dl><dd>
<p>
Get a directory listing, using a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>an array with the file names.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="chdir(inout_ftpConnection,in_string)"><h3>chdir</h3></a>
<p>
const proc: <b>chdir</b> (inout ftpConnection: ftp, in string: dirName)</p><dl><dd>
<p>
Change the current working directory of a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getcwd(inout_ftpConnection)"><h3>getcwd</h3></a>
<p>
const func string: <b>getcwd</b> (inout ftpConnection: ftp)</p><dl><dd>
<p>
Determine the current working directory of a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the current working directory as absolute path.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="fileType(inout_ftpConnection,in_string)"><h3>fileType</h3></a>
<p>
const func fileType: <b>fileType</b> (inout ftpConnection: ftp, in string: fileName)</p><dl><dd>
<p>
Determine the type of a file.
The function does follow symbolic links. Therefore it never
returns <i>FILE_SYMLINK</i>. A return value of <i>FILE_ABSENT</i> does
not imply that a file with this name can be created, since missing
directories and invalid file names cause also <i>FILE_ABSENT</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the type of the file.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="fileTypeSL(inout_ftpConnection,in_string)"><h3>fileTypeSL</h3></a>
<p>
const func fileType: <b>fileTypeSL</b> (inout ftpConnection: ftp, in string: fileName)</p><dl><dd>
<p>
Determine the type of a file.
Since in FTP symbolic links are not defined this function is
identical to fileType.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the type of the file.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="fileSize(inout_ftpConnection,in_string)"><h3>fileSize</h3></a>
<p>
const func integer: <b>fileSize</b> (inout ftpConnection: ftp, in string: fileName)</p><dl><dd>
<p>
Determine the file size of a file.
The file size is measured in bytes.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the size of the file.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="bigFileSize(inout_ftpConnection,in_string)"><h3>bigFileSize</h3></a>
<p>
const func bigInteger: <b>bigFileSize</b> (inout ftpConnection: ftp, in string: fileName)</p><dl><dd>
<p>
Determine the file size of a file.
The file size is measured in bytes.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the size of the file.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getMTime(inout_ftpConnection,in_string)"><h3>getMTime</h3></a>
<p>
const func time: <b>getMTime</b> (inout ftpConnection: ftp, in string: fileName)</p><dl><dd>
<p>
Determine the modification time of a file.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the modification time of the file.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - the modification time is not representable            in the type <i>time</i>.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getActiveMode(in_ftpConnection)"><h3>getActiveMode</h3></a>
<p>
const func boolean: <b>getActiveMode</b> (in ftpConnection: ftp)</p><dl><dd>
<p>
Get the data transfer mode.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE, if the transfer mode is active, or         FALSE, if the transfer mode is passive.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="setActiveMode(inout_ftpConnection,in_boolean)"><h3>setActiveMode</h3></a>
<p>
const proc: <b>setActiveMode</b> (inout ftpConnection: ftp, in boolean: activeMode)</p><dl><dd>
<p>
Set the data transfer mode to active (=TRUE) or passive (=FALSE).
By default passive mode is used.
</p>
</dd>
</dl></div>
<hr />
<div><a name="getAsciiTransfer(in_ftpConnection)"><h3>getAsciiTransfer</h3></a>
<p>
const func boolean: <b>getAsciiTransfer</b> (in ftpConnection: ftp)</p><dl><dd>
<p>
Get the file transfer type.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>TRUE, if the file transfer type is ASCII, or         FALSE, if the file transfer type is BINARY.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="setAsciiTransfer(inout_ftpConnection,in_boolean)"><h3>setAsciiTransfer</h3></a>
<p>
const proc: <b>setAsciiTransfer</b> (inout ftpConnection: ftp, in boolean: asciiTransfer)</p><dl><dd>
<p>
Set the file transfer type to ASCII (=TRUE) or BINARY (=FALSE).
By default binary transfer is used.
</p>
</dd>
</dl></div>
<hr />
<div><a name="open(inout_ftpConnection,in_string,in_string)"><h3>open</h3></a>
<p>
const func file: <b>open</b> (inout ftpConnection: ftp, in string: filePath,
    in string: mode)</p><dl><dd>
<p>
Open a file with <i>filePath</i> and <i>mode</i> using a FTP connection.
There are text modes and binary modes:
</p>
<ul>
<li>Binary modes:
<ul>
<li> "r"   Open file for reading.</li>
<li> "w"   Truncate to zero length or create file for writing.</li>
</ul>
</li>
<li>Text modes:
<ul>
<li> "rt"  Open file for reading.</li>
<li> "wt"  Truncate to zero length or create file for writing.</li>
</ul>
</li>
</ul>
<p>
No other FTP functions can be used while reading and writing
this file is going on. After this file has been closed other
FTP functions can be used.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - The <i>mode</i> is not one of the allowed            values or <i>path</i> does not use the standard path            representation</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getFile(inout_ftpConnection,in_string)"><h3>getFile</h3></a>
<p>
const func string: <b>getFile</b> (inout ftpConnection: ftp, in string: filePath)</p><dl><dd>
<p>
Get the contents of file <i>filePath</i> using a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the specified file as string.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="putFile(inout_ftpConnection,in_string,in_string)"><h3>putFile</h3></a>
<p>
const proc: <b>putFile</b> (inout ftpConnection: ftp, in string: filePath,
    in string: stri)</p><dl><dd>
<p>
Write <i>stri</i> to remote file <i>filePath</i> using a FTP connection.
If the file exists already, it is overwritten.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="removeFile(inout_ftpConnection,in_string)"><h3>removeFile</h3></a>
<p>
const proc: <b>removeFile</b> (inout ftpConnection: ftp, in string: fileName)</p><dl><dd>
<p>
Remove a file using a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="moveFile(inout_ftpConnection,in_string,in_string)"><h3>moveFile</h3></a>
<p>
const proc: <b>moveFile</b> (inout ftpConnection: ftp, in string: sourcePath, in string: destPath)</p><dl><dd>
<p>
Rename a file using a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="makeDir(inout_ftpConnection,in_string)"><h3>makeDir</h3></a>
<p>
const proc: <b>makeDir</b> (inout ftpConnection: ftp, in string: dirName)</p><dl><dd>
<p>
Creates a directory on a remote host using a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="rmdir(inout_ftpConnection,in_string)"><h3>rmdir</h3></a>
<p>
const proc: <b>rmdir</b> (inout ftpConnection: ftp, in string: dirName)</p><dl><dd>
<p>
Deletes an empty directory using a FTP connection.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - The remote host returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getFtp(in_string)"><h3>getFtp</h3></a>
<p>
const func string: <b>getFtp</b> (in string: location)</p><dl><dd>
<p>
Get data specified by a <i>location</i> using the FTP protocol.
The contents of the file "/Public/UNIDATA/UnicodeData.txt" can be
obtained from the computer <i>ftp.unicode.org</i> with:
</p>
<pre class="indent">
getFtp("ftp.unicode.org/Public/UNIDATA/UnicodeData.txt")
</pre>
<p>
User and password can be specified with:
</p>
<pre class="indent">
getFtp("user:password@www.example.org/pub/read_me.txt")
</pre>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>location</tt> - Url without ftp:// at the beginning.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the string of data found, or "" if nothing was found.</dd></dl></dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/forloop.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/getf.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
