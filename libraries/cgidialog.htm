<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Cgi dialog</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../scrshots/index.htm">Programs</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Cgi dialog</big></b></td>
<td align="right"><a class="link" href="../lib/cgidialog.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/cgi.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/char.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Types</td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#dialogElement">dialogElement</a></b></td></tr>
<tr><td width="30"></td><td>Interface type for dialog elements.</td></tr></table></td></tr>
</table>
</div>
<div>
<div><a name="dialogElement"><h3>dialogElement</h3></a>
<p>
const type: <b>dialogElement</b></p><dl><dd>
<p>
Interface type for dialog elements.
The dialogElement interface is implemented with <i>emptyDialog</i>,
<i>header</i>, <i>label</i>, <i>image</i>, <i>space</i>, <i>vspace</i>,
<i>textField</i>, <i>passwordField</i>, <i>textArea</i>, <i>checkbox</i>,
<i>radioButton</i>, <i>resetButton</i>, <i>submitButton</i>, <i>closeButton</i>.
</p>
</dd>
</dl></div>
<br /></div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Operator Summary</td></tr>
<tr><td align="right" valign="top">dialogSequenceBase</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2">(in dialogElement: element1) <b><a class="link" href="#(in_dialogElement)&amp;(in_dialogElement)">&amp;</a></b> (in dialogElement: element2)</td></tr>
<tr><td width="30"></td><td>Concatenate two dialogElements.</td></tr></table></td></tr>
</table>
</div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">header</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#header(in_integer,in_string)">header</a></b> (in integer: level, in string: name)</td></tr>
<tr><td width="30"></td><td>Create a header dialogElement with the given <i>level</i> and <i>name</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">label</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#label(in_string)">label</a></b> (in string: name)</td></tr>
<tr><td width="30"></td><td>Create a label dialogElement with the given <i>name</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">image</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#image(in_PRIMITIVE_WINDOW)">image</a></b> (in PRIMITIVE_WINDOW: pixmap)</td></tr>
<tr><td width="30"></td><td>Create an image dialogElement from a given <i>pixmap</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">space</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#space(in_integer)">space</a></b> (in integer: width)</td></tr>
<tr><td width="30"></td><td>Create a space dialogElement with the given <i>width</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">vspace</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#vspace(in_integer)">vspace</a></b> (in integer: height)</td></tr>
<tr><td width="30"></td><td>Create a vspace (vertical space) dialogElement with the given <i>height</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">textField</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#textField(in_string,in_integer)">textField</a></b> (in string: content, in integer: size)</td></tr>
<tr><td width="30"></td><td>Create a textField dialogElement with the given <i>content</i> and <i>size</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">passwordField</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#passwordField(in_string,in_integer)">passwordField</a></b> (in string: content, in integer: size)</td></tr>
<tr><td width="30"></td><td>Create a passwordField dialogElement with the given <i>content</i> and <i>size</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">textArea</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#textArea(in_integer,in_integer)">textArea</a></b> (in integer: rows, in integer: cols)</td></tr>
<tr><td width="30"></td><td>Create a textArea dialogElement with the given <i>rows</i> and <i>cols</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">checkbox</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#checkbox(in_string)">checkbox</a></b> (in string: name)</td></tr>
<tr><td width="30"></td><td>Create a checkbox dialogElement with the given <i>name</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">radioButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#radioButton(in_array_string)">radioButton</a></b> (in array string: labelList)</td></tr>
<tr><td width="30"></td><td>Create a radioButton dialogElement with the given <i>labelList</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">resetButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#resetButton(in_string)">resetButton</a></b> (in string: label)</td></tr>
<tr><td width="30"></td><td>Create a reset button dialogElement with a <a class="link" href="string.htm" title="string">string</a> <i>label</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">resetButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#resetButton(in_PRIMITIVE_WINDOW)">resetButton</a></b> (in PRIMITIVE_WINDOW: pixmap)</td></tr>
<tr><td width="30"></td><td>Create reset button dialogElement with a <i>pixmap</i> as label.</td></tr></table></td></tr>
<tr><td align="right" valign="top">resetButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#resetButton(in_dialogElement)">resetButton</a></b> (in dialogElement: element)</td></tr>
<tr><td width="30"></td><td>Create reset button dialogElement with a <i>dialogElement</i> as label.</td></tr></table></td></tr>
<tr><td align="right" valign="top">submitButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#submitButton(in_string)">submitButton</a></b> (in string: label)</td></tr>
<tr><td width="30"></td><td>Create a submit button dialogElement with a <a class="link" href="string.htm" title="string">string</a> <i>label</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">submitButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#submitButton(in_PRIMITIVE_WINDOW)">submitButton</a></b> (in PRIMITIVE_WINDOW: pixmap)</td></tr>
<tr><td width="30"></td><td>Create submit button dialogElement with a <i>pixmap</i> as label.</td></tr></table></td></tr>
<tr><td align="right" valign="top">submitButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#submitButton(in_dialogElement)">submitButton</a></b> (in dialogElement: element)</td></tr>
<tr><td width="30"></td><td>Create submit button dialogElement with a <i>dialogElement</i> as label.</td></tr></table></td></tr>
<tr><td align="right" valign="top">closeButton</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#closeButton(in_string)">closeButton</a></b> (in string: label)</td></tr>
<tr><td width="30"></td><td>Create a close button dialogElement with a <a class="link" href="string.htm" title="string">string</a> <i>label</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">selection</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#selection(in_integer,in_array_string)">selection</a></b> (in integer: size, in array string: labelList)</td></tr>
<tr><td width="30"></td><td>Create a selection dialogElement with a <i>size</i> and a <i>labelList</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">dialogElement</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#dialogSequence(in_dialogSequenceBase)">dialogSequence</a></b> (in dialogSequenceBase: sequence)</td></tr>
<tr><td width="30"></td><td>Create a dialogSequence dialogElement from a dialogSequenceBase.</td></tr></table></td></tr>
<tr><td align="right" valign="top">dialogElement</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#dialogSequence(in_dialogElement)">dialogSequence</a></b> (in dialogElement: element)</td></tr>
<tr><td width="30"></td><td>Create a dialogSequence dialogElement from a dialogSequenceBase.</td></tr></table></td></tr>
<tr><td align="right" valign="top">dialogElement</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#dialogColumn(in_dialogSequenceBase)">dialogColumn</a></b> (in dialogSequenceBase: sequence)</td></tr>
<tr><td width="30"></td><td>Create a dialogColumn dialogElement from a dialogSequenceBase.</td></tr></table></td></tr>
<tr><td align="right" valign="top">dialogElement</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#dialogRow(in_dialogSequenceBase)">dialogRow</a></b> (in dialogSequenceBase: sequence)</td></tr>
<tr><td width="30"></td><td>Create a dialogRow dialogElement from a dialogSequenceBase.</td></tr></table></td></tr>
<tr><td align="right" valign="top">dialogElement</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#dialogTable(in_dialogSequenceBase,in_array_dialogSequenceBase)">dialogTable</a></b> (in dialogSequenceBase: headers, in array dialogSequenceBase: sequenceArray)</td></tr>
<tr><td width="30"></td><td>Create a dialogTable dialogElement from an array dialogSequenceBase.</td></tr></table></td></tr>
<tr><td align="right" valign="top">dialogElement</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#dialogTable(in_dialogSequenceBase,in_tableDataStringArrayType)">dialogTable</a></b> (in dialogSequenceBase: headers,
    in tableDataStringArrayType: tableData)</td></tr>
<tr><td width="30"></td><td>Create a dialogTable dialogElement from an two dimensional string array.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Operator Detail</td></tr></table></p>
<div><a name="(in_dialogElement)&amp;(in_dialogElement)"><h3>&amp;</h3></a>
<p>
const func dialogSequenceBase: (in dialogElement: element1) <b>&amp;</b> (in dialogElement: element2)</p><dl><dd>
<p>
Concatenate two dialogElements.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a dialogSequenceBase dialogElement.</dd></dl></dd>
</dl></div>
<br /></div>
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="header(in_integer,in_string)"><h3>header</h3></a>
<p>
const func header: <b>header</b> (in integer: level, in string: name)</p><dl><dd>
<p>
Create a header dialogElement with the given <i>level</i> and <i>name</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a header dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="label(in_string)"><h3>label</h3></a>
<p>
const func label: <b>label</b> (in string: name)</p><dl><dd>
<p>
Create a label dialogElement with the given <i>name</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a label dialogElement with the <i>name</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="image(in_PRIMITIVE_WINDOW)"><h3>image</h3></a>
<p>
const func image: <b>image</b> (in PRIMITIVE_WINDOW: pixmap)</p><dl><dd>
<p>
Create an image dialogElement from a given <i>pixmap</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>an image dialogElement with the <i>pixmap</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="space(in_integer)"><h3>space</h3></a>
<p>
const func space: <b>space</b> (in integer: width)</p><dl><dd>
<p>
Create a space dialogElement with the given <i>width</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a space dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="vspace(in_integer)"><h3>vspace</h3></a>
<p>
const func vspace: <b>vspace</b> (in integer: height)</p><dl><dd>
<p>
Create a vspace (vertical space) dialogElement with the given <i>height</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a vspace dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="textField(in_string,in_integer)"><h3>textField</h3></a>
<p>
const func textField: <b>textField</b> (in string: content, in integer: size)</p><dl><dd>
<p>
Create a textField dialogElement with the given <i>content</i> and <i>size</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a textField dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="passwordField(in_string,in_integer)"><h3>passwordField</h3></a>
<p>
const func passwordField: <b>passwordField</b> (in string: content, in integer: size)</p><dl><dd>
<p>
Create a passwordField dialogElement with the given <i>content</i> and <i>size</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a passwordField dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="textArea(in_integer,in_integer)"><h3>textArea</h3></a>
<p>
const func textArea: <b>textArea</b> (in integer: rows, in integer: cols)</p><dl><dd>
<p>
Create a textArea dialogElement with the given <i>rows</i> and <i>cols</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a textArea dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="checkbox(in_string)"><h3>checkbox</h3></a>
<p>
const func checkbox: <b>checkbox</b> (in string: name)</p><dl><dd>
<p>
Create a checkbox dialogElement with the given <i>name</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a checkbox dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="radioButton(in_array_string)"><h3>radioButton</h3></a>
<p>
const func radioButton: <b>radioButton</b> (in array string: labelList)</p><dl><dd>
<p>
Create a radioButton dialogElement with the given <i>labelList</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a radioButton dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="resetButton(in_string)"><h3>resetButton</h3></a>
<p>
const func resetButton: <b>resetButton</b> (in string: label)</p><dl><dd>
<p>
Create a reset button dialogElement with a <a class="link" href="string.htm" title="string">string</a> <i>label</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a reset button dialogElement with the <i>label</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="resetButton(in_PRIMITIVE_WINDOW)"><h3>resetButton</h3></a>
<p>
const func resetButton: <b>resetButton</b> (in PRIMITIVE_WINDOW: pixmap)</p><dl><dd>
<p>
Create reset button dialogElement with a <i>pixmap</i> as label.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a reset button dialogElement with the <i>pixmap</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="resetButton(in_dialogElement)"><h3>resetButton</h3></a>
<p>
const func resetButton: <b>resetButton</b> (in dialogElement: element)</p><dl><dd>
<p>
Create reset button dialogElement with a <i>dialogElement</i> as label.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a reset button dialogElement with the <i>dialogElement</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="submitButton(in_string)"><h3>submitButton</h3></a>
<p>
const func submitButton: <b>submitButton</b> (in string: label)</p><dl><dd>
<p>
Create a submit button dialogElement with a <a class="link" href="string.htm" title="string">string</a> <i>label</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a submit button dialogElement with the <i>label</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="submitButton(in_PRIMITIVE_WINDOW)"><h3>submitButton</h3></a>
<p>
const func submitButton: <b>submitButton</b> (in PRIMITIVE_WINDOW: pixmap)</p><dl><dd>
<p>
Create submit button dialogElement with a <i>pixmap</i> as label.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a submit button dialogElement with the <i>pixmap</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="submitButton(in_dialogElement)"><h3>submitButton</h3></a>
<p>
const func submitButton: <b>submitButton</b> (in dialogElement: element)</p><dl><dd>
<p>
Create submit button dialogElement with a <i>dialogElement</i> as label.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a submit button dialogElement with the <i>dialogElement</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="closeButton(in_string)"><h3>closeButton</h3></a>
<p>
const func closeButton: <b>closeButton</b> (in string: label)</p><dl><dd>
<p>
Create a close button dialogElement with a <a class="link" href="string.htm" title="string">string</a> <i>label</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a close button dialogElement with the <i>label</i>.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="selection(in_integer,in_array_string)"><h3>selection</h3></a>
<p>
const func selection: <b>selection</b> (in integer: size, in array string: labelList)</p><dl><dd>
<p>
Create a selection dialogElement with a <i>size</i> and a <i>labelList</i>.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a selection dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="dialogSequence(in_dialogSequenceBase)"><h3>dialogSequence</h3></a>
<p>
const func dialogElement: <b>dialogSequence</b> (in dialogSequenceBase: sequence)</p><dl><dd>
<p>
Create a dialogSequence dialogElement from a dialogSequenceBase.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a dialogSequence dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="dialogSequence(in_dialogElement)"><h3>dialogSequence</h3></a>
<p>
const func dialogElement: <b>dialogSequence</b> (in dialogElement: element)</p><dl><dd>
<p>
Create a dialogSequence dialogElement from a dialogSequenceBase.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a dialogSequence dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="dialogColumn(in_dialogSequenceBase)"><h3>dialogColumn</h3></a>
<p>
const func dialogElement: <b>dialogColumn</b> (in dialogSequenceBase: sequence)</p><dl><dd>
<p>
Create a dialogColumn dialogElement from a dialogSequenceBase.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a dialogColumn dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="dialogRow(in_dialogSequenceBase)"><h3>dialogRow</h3></a>
<p>
const func dialogElement: <b>dialogRow</b> (in dialogSequenceBase: sequence)</p><dl><dd>
<p>
Create a dialogRow dialogElement from a dialogSequenceBase.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a dialogRow dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="dialogTable(in_dialogSequenceBase,in_array_dialogSequenceBase)"><h3>dialogTable</h3></a>
<p>
const func dialogElement: <b>dialogTable</b> (in dialogSequenceBase: headers, in array dialogSequenceBase: sequenceArray)</p><dl><dd>
<p>
Create a dialogTable dialogElement from an array dialogSequenceBase.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a dialogTable dialogElement.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="dialogTable(in_dialogSequenceBase,in_tableDataStringArrayType)"><h3>dialogTable</h3></a>
<p>
const func dialogElement: <b>dialogTable</b> (in dialogSequenceBase: headers,
    in tableDataStringArrayType: tableData)</p><dl><dd>
<p>
Create a dialogTable dialogElement from an two dimensional string array.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>a dialogTable dialogElement.</dd></dl></dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/cgi.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/char.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
