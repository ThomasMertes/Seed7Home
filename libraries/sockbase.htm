<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: Sockbase</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../demo.htm">Demo</a>
<a class="menu" href="../scrshots/index.htm">Screenshots</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="basearray.htm">Base idx array</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="compress.htm">Compress</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elf.htm">ELF</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="exif.htm">Exif</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="json.htm">JSON</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="magic.htm">Magic numbers</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixelimage.htm">Pixel image</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="pbm.htm">PBM</a>
<a class="menu" href="pgm.htm">PGM</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="rpmext.htm">Rpm extension</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanjson.htm">Scan JSON</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Sockbase</big></b></td>
<td align="right"><a class="link" href="../lib/sockbase.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/smtp.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/socket.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Types</td></tr>
<tr><td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#socketAddress">socketAddress</a></b></td></tr>
<tr><td width="30"></td><td>Abstract data type to store socket addresses.</td></tr></table></td></tr>
</table>
</div>
<div>
<div><a name="socketAddress"><h3>socketAddress</h3></a>
<p>
const type: <b>socketAddress</b></p><dl><dd>
<p>
Abstract data type to store socket addresses.
</p>
</dd>
</dl></div>
<br /></div>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#compare(in_socketAddress,in_socketAddress)">compare</a></b> (in socketAddress: addr1, in socketAddress: addr2)</td></tr>
<tr><td width="30"></td><td>Compare two socket addresses.</td></tr></table></td></tr>
<tr><td align="right" valign="top">integer</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#hashCode(in_socketAddress)">hashCode</a></b> (in socketAddress: address)</td></tr>
<tr><td width="30"></td><td>Compute the hash value of a socket address.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#numericAddress(in_socketAddress)">numericAddress</a></b> (in socketAddress: address)</td></tr>
<tr><td width="30"></td><td>Get the numeric (IP) address of the host at <i>address</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">socketAddress</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#inetSocketAddress(in_string,in_integer)">inetSocketAddress</a></b> (in string: hostName,
                                             in integer: port)</td></tr>
<tr><td width="30"></td><td>Create an internet socket address of a port at a host.</td></tr></table></td></tr>
<tr><td align="right" valign="top">socketAddress</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#inetSocketAddress(in_integer)">inetSocketAddress</a></b> (in integer: port)</td></tr>
<tr><td width="30"></td><td>Create an internet socket address of a port at localhost.</td></tr></table></td></tr>
<tr><td align="right" valign="top">socketAddress</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#inetListenerAddress(in_integer)">inetListenerAddress</a></b> (in integer: port)</td></tr>
<tr><td width="30"></td><td>Create an internet listener socket address of a port at localhost.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getHostname">getHostname</a></b></td></tr>
<tr><td width="30"></td><td>Determine the hostname.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#connect(in_PRIMITIVE_SOCKET,in_socketAddress)">connect</a></b> (in PRIMITIVE_SOCKET: aSocket,
                     in socketAddress: address)</td></tr>
<tr><td width="30"></td><td>Connect <i>aSocket</i> to the given <i>address</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">PRIMITIVE_SOCKET</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#accept(in_PRIMITIVE_SOCKET,inout_socketAddress)">accept</a></b> (in PRIMITIVE_SOCKET: listenerSocket,
                                     inout socketAddress: address)</td></tr>
<tr><td width="30"></td><td>Create a new accepted connection socket for <i>listenerSocket</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#bind(in_PRIMITIVE_SOCKET,in_socketAddress)">bind</a></b> (in PRIMITIVE_SOCKET: listenerSocket,
                  in socketAddress: address)</td></tr>
<tr><td width="30"></td><td>Assign the specified <i>address</i> to the <i>listenerSocket</i>.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#listen(in_PRIMITIVE_SOCKET,in_integer)">listen</a></b> (in PRIMITIVE_SOCKET: listenerSocket,
                    in integer: backlog)</td></tr>
<tr><td width="30"></td><td>Listen for socket connections and limit the incoming queue.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="compare(in_socketAddress,in_socketAddress)"><h3>compare</h3></a>
<p>
const func integer: <b>compare</b> (in socketAddress: addr1, in socketAddress: addr2)</p><dl><dd>
<p>
Compare two socket addresses.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>-1, 0 or 1 if the first argument is considered to be         respectively less than, equal to, or greater than the         second.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="hashCode(in_socketAddress)"><h3>hashCode</h3></a>
<p>
const func integer: <b>hashCode</b> (in socketAddress: address)</p><dl><dd>
<p>
Compute the hash value of a socket address.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the hash value.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="numericAddress(in_socketAddress)"><h3>numericAddress</h3></a>
<p>
const func string: <b>numericAddress</b> (in socketAddress: address)</p><dl><dd>
<p>
Get the numeric (IP) address of the host at <i>address</i>.
IPv4 addresses return the socketAddress in dot notation (e.g.:
"192.0.2.235") and IPv6 addresses return the socketAddress in
colon notation (e.g.: "fe80:0:0:0:202:b3ff:fe1e:8329").
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the IP address of the specified host.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>RANGE_ERROR</tt> - The address is neither AF_INET nor AF_INET6.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="inetSocketAddress(in_string,in_integer)"><h3>inetSocketAddress</h3></a>
<p>
const func socketAddress: <b>inetSocketAddress</b> (in string: hostName,
                                             in integer: port)</p><dl><dd>
<p>
Create an internet socket address of a port at a host.
The <i>hostName</i> is either a host name (e.g.: "www.example.org"),
or an IPv4 address in standard dot notation (e.g.: "192.0.2.235").
Operating systems supporting IPv6 may also accept an IPv6 address
in colon notation.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the internet socket address, and socketAddress.value if         the host cannot be found.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
<dd><tt>RANGE_ERROR</tt> - The port is not in the range 0 to 65535 or            hostName cannot be converted to the system string type.</dd>
<dd><tt>MEMORY_ERROR</tt> - Not enough memory to convert <i>hostName</i>.            to the system representation or not enough memory to            represent the result.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="inetSocketAddress(in_integer)"><h3>inetSocketAddress</h3></a>
<p>
const func socketAddress: <b>inetSocketAddress</b> (in integer: port)</p><dl><dd>
<p>
Create an internet socket address of a port at localhost.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the internet socket address.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
<dd><tt>RANGE_ERROR</tt> - The port is not in the range 0 to 65535.</dd>
<dd><tt>MEMORY_ERROR</tt> - Not enough memory to represent the result.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="inetListenerAddress(in_integer)"><h3>inetListenerAddress</h3></a>
<p>
const func socketAddress: <b>inetListenerAddress</b> (in integer: port)</p><dl><dd>
<p>
Create an internet listener socket address of a port at localhost.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the internet listener socket address.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
<dd><tt>RANGE_ERROR</tt> - The port is not in the range 0 to 65535.</dd>
<dd><tt>MEMORY_ERROR</tt> - Not enough memory to represent the result.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getHostname"><h3>getHostname</h3></a>
<p>
const func string: <b>getHostname</b></p><dl><dd>
<p>
Determine the hostname.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the hostname.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>MEMORY_ERROR</tt> - Not enough memory to represent the result.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="connect(in_PRIMITIVE_SOCKET,in_socketAddress)"><h3>connect</h3></a>
<p>
const proc: <b>connect</b> (in PRIMITIVE_SOCKET: aSocket,
                     in socketAddress: address)</p><dl><dd>
<p>
Connect <i>aSocket</i> to the given <i>address</i>.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="accept(in_PRIMITIVE_SOCKET,inout_socketAddress)"><h3>accept</h3></a>
<p>
const func PRIMITIVE_SOCKET: <b>accept</b> (in PRIMITIVE_SOCKET: listenerSocket,
                                     inout socketAddress: address)</p><dl><dd>
<p>
Create a new accepted connection socket for <i>listenerSocket</i>.
The function waits until at least one connection request is
in the sockets queue of pending connections. Then it extracts
the first connection request from the sockets queue. This
request is accepted and a connection socket is created for it.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the accepted connection socket.</dd></dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
<dd><tt>MEMORY_ERROR</tt> - An out of memory situation occurred.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="bind(in_PRIMITIVE_SOCKET,in_socketAddress)"><h3>bind</h3></a>
<p>
const proc: <b>bind</b> (in PRIMITIVE_SOCKET: listenerSocket,
                  in socketAddress: address)</p><dl><dd>
<p>
Assign the specified <i>address</i> to the <i>listenerSocket</i>.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>address</tt> - An internet listener socket address.</dd>
</dl></dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="listen(in_PRIMITIVE_SOCKET,in_integer)"><h3>listen</h3></a>
<p>
const proc: <b>listen</b> (in PRIMITIVE_SOCKET: listenerSocket,
                    in integer: backlog)</p><dl><dd>
<p>
Listen for socket connections and limit the incoming queue.
The <i>backlog</i> argument defines the maximum length to which
the queue of pending connections for <i>listenerSocket</i> may grow.
</p>
</dd>
<dd><dl><dt><b>Raises:</b></dt>
<dd><tt>FILE_ERROR</tt> - A system function returns an error.</dd>
</dl></dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/smtp.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/socket.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
