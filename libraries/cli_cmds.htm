<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Library: CLI commands</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../scrshots/index.htm">Programs</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Libraries</big></a>
<a class="menu" href="aes.htm">AES</a>
<a class="menu" href="aes_gcm.htm">AES GCM</a>
<a class="menu" href="ar.htm">Ar</a>
<a class="menu" href="arc4.htm">ARC4</a>
<a class="menu" href="archive_base.htm">Archive base</a>
<a class="menu" href="array.htm">Array</a>
<a class="menu" href="asn1.htm">ASN.1</a>
<a class="menu" href="basearray.htm">Base idx array</a>
<a class="menu" href="bigfile.htm">Bigfile</a>
<a class="menu" href="bigint.htm">Bigint</a>
<a class="menu" href="bigrat.htm">Bigrat</a>
<a class="menu" href="bin32.htm">Bin32</a>
<a class="menu" href="bin64.htm">Bin64</a>
<a class="menu" href="bitdata.htm">Bitdata</a>
<a class="menu" href="bitmapfont.htm">Bitmapfont</a>
<a class="menu" href="bitset.htm">Bitset</a>
<a class="menu" href="bitsetof.htm">Bitsetof</a>
<a class="menu" href="blowfish.htm">Blowfish</a>
<a class="menu" href="bmp.htm">BMP</a>
<a class="menu" href="boolean.htm">Boolean</a>
<a class="menu" href="browser.htm">Browser</a>
<a class="menu" href="bstring.htm">Bstring</a>
<a class="menu" href="bytedata.htm">Bytedata</a>
<a class="menu" href="cards.htm">Cards</a>
<a class="menu" href="category.htm">Category</a>
<a class="menu" href="cc_conf.htm">CC config</a>
<a class="menu" href="ccittfax.htm">CCITT Fax</a>
<a class="menu" href="cgi.htm">Cgi</a>
<a class="menu" href="cgidialog.htm">Cgi dialog</a>
<a class="menu" href="char.htm">Char</a>
<a class="menu" href="charsets.htm">Charsets</a>
<a class="menu" href="cipher.htm">Cipher</a>
<a class="menu" href="clib_file.htm">Clib_file</a>
<a class="menu" href="color.htm">Color</a>
<a class="menu" href="cli_cmds.htm">CLI commands</a>
<a class="menu" href="complex.htm">Complex</a>
<a class="menu" href="console.htm">Console</a>
<a class="menu" href="cpio.htm">Cpio</a>
<a class="menu" href="crc32.htm">Crc32</a>
<a class="menu" href="csv.htm">Csv</a>
<a class="menu" href="db_prop.htm">DB properties</a>
<a class="menu" href="deflate.htm">Deflate</a>
<a class="menu" href="des.htm">DES</a>
<a class="menu" href="dialog.htm">Dialog</a>
<a class="menu" href="dir.htm">Dir</a>
<a class="menu" href="draw.htm">Draw</a>
<a class="menu" href="duration.htm">Duration</a>
<a class="menu" href="echo.htm">Echo</a>
<a class="menu" href="editline.htm">Editline</a>
<a class="menu" href="elliptic.htm">Elliptic</a>
<a class="menu" href="enable_io.htm">Enable_io</a>
<a class="menu" href="encoding.htm">Encoding</a>
<a class="menu" href="enumeration.htm">Enumeration</a>
<a class="menu" href="environment.htm">Environment</a>
<a class="menu" href="external_file.htm">External_file</a>
<a class="menu" href="file.htm">File</a>
<a class="menu" href="filesys.htm">File system</a>
<a class="menu" href="fileutil.htm">File utilities</a>
<a class="menu" href="fixarray.htm">Fixed size array</a>
<a class="menu" href="float.htm">Float</a>
<a class="menu" href="font.htm">Font</a>
<a class="menu" href="forloop.htm">Forloop</a>
<a class="menu" href="ftp.htm">Ftp</a>
<a class="menu" href="getf.htm">Getf</a>
<a class="menu" href="gethttp.htm">Gethttp</a>
<a class="menu" href="gethttps.htm">Gethttps</a>
<a class="menu" href="gif.htm">GIF</a>
<a class="menu" href="graph.htm">Graph</a>
<a class="menu" href="graph_file.htm">Graph_file</a>
<a class="menu" href="gzip.htm">Gzip</a>
<a class="menu" href="hash.htm">Hash</a>
<a class="menu" href="hashsetof.htm">Hashsetof</a>
<a class="menu" href="hmac.htm">Hmac</a>
<a class="menu" href="html.htm">HTML</a>
<a class="menu" href="html_ent.htm">Html_ent</a>
<a class="menu" href="htmldom.htm">Htmldom</a>
<a class="menu" href="httpserv.htm">Httpserv</a>
<a class="menu" href="http_response.htm">Http response</a>
<a class="menu" href="huffman.htm">Huffman</a>
<a class="menu" href="ico.htm">ICO format</a>
<a class="menu" href="idxarray.htm">Idxarray</a>
<a class="menu" href="image.htm">Image</a>
<a class="menu" href="imagefile.htm">Image file</a>
<a class="menu" href="inflate.htm">Inflate</a>
<a class="menu" href="inifile.htm">Inifile</a>
<a class="menu" href="integer.htm">Integer</a>
<a class="menu" href="iobuffer.htm">I/O Buffer</a>
<a class="menu" href="jpeg.htm">JPEG</a>
<a class="menu" href="json.htm">JSON</a>
<a class="menu" href="keybd.htm">Keybd</a>
<a class="menu" href="keydescr.htm">Key descriptions</a>
<a class="menu" href="line.htm">Line</a>
<a class="menu" href="leb128.htm">LEB128</a>
<a class="menu" href="listener.htm">Listener</a>
<a class="menu" href="logfile.htm">Log file</a>
<a class="menu" href="lower.htm">Lower case filter</a>
<a class="menu" href="lzma.htm">LZMA</a>
<a class="menu" href="lzw.htm">LZW</a>
<a class="menu" href="magic.htm">Magic numbers</a>
<a class="menu" href="make.htm">Make</a>
<a class="menu" href="makedata.htm">Make data</a>
<a class="menu" href="math.htm">Math</a>
<a class="menu" href="mixarith.htm">Mixed arithmetic</a>
<a class="menu" href="more.htm">More filter</a>
<a class="menu" href="msgdigest.htm">Msgdigest</a>
<a class="menu" href="null_file.htm">Null_file</a>
<a class="menu" href="osfiles.htm">Osfiles</a>
<a class="menu" href="pem.htm">PEM</a>
<a class="menu" href="pic_util.htm">Picture utility</a>
<a class="menu" href="pixelimage.htm">Pixel image</a>
<a class="menu" href="pixmap_file.htm">Pixmap_file</a>
<a class="menu" href="pixmapfont.htm">Pixmapfont</a>
<a class="menu" href="pkcs1.htm">PKCS #1</a>
<a class="menu" href="png.htm">PNG</a>
<a class="menu" href="poll.htm">Poll</a>
<a class="menu" href="ppm.htm">PPM</a>
<a class="menu" href="process.htm">Process</a>
<a class="menu" href="progs.htm">Progs</a>
<a class="menu" href="propertyfile.htm">Propertyfile</a>
<a class="menu" href="rational.htm">Rational</a>
<a class="menu" href="reference.htm">Reference</a>
<a class="menu" href="ref_list.htm">Ref_list</a>
<a class="menu" href="rpm.htm">Rpm</a>
<a class="menu" href="scanfile.htm">Scanfile</a>
<a class="menu" href="scanjson.htm">Scan JSON</a>
<a class="menu" href="scanstri.htm">Scanstri</a>
<a class="menu" href="set.htm">Set</a>
<a class="menu" href="shell.htm">Shell</a>
<a class="menu" href="showtls.htm">Show TLS</a>
<a class="menu" href="smtp.htm">Smtp</a>
<a class="menu" href="sockbase.htm">Sockbase</a>
<a class="menu" href="socket.htm">Socket</a>
<a class="menu" href="sql_base.htm">SQL base</a>
<a class="menu" href="stars.htm">Stars</a>
<a class="menu" href="stdio.htm">Stdio</a>
<a class="menu" href="strifile.htm">Strifile</a>
<a class="menu" href="string.htm">String</a>
<a class="menu" href="stritext.htm">Stritext</a>
<a class="menu" href="subfile.htm">Sub file</a>
<a class="menu" href="subrange.htm">Subrange</a>
<a class="menu" href="tar.htm">Tar</a>
<a class="menu" href="tar_cmds.htm">Tar commands</a>
<a class="menu" href="tee.htm">Tee file</a>
<a class="menu" href="text.htm">Text</a>
<a class="menu" href="tiff.htm">Tiff</a>
<a class="menu" href="time.htm">Time</a>
<a class="menu" href="tls.htm">TLS/SSL</a>
<a class="menu" href="tdes.htm">Triple DES</a>
<a class="menu" href="unicode.htm">Unicode</a>
<a class="menu" href="upper.htm">Upper case filter</a>
<a class="menu" href="utf16.htm">Utf16</a>
<a class="menu" href="utf8.htm">Utf8</a>
<a class="menu" href="vectorfont.htm">Vectorfont</a>
<a class="menu" href="vector3d.htm">3D Vector</a>
<a class="menu" href="wildcard.htm">Wildcard</a>
<a class="menu" href="window.htm">Window</a>
<a class="menu" href="wrinum.htm">Wrinum</a>
<a class="menu" href="x509cert.htm">X.509</a>
<a class="menu" href="xmldom.htm">Xmldom</a>
<a class="menu" href="xml_ent.htm">Xml_ent</a>
<a class="menu" href="xz.htm">XZ</a>
<a class="menu" href="zip.htm">Zip</a>
<a class="menu" href="zstd.htm">Zstandard</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Libraries</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>CLI commands</big></b></td>
<td align="right"><a class="link" href="../lib/cli_cmds.htm">Source&nbsp;Code</a></td>
<td>
<table width="10">
</table>
</td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/color.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/complex.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<div><p></p>
<table width="100%" border="1" cellspacing="0" cellpadding="3">
<tr><td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF" colspan="2">
Function Summary</td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doRemoveCmd(in_array_string,in_boolean,in_boolean)">doRemoveCmd</a></b> (in array string: fileList,
    in boolean: recursive, in boolean: force)</td></tr>
<tr><td width="30"></td><td>Remove files and directories.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doCopyCmd(in_var_array_string,in_boolean,in_boolean,in_boolean)">doCopyCmd</a></b> (in var array string: fileList,
   in boolean: recursive, in boolean: overwriteExisting, in boolean: archive)</td></tr>
<tr><td width="30"></td><td>Copy files and directories.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doMoveCmd(in_var_array_string,in_boolean)">doMoveCmd</a></b> (in var array string: fileList,
    in boolean: overwriteExisting)</td></tr>
<tr><td width="30"></td><td>Move files and directories.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doMkdirCmd(in_array_string,in_boolean)">doMkdirCmd</a></b> (in array string: fileList,
    in boolean: parentDirs)</td></tr>
<tr><td width="30"></td><td>Make directories.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getUnixCommandParameter(inout_string)">getUnixCommandParameter</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Read a parameter for a Unix command from a 'string'.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getDosCommandParameter(inout_string)">getDosCommandParameter</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Read a parameter for a Dos command from a 'string'.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#getDosEchoParameter(inout_string)">getDosEchoParameter</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Read a parameter for the Dos echo command from a 'string'.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doRm(inout_string)">doRm</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Remove files and directories like the Unix rm command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doDel(inout_string)">doDel</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Remove files and directories like the DOS del command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doCp(inout_string)">doCp</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Copy files and directories like the Unix cp command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doCopy(inout_string)">doCopy</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Copy files and directories like the DOS copy command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doXCopy(inout_string)">doXCopy</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Copy files and directories like the DOS xcopy command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doMv(inout_string)">doMv</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Move files and directories like the Unix mv command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doMove(inout_string)">doMove</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Move files and directories like the DOS move command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doMkdir(inout_string)">doMkdir</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Make directories like the Unix mkdir command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doMd(inout_string)">doMd</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Make directories like the DOS md command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doPwd(inout_string)">doPwd</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Act like the Unix/DOS pwd (print working directory) command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">string</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doEcho(inout_string)">doEcho</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Act like the Unix/DOS echo (write text) command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doCd(inout_string)">doCd</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Change working directory like the Unix/DOS cd command.</td></tr></table></td></tr>
<tr><td align="right" valign="top">void</td>
<td><table border="0" cellspacing="0" cellpadding="0">
<tr><td colspan="2"><b><a class="link" href="#doMake(inout_string)">doMake</a></b> (inout string: parameters)</td></tr>
<tr><td width="30"></td><td>Act like the Unix make command.</td></tr></table></td></tr>
</table>
</div>
<br />
<div>
<p><table width="100%" border="1" cellspacing="0" cellpadding="2"><tr>
<td style="font-size: 22px; font-weight: bold; background-color: #C0C0FF">
Function Detail</td></tr></table></p>
<div><a name="doRemoveCmd(in_array_string,in_boolean,in_boolean)"><h3>doRemoveCmd</h3></a>
<p>
const proc: <b>doRemoveCmd</b> (in array string: fileList,
    in boolean: recursive, in boolean: force)</p><dl><dd>
<p>
Remove files and directories.
If errors occur messages are written to STD_OUT.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>fileList</tt> - List of files to be removed.</dd>
<dd><tt>recursive</tt> - TRUE if subdirectories should be                  removed recursively, FALSE otherwise.</dd>
<dd><tt>force</tt> - TRUE if absent files should not              trigger error messages, FALSE otherwise.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doCopyCmd(in_var_array_string,in_boolean,in_boolean,in_boolean)"><h3>doCopyCmd</h3></a>
<p>
const proc: <b>doCopyCmd</b> (in var array string: fileList,
   in boolean: recursive, in boolean: overwriteExisting, in boolean: archive)</p><dl><dd>
<p>
Copy files and directories.
The list of files must have at least two elements. If the
last element of the list is a directory the other files
are copied into this directory. If errors occur messages
are written to STD_OUT.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>fileList</tt> - List of files to be copied. The last                 element is the destination.</dd>
<dd><tt>recursive</tt> - TRUE if subdirectories should be                  copied recursively, FALSE otherwise.</dd>
<dd><tt>overwriteExisting</tt> - TRUE if existing files                          should be overwritten,                          FALSE otherwise.</dd>
<dd><tt>archive</tt> - TRUE if file properties should be                preserved, FALSE otherwise.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doMoveCmd(in_var_array_string,in_boolean)"><h3>doMoveCmd</h3></a>
<p>
const proc: <b>doMoveCmd</b> (in var array string: fileList,
    in boolean: overwriteExisting)</p><dl><dd>
<p>
Move files and directories.
The list of files must have at least two elements. If the
last element of the list is a directory the other files
are moved into this directory. If errors occur messages
are written to STD_OUT.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>fileList</tt> - List of files to be moved. The last                 element is the destination.</dd>
<dd><tt>overwriteExisting</tt> - TRUE if existing files                          should be overwritten,                          FALSE otherwise.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doMkdirCmd(in_array_string,in_boolean)"><h3>doMkdirCmd</h3></a>
<p>
const proc: <b>doMkdirCmd</b> (in array string: fileList,
    in boolean: parentDirs)</p><dl><dd>
<p>
Make directories.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>fileList</tt> - List of directories to be created.</dd>
<dd><tt>parentDirs</tt> - TRUE if parent directories should                   be created as needed, FALSE otherwise.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="getUnixCommandParameter(inout_string)"><h3>getUnixCommandParameter</h3></a>
<p>
const func string: <b>getUnixCommandParameter</b> (inout string: parameters)</p><dl><dd>
<p>
Read a parameter for a Unix command from a 'string'.
Unix parameters consist of unquoted and quoted parts. Quoted parts
can be quoted with single quotes (') or with double quotes (").
A single quoted part ends with the next single quote. A double
quoted part ends with unescaped double quotes. In a double quoted
part the sequences \" and \\ do not terminate the quoted part and
describe a double quote (") respectively a backslash (\). In an
unquoted part a backslash (\) can used to escape characters that
would otherwise have a special meaning. The backslash is ignored
and the character after it is added to the word. To represent a
backslash it must be doubled. When the function is called it is
assumed that parameters[1] contains the first character of the
parameter. When the function is left <i>parameters</i> is empty or
parameters[1] contains the character after the parameter.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the next parameter for a Unix command.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getDosCommandParameter(inout_string)"><h3>getDosCommandParameter</h3></a>
<p>
const func string: <b>getDosCommandParameter</b> (inout string: parameters)</p><dl><dd>
<p>
Read a parameter for a Dos command from a 'string'.
Dos parameters consist of unquoted and quoted parts. Quoted parts
start with a double quote (") and end with the next double quote.
In an unquoted part a caret (^) can used to escape characters that
would otherwise have a special meaning. The caret is ignored and
the character after it is added to the word. To represent a caret
it must be doubled. When the function is called it is assumed that
parameters[1] contains the first character of the parameter. When
the function is left 'parameters' is empty or parameters[1]
contains the character after the parameter.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the next parameter for a Dos command.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="getDosEchoParameter(inout_string)"><h3>getDosEchoParameter</h3></a>
<p>
const func string: <b>getDosEchoParameter</b> (inout string: parameters)</p><dl><dd>
<p>
Read a parameter for the Dos echo command from a 'string'.
Dos parameters consist of unquoted and quoted parts. Quoted parts
start with a double quote (") and end with the next double quote.
The starting and ending double quotes are part of the result.
In an unquoted part a caret (^) can used to escape characters that
would otherwise have a special meaning. The caret is ignored and
the character after it is added to the word. To represent a caret
it must be doubled. When the function is called it is assumed that
parameters[1] contains the first character of the parameter. When
the function is left 'parameters' is empty or parameters[1]
contains the character after the parameter.
</p>
</dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the next parameter for the Dos echo command.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="doRm(inout_string)"><h3>doRm</h3></a>
<p>
const proc: <b>doRm</b> (inout string: parameters)</p><dl><dd>
<p>
Remove files and directories like the Unix rm command.
The command accepts the options -r, -R and -f.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doDel(inout_string)"><h3>doDel</h3></a>
<p>
const proc: <b>doDel</b> (inout string: parameters)</p><dl><dd>
<p>
Remove files and directories like the DOS del command.
The command accepts the option /S.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doCp(inout_string)"><h3>doCp</h3></a>
<p>
const proc: <b>doCp</b> (inout string: parameters)</p><dl><dd>
<p>
Copy files and directories like the Unix cp command.
The command accepts the options -r, -R, -n, -a and -p.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doCopy(inout_string)"><h3>doCopy</h3></a>
<p>
const proc: <b>doCopy</b> (inout string: parameters)</p><dl><dd>
<p>
Copy files and directories like the DOS copy command.
The command accepts the option /Y.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doXCopy(inout_string)"><h3>doXCopy</h3></a>
<p>
const proc: <b>doXCopy</b> (inout string: parameters)</p><dl><dd>
<p>
Copy files and directories like the DOS xcopy command.
The command accepts the options /E, /O and /Y.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doMv(inout_string)"><h3>doMv</h3></a>
<p>
const proc: <b>doMv</b> (inout string: parameters)</p><dl><dd>
<p>
Move files and directories like the Unix mv command.
The command accepts the option -n.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doMove(inout_string)"><h3>doMove</h3></a>
<p>
const proc: <b>doMove</b> (inout string: parameters)</p><dl><dd>
<p>
Move files and directories like the DOS move command.
The command accepts the option /Y.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doMkdir(inout_string)"><h3>doMkdir</h3></a>
<p>
const proc: <b>doMkdir</b> (inout string: parameters)</p><dl><dd>
<p>
Make directories like the Unix mkdir command.
The command accepts the option -p.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doMd(inout_string)"><h3>doMd</h3></a>
<p>
const proc: <b>doMd</b> (inout string: parameters)</p><dl><dd>
<p>
Make directories like the DOS md command.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doPwd(inout_string)"><h3>doPwd</h3></a>
<p>
const func string: <b>doPwd</b> (inout string: parameters)</p><dl><dd>
<p>
Act like the Unix/DOS pwd (print working directory) command.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the current working directory.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="doEcho(inout_string)"><h3>doEcho</h3></a>
<p>
const func string: <b>doEcho</b> (inout string: parameters)</p><dl><dd>
<p>
Act like the Unix/DOS echo (write text) command.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
<dd><dl><dt><b>Returns:</b></dt>
<dd>the string that should be written.</dd></dl></dd>
</dl></div>
<hr />
<div><a name="doCd(inout_string)"><h3>doCd</h3></a>
<p>
const proc: <b>doCd</b> (inout string: parameters)</p><dl><dd>
<p>
Change working directory like the Unix/DOS cd command.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<hr />
<div><a name="doMake(inout_string)"><h3>doMake</h3></a>
<p>
const proc: <b>doMake</b> (inout string: parameters)</p><dl><dd>
<p>
Act like the Unix make command.
This library just contains a forward definition.
The actual definition of this function must be done
outside of this library.
</p>
</dd>
<dd><dl><dt><b>Parameters:</b></dt>
<dd><tt>parameters</tt> - Parameters (file names and options)                   of the command. The function                   removes the used parameters.</dd>
</dl></dd>
</dl></div>
<br /></div>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../libraries/color.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../libraries/complex.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
