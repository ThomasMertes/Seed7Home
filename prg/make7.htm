<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  make7.sd7     Make utility to manage the compilation process    *)</span>
<span class="comment">(*  Copyright (C) 2010 - 2014  Thomas Mertes                        *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is free software; you can redistribute it and/or   *)</span>
<span class="comment">(*  modify it under the terms of the GNU General Public License as  *)</span>
<span class="comment">(*  published by the Free Software Foundation; either version 2 of  *)</span>
<span class="comment">(*  the License, or (at your option) any later version.             *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is distributed in the hope that it will be useful, *)</span>
<span class="comment">(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)</span>
<span class="comment">(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)</span>
<span class="comment">(*  GNU General Public License for more details.                    *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU General Public       *)</span>
<span class="comment">(*  License along with this program; if not, write to the           *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


$ <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../prg/seed7_05.htm">seed7_05.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../prg/make.htm">make.s7i</a>"</span>;


<span class="keywd">const</span> <span class="type">type</span>: optionHash <span class="keywd">is</span> <span class="type">hash</span> <span class="type">[</span><span class="type">string</span><span class="type">]</span> <span class="type">string</span>;

<span class="keywd">const</span> <span class="type">proc</span>: main <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">integer</span>: number <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">string</span>: curr_arg <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">optionHash</span>: make_option <span class="keywd">is</span> optionHash.value;
    <span class="keywd">var</span> <span class="type">string</span>: makefile <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> stringHash: macros <span class="keywd">is</span> stringHash.value;
    <span class="keywd">var</span> <span class="type">integer</span>: equalPos <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">array</span> <span class="type">string</span>: targets <span class="keywd">is</span> 0 <span class="op">times</span> <span class="stri">""</span>;
    <span class="keywd">var</span> makeFlags: flags <span class="keywd">is</span> makeFlags.value;
    <span class="keywd">var</span> <span class="type">boolean</span>: okay <span class="keywd">is</span> TRUE;
  <span class="keywd">begin</span>
    number := 1;
    <span class="keywd">while</span> number &lt;= length(argv(PROGRAM)) <span class="keywd">do</span>
      curr_arg := argv(PROGRAM)[number];
      <span class="keywd">if</span> length(curr_arg) >= 2 <span class="op">and</span> curr_arg[1] = <span class="stri">'-'</span> <span class="keywd">then</span>
        <span class="keywd">if</span> curr_arg = <span class="stri">"-C"</span> <span class="op">and</span> number &lt; length(argv(PROGRAM)) <span class="keywd">then</span>
          incr(number);
          chdir(convDosPath(argv(PROGRAM)[number]));
        <span class="keywd">elsif</span> curr_arg = <span class="stri">"-f"</span> <span class="op">and</span> number &lt; length(argv(PROGRAM)) <span class="keywd">then</span>
          incr(number);
          make_option @:= [curr_arg[.. 2]] argv(PROGRAM)[number];
        <span class="keywd">else</span>
          make_option @:= [curr_arg[.. 2]] curr_arg[3 ..];
        <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">elsif</span> pos(curr_arg, <span class="stri">'='</span>) &lt;> 0 <span class="keywd">then</span>
        equalPos := pos(curr_arg, <span class="stri">'='</span>);
        macros @:= [curr_arg[.. pred(equalPos)]] curr_arg[succ(equalPos) ..];
      <span class="keywd">else</span>
        targets &amp;:= curr_arg;
      <span class="keywd">end</span> <span class="keywd">if</span>;
      incr(number);
    <span class="keywd">end</span> <span class="keywd">while</span>;
    <span class="keywd">if</span> <span class="stri">"-v"</span> <span class="op">in</span> make_option <span class="op">or</span> <span class="stri">"-h"</span> <span class="op">in</span> make_option <span class="op">or</span> <span class="stri">"-?"</span> <span class="op">in</span> make_option <span class="keywd">then</span>
      writeln(<span class="stri">"Make7 Version 1.0 - Make utility to manage the compilation process"</span>);
      writeln(<span class="stri">"Copyright (C) 2010 - 2014 Thomas Mertes"</span>);
      writeln(<span class="stri">"This is free software; see the source for copying conditions.  There is NO"</span>);
      writeln(<span class="stri">"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."</span>);
      writeln(<span class="stri">"Make7 is written in the Seed7 programming language"</span>);
      writeln(<span class="stri">"Homepage: http://seed7.sourceforge.net"</span>);
      writeln;
      writeln(<span class="stri">"usage: make7 [options] [targets]"</span>);
      writeln;
      writeln(<span class="stri">"Options:"</span>);
      writeln(<span class="stri">"  -C dir"</span>);
      writeln(<span class="stri">"     Change to dir before reading the makefile or doing anything else."</span>);
      writeln(<span class="stri">"  -f file"</span>);
      writeln(<span class="stri">"     Use file as a makefile."</span>);
      writeln(<span class="stri">"  -i"</span>);
      writeln(<span class="stri">"     Ignore all errors in commands executed."</span>);
      writeln(<span class="stri">"  -n"</span>);
      writeln(<span class="stri">"     Print the commands that would be executed, but do not execute them."</span>);
      writeln(<span class="stri">"  -s"</span>);
      writeln(<span class="stri">"     Silent operation. Do not print the commands as they are executed."</span>);
      writeln;
    <span class="keywd">else</span>
      <span class="keywd">if</span> <span class="stri">"-f"</span> <span class="op">in</span> make_option <span class="keywd">then</span>
        makefile := convDosPath(make_option[<span class="stri">"-f"</span>]);
      <span class="keywd">elsif</span> fileType(<span class="stri">"makefile"</span>) = FILE_REGULAR <span class="keywd">then</span>
        makefile := <span class="stri">"makefile"</span>;
      <span class="keywd">elsif</span> fileType(<span class="stri">"Makefile"</span>) = FILE_REGULAR <span class="keywd">then</span>
        makefile := <span class="stri">"Makefile"</span>;
      <span class="keywd">else</span>
        okay := FALSE;
        <span class="keywd">if</span> length(targets) = 0 <span class="keywd">then</span>
          writeln(<span class="stri">" *** Target missing and no makefile found."</span>);
        <span class="keywd">else</span>
          writeln(<span class="stri">" *** No makefile found."</span>);
        <span class="keywd">end</span> <span class="keywd">if</span>;
        writeln(<span class="stri">"Use  make7 -?  to get information about make7."</span>);
      <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">if</span> <span class="stri">"-i"</span> <span class="op">in</span> make_option <span class="keywd">then</span>
        incl(flags, ignoreErrors);
      <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">if</span> <span class="stri">"-n"</span> <span class="op">in</span> make_option <span class="keywd">then</span>
        incl(flags, dontExecute);
      <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">if</span> <span class="stri">"-s"</span> <span class="op">in</span> make_option <span class="keywd">then</span>
        incl(flags, silentMode);
      <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">if</span> okay <span class="keywd">then</span>
        <span class="keywd">block</span>
          make(makefile, targets, flags, macros);
        exception
          catch FILE_ERROR:
            writeln(<span class="stri">" *** Make7 terminated."</span>);
        <span class="keywd">end</span> <span class="keywd">block</span>;
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">end</span> <span class="keywd">if</span>;
  <span class="keywd">end</span> <span class="keywd">func</span>;
</pre>
</body>
</html>
