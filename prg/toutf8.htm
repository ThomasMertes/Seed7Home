<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  toutf8.sd7    Convert a file to UTF-8                           *)</span>
<span class="comment">(*  Copyright (C) 2006, 2010, 2015  Thomas Mertes                   *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is free software; you can redistribute it and/or   *)</span>
<span class="comment">(*  modify it under the terms of the GNU General Public License as  *)</span>
<span class="comment">(*  published by the Free Software Foundation; either version 2 of  *)</span>
<span class="comment">(*  the License, or (at your option) any later version.             *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is distributed in the hope that it will be useful, *)</span>
<span class="comment">(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)</span>
<span class="comment">(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)</span>
<span class="comment">(*  GNU General Public License for more details.                    *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU General Public       *)</span>
<span class="comment">(*  License along with this program; if not, write to the           *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


$ <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/seed7_05.htm">seed7_05.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/stdio.htm">stdio.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/osfiles.htm">osfiles.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/charsets.htm">charsets.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/utf8.htm">utf8.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/console.htm">console.s7i</a>"</span>;


<span class="keywd">const</span> <span class="type">proc</span>: main <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">string</span>: conv_name <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">string</span>: in_name <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">string</span>: out_name <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">file</span>: in_file <span class="keywd">is</span> STD_NULL;
    <span class="keywd">var</span> <span class="type">file</span>: out_file <span class="keywd">is</span> STD_NULL;
    <span class="keywd">var</span> <span class="type">string</span>: stri <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">char</span>: ch <span class="keywd">is</span> <span class="stri">' '</span>;
  <span class="keywd">begin</span>
    <span class="keywd">if</span> length(argv(PROGRAM)) >= 1 <span class="keywd">then</span>
      conv_name := argv(PROGRAM)[1];
      <span class="keywd">if</span> startsWith(conv_name, <span class="stri">"-"</span>) <span class="keywd">then</span>
        conv_name := conv_name[2 ..];
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">if</span> length(argv(PROGRAM)) &lt; 2 <span class="op">or</span> conv_name = <span class="stri">"?"</span> <span class="keywd">then</span>
      writeln(<span class="stri">"Toutf8 Version 1.0 - Convert a file to UTF-8"</span>);
      writeln(<span class="stri">"Copyright (C) 2006, 2010, 2015 Thomas Mertes"</span>);
      writeln(<span class="stri">"This is free software; see the source for copying conditions.  There is NO"</span>);
      writeln(<span class="stri">"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."</span>);
      writeln(<span class="stri">"Toutf8 is written in the Seed7 programming language"</span>);
      writeln(<span class="stri">"Homepage: https://seed7.net"</span>);
      writeln;
      writeln(<span class="stri">"usage: toutf8 -codepage infile [outfile]"</span>);
      writeln;
      writeln(<span class="stri">"Converts a file encoded with a codepage to UTF-8."</span>);
      writeln(<span class="stri">"The following codepages are supported:"</span>);
      writeln(<span class="stri">"  437, 708, 720, 737, 775, 850, 852, 855, 857, 858, 860, 861, 862, 863,"</span>);
      writeln(<span class="stri">"  864, 865, 866, 869, 874, 1125, 1250, 1251, 1252, 1253, 1254, 1255, 1256,"</span>);
      writeln(<span class="stri">"  1257, 1258, 8859-1, 8859-2, 8859-3, 8859-4, 8859-5, 8859-6, 8859-7,"</span>);
      writeln(<span class="stri">"  8859-8, 8859-9, 8859-10, 8859-11, 8859-13, 8859-14, 8859-15, 8859-16,"</span>);
      writeln(<span class="stri">"  latin-1, latin-2, latin-3, latin-4, latin-5, latin-6, latin-7, latin-8,"</span>);
      writeln(<span class="stri">"  latin-9, 037, 273, 277, 280, 285, 297, 500, 1047"</span>);
      writeln(<span class="stri">"The following IANA/MIME charset names are also accepted:"</span>);
      writeln(<span class="stri">"  ANSI_X3.4-1968, ARMSCII-8, ASCII, CP437, CP850, GEOSTD8, IBM437, IBM850,"</span>);
      writeln(<span class="stri">"  ISO_8859-1, ISO-8859-1, ISO-8859-2, ISO-8859-3, ISO-8859-4, ISO-8859-5,"</span>);
      writeln(<span class="stri">"  ISO-8859-6, ISO-8859-7, ISO-8859-8, ISO-8859-9, ISO-8859-10, ISO-8859-11,"</span>);
      writeln(<span class="stri">"  ISO-8859-13, ISO-8859-14, ISO-8859-15, ISO-8859-16, KOI8-R, KOI8-U,"</span>);
      writeln(<span class="stri">"  MACINTOSH, NS_4551-1, TIS-620, US-ASCII, UTF-16BE, UTF-16LE, UTF-7, UTF-8,"</span>);
      writeln(<span class="stri">"  UTF8, VISCII, WINDOWS-1250, WINDOWS-1251, WINDOWS-1252, WINDOWS-1253,"</span>);
      writeln(<span class="stri">"  WINDOWS-1254, WINDOWS-1255, WINDOWS-1256, WINDOWS-1257, WINDOWS-1258"</span>);
    <span class="keywd">else</span>
      in_name := convDosPath(argv(PROGRAM)[2]);
      <span class="keywd">if</span> length(argv(PROGRAM)) >= 3 <span class="keywd">then</span>
        out_name := argv(PROGRAM)[3];
      <span class="keywd">end</span> <span class="keywd">if</span>;
      in_file := open(in_name, <span class="stri">"r"</span>);
      <span class="keywd">if</span> in_file &lt;> STD_NULL <span class="keywd">then</span>
        stri := gets(in_file, length(in_file));
        close(in_file);
        <span class="keywd">if</span> conv_name = <span class="stri">"437"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_437);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"708"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_708);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"720"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_720);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"737"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_737);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"775"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_775);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"850"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_850);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"852"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_852);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"855"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_855);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"857"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_857);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"858"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_858);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"860"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_860);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"861"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_861);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"862"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_862);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"863"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_863);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"864"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_864);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"865"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_865);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"866"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_866);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"869"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_869);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"874"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_874);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1125"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1125);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1250"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1250);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1251"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1251);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1252"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1252);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1253"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1253);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1254"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1254);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1255"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1255);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1256"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1256);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1257"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1257);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1258"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1258);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-1"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-1"</span> <span class="keywd">then</span>
          noop;
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-2"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-2"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_2);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-3"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-3"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_3);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-4"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-4"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_4);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-5"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_5);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-6"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_6);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-7"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_7);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-8"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_8);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-9"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-5"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_9);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-10"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-6"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_10);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-11"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_11);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-13"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-7"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_13);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-14"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-8"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_14);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-15"</span> <span class="op">or</span>
              conv_name = <span class="stri">"latin-9"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_15);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"8859-16"</span> <span class="keywd">then</span>
          conv2unicode(stri, iso_8859_16);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"037"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_037);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"273"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_273);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"277"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_277);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"280"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_280);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"285"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_285);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"297"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_297);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"500"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_500);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"1047"</span> <span class="keywd">then</span>
          conv2unicode(stri, cp_1047);
        <span class="keywd">elsif</span> conv_name = <span class="stri">"UTF-16BE"</span> <span class="keywd">then</span>
          <span class="keywd">if</span> startsWith(stri, <span class="stri">"\254;\255;"</span>) <span class="keywd">then</span>
            stri := fromUtf16Be(stri[3 ..]);
          <span class="keywd">elsif</span> startsWith(stri, <span class="stri">"\255;\254;"</span>) <span class="keywd">then</span>
            stri := fromUtf16Le(stri[3 ..]);
          <span class="keywd">else</span>
            stri := fromUtf16Be(stri);
          <span class="keywd">end</span> <span class="keywd">if</span>;
        <span class="keywd">elsif</span> conv_name = <span class="stri">"UTF-16LE"</span> <span class="keywd">then</span>
          <span class="keywd">if</span> startsWith(stri, <span class="stri">"\255;\254;"</span>) <span class="keywd">then</span>
            stri := fromUtf16Le(stri[3 ..]);
          <span class="keywd">elsif</span> startsWith(stri, <span class="stri">"\254;\255;"</span>) <span class="keywd">then</span>
            stri := fromUtf16Be(stri[3 ..]);
          <span class="keywd">else</span>
            stri := fromUtf16Le(stri);
          <span class="keywd">end</span> <span class="keywd">if</span>;
        <span class="keywd">elsif</span> conv_name = <span class="stri">"UTF-7"</span> <span class="keywd">then</span>
          stri := fromUtf7(stri);
        <span class="keywd">else</span>
          <span class="keywd">block</span>
            conv2unicodeByName(stri, conv_name);
          exception
            catch RANGE_ERROR:
              writeln(<span class="stri">" *** Unsupported codepage: "</span> &lt;&amp; conv_name);
              writeln(<span class="stri">"Use the option -? for a list of codepages."</span>);
              stri := <span class="stri">""</span>;
          <span class="keywd">end</span> <span class="keywd">block</span>;
        <span class="keywd">end</span> <span class="keywd">if</span>;
        <span class="keywd">if</span> stri &lt;> <span class="stri">""</span> <span class="keywd">then</span>
          <span class="keywd">if</span> out_name &lt;> <span class="stri">""</span> <span class="keywd">then</span>
            out_file := openUtf8(out_name, <span class="stri">"w"</span>);
          <span class="keywd">else</span>
            out_file := STD_CONSOLE;
          <span class="keywd">end</span> <span class="keywd">if</span>;
          <span class="keywd">if</span> out_file &lt;> STD_NULL <span class="keywd">then</span>
            write(out_file, stri);
            close(out_file);
          <span class="keywd">end</span> <span class="keywd">if</span>;
        <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">end</span> <span class="keywd">if</span>;
  <span class="keywd">end</span> <span class="keywd">func</span>;
</pre>
</body>
</html>
