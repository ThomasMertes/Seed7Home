<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  bigfile.s7i   bigInteger versions of seek, tell and length      *)</span>
<span class="comment">(*  Copyright (C) 2006  Thomas Mertes                               *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This file is part of the Seed7 Runtime Library.                 *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is free software; you can             *)</span>
<span class="comment">(*  redistribute it and/or modify it under the terms of the GNU     *)</span>
<span class="comment">(*  Lesser General Public License as published by the Free Software *)</span>
<span class="comment">(*  Foundation; either version 2.1 of the License, or (at your      *)</span>
<span class="comment">(*  option) any later version.                                      *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is distributed in the hope that it    *)</span>
<span class="comment">(*  will be useful, but WITHOUT ANY WARRANTY; without even the      *)</span>
<span class="comment">(*  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR *)</span>
<span class="comment">(*  PURPOSE.  See the GNU Lesser General Public License for more    *)</span>
<span class="comment">(*  details.                                                        *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU Lesser General       *)</span>
<span class="comment">(*  Public License along with this program; if not, write to the    *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


<span class="keywd">include</span> <span class="stri">"<a class="lib" href="../prg/bigint.htm">bigint.s7i</a>"</span>;
<span class="keywd">include</span> <span class="stri">"<a class="lib" href="../prg/external_file.htm">external_file.s7i</a>"</span>;


<span class="comment">(* clib_file *)</span>

<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigLength (<span class="keywd">ref</span> <span class="type">clib_file</span>: aFile)           <span class="keywd">is</span> action <span class="stri">"FIL_BIG_LNG"</span>;
<span class="keywd">const</span> <span class="type">proc</span>: seek (<span class="keywd">ref</span> <span class="type">clib_file</span>: aFile, <span class="keywd">ref</span> <span class="type">bigInteger</span>: position) <span class="keywd">is</span> action <span class="stri">"FIL_BIG_SEEK"</span>;
<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigTell (<span class="keywd">ref</span> <span class="type">clib_file</span>: aFile)             <span class="keywd">is</span> action <span class="stri">"FIL_BIG_TELL"</span>;


<span class="comment">(* file *)</span>

<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigLength (<span class="keywd">ref</span> <span class="type">file</span>: aFile)           <span class="keywd">is</span> DYNAMIC;
<span class="keywd">const</span> <span class="type">proc</span>: seek (<span class="keywd">ref</span> <span class="type">file</span>: aFile, <span class="keywd">ref</span> <span class="type">bigInteger</span>: position) <span class="keywd">is</span> DYNAMIC;
<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigTell (<span class="keywd">ref</span> <span class="type">file</span>: aFile)             <span class="keywd">is</span> DYNAMIC;


<span class="comment">(* null_file *)</span>


<span class="comment">(**
 *  Obtain the length of a file.
 *  A [[null_file]] is not seekable, therefore FILE_ERROR is raised.
 *  Derived types of [[null_file]] need to override this function.
 *  @return nothing, because FILE_ERROR is always raised.
 *  @exception FILE_ERROR Is always raised, because a [[null_file]] is
 *             not seekable.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigLength (<span class="keywd">ref</span> <span class="type">null_file</span>: aFile) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">bigInteger</span>: length <span class="keywd">is</span> 0_;
  <span class="keywd">begin</span>
    raise FILE_ERROR;
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Set the current file position.
 *  A [[null_file]] is not seekable, therefore FILE_ERROR is raised.
 *  If a derived type is seekable it needs to override this function.
 *  @exception FILE_ERROR Is always raised, because a [[null_file]] is
 *             not seekable.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: seek (<span class="keywd">ref</span> <span class="type">null_file</span>: aFile, <span class="keywd">ref</span> <span class="type">bigInteger</span>: position) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    raise FILE_ERROR;
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Obtain the current file position.
 *  A [[null_file]] is not seekable, therefore FILE_ERROR is raised.
 *  If a derived type is seekable it needs to override this function.
 *  @return nothing, because FILE_ERROR is always raised.
 *  @exception FILE_ERROR Is always raised, because a [[null_file]] is
 *             not seekable.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigTell (<span class="keywd">ref</span> <span class="type">null_file</span>: aFile) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">bigInteger</span>: position <span class="keywd">is</span> 0_;
  <span class="keywd">begin</span>
    raise FILE_ERROR;
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(* external_file *)</span>


<span class="comment">(**
 *  Determine the size of a file and return it as bigInteger.
 *  The file length is measured in bytes.
 *  @return the size of the given file.
 *  @exception FILE_ERROR A system function returns an error or the
 *             file length reported by the system is negative.
 *  @exception MEMORY_ERROR Not enough memory to represent the result.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigLength (<span class="keywd">ref</span> <span class="type">external_file</span>: aFile) <span class="keywd">is</span>
  <span class="keywd">return</span> bigLength(aFile.ext_file);


<span class="comment">(**
 *  Set the current file position.
 *  The file position is measured in bytes from the start of the file.
 *  The first byte in the file has the position 1.
 *  @exception RANGE_ERROR The file position is negative or zero or
 *             the file position is not representable in the system
 *             file position type.
 *  @exception FILE_ERROR A system function returns an error.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: seek (<span class="keywd">ref</span> <span class="type">external_file</span>: aFile, <span class="op">in</span> <span class="type">bigInteger</span>: position) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    seek(aFile.ext_file, position);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Obtain the current file position.
 *  The file position is measured in bytes from the start of the file.
 *  The first byte in the file has the position 1.
 *  @return the current file position.
 *  @exception FILE_ERROR A system function returns an error or the
 *             file position reported by the system is negative.
 *  @exception MEMORY_ERROR Not enough memory to represent the result.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">bigInteger</span>: bigTell (<span class="keywd">ref</span> <span class="type">external_file</span>: aFile) <span class="keywd">is</span>
  <span class="keywd">return</span> bigTell(aFile.ext_file);
</pre>
</body>
</html>
