<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style1.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  image.s7i     Defines images, which are in a window             *)</span>
<span class="comment">(*  Copyright (C) 2012  Thomas Mertes                               *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This file is part of the Seed7 Runtime Library.                 *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is free software; you can             *)</span>
<span class="comment">(*  redistribute it and/or modify it under the terms of the GNU     *)</span>
<span class="comment">(*  Lesser General Public License as published by the Free Software *)</span>
<span class="comment">(*  Foundation; either version 2.1 of the License, or (at your      *)</span>
<span class="comment">(*  option) any later version.                                      *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is distributed in the hope that it    *)</span>
<span class="comment">(*  will be useful, but WITHOUT ANY WARRANTY; without even the      *)</span>
<span class="comment">(*  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR *)</span>
<span class="comment">(*  PURPOSE.  See the GNU Lesser General Public License for more    *)</span>
<span class="comment">(*  details.                                                        *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU Lesser General       *)</span>
<span class="comment">(*  Public License along with this program; if not, write to the    *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


<span class="comment">(**
 *  Type to describe on screen images.
 *  Images can be used to describe icons, cards and other items on
 *  the screen.
 *)</span>
<span class="keywd">const</span> <span class="type">type</span>: image <span class="keywd">is</span> sub object interface;


<span class="comment">(**
 *  Determine the width of an ''image''.
 *  @return the width of ''anImage''.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: width (<span class="op">in</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Determine the height of an ''image''.
 *  @return the height of ''anImage''.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: height (<span class="op">in</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Determine the x-position of an ''image''.
 *  @return the x-position of ''anImage''.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: xPos (<span class="op">in</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Determine the y-position of an ''image''.
 *  @return the y-position of ''anImage''.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: yPos (<span class="op">in</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Determine the window of an ''image''.
 *  The contents of the ''image'' can be changed, by drawing on the window.
 *  @return the window of ''anImage''.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">PRIMITIVE_WINDOW</span>: window (<span class="op">in</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Set the x- and y-positon of an ''image''.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: setPos (<span class="keywd">inout</span> <span class="type">image</span>: anImage, <span class="op">in</span> <span class="type">integer</span>: xPos, <span class="op">in</span> <span class="type">integer</span>: yPos) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Layers an ''image'' above all other windows.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: toTop (<span class="keywd">inout</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Layers an ''image'' below all other windows.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: toBottom (<span class="keywd">inout</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


<span class="comment">(**
 *  Determine the name of an ''image''.
 *  @return the name of ''anImage''.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">string</span>: str (<span class="op">in</span> <span class="type">image</span>: anImage) <span class="keywd">is</span> DYNAMIC;


enable_output(image);


<span class="keywd">const</span> <span class="type">type</span>: baseImage <span class="keywd">is</span> new <span class="keywd">struct</span>
    <span class="keywd">var</span> <span class="type">string</span>: name <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">PRIMITIVE_WINDOW</span>: window <span class="keywd">is</span> PRIMITIVE_WINDOW.value;
  <span class="keywd">end</span> <span class="keywd">struct</span>;


type_implements_interface(baseImage, image);


<span class="keywd">const</span> <span class="type">image</span>: (attr image) . value <span class="keywd">is</span> baseImage.value;


<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: width (<span class="op">in</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span>
  <span class="keywd">return</span> width(anImage.window);


<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: height (<span class="op">in</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span>
  <span class="keywd">return</span> height(anImage.window);


<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: xPos (<span class="op">in</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span>
  <span class="keywd">return</span> xPos(anImage.window);


<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: yPos (<span class="op">in</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span>
  <span class="keywd">return</span> yPos(anImage.window);


<span class="keywd">const</span> <span class="type">func</span> <span class="type">PRIMITIVE_WINDOW</span>: window (<span class="op">in</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span>
  <span class="keywd">return</span> anImage.window;


<span class="keywd">const</span> <span class="type">proc</span>: setPos (<span class="keywd">inout</span> <span class="type">baseImage</span>: anImage, <span class="op">in</span> <span class="type">integer</span>: xPos, <span class="op">in</span> <span class="type">integer</span>: yPos) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    setPos(anImage.window, xPos, yPos);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: toTop (<span class="keywd">inout</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    toTop(anImage.window);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: toBottom (<span class="keywd">inout</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    toBottom(anImage.window);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">func</span> <span class="type">string</span>: str (<span class="op">in</span> <span class="type">baseImage</span>: anImage) <span class="keywd">is</span>
  <span class="keywd">return</span> anImage.name;
</pre>
</body>
</html>
