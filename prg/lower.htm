<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style1.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  lower.s7i     Filter file which turns characters to lower case  *)</span>
<span class="comment">(*  Copyright (C) 1992, 1993, 1994, 2005, 2023  Thomas Mertes       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This file is part of the Seed7 Runtime Library.                 *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is free software; you can             *)</span>
<span class="comment">(*  redistribute it and/or modify it under the terms of the GNU     *)</span>
<span class="comment">(*  Lesser General Public License as published by the Free Software *)</span>
<span class="comment">(*  Foundation; either version 2.1 of the License, or (at your      *)</span>
<span class="comment">(*  option) any later version.                                      *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is distributed in the hope that it    *)</span>
<span class="comment">(*  will be useful, but WITHOUT ANY WARRANTY; without even the      *)</span>
<span class="comment">(*  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR *)</span>
<span class="comment">(*  PURPOSE.  See the GNU Lesser General Public License for more    *)</span>
<span class="comment">(*  details.                                                        *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU Lesser General       *)</span>
<span class="comment">(*  Public License along with this program; if not, write to the    *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


<span class="comment">(**
 *  [[file|File]] implementation type which turns characters to lower case.
 *  All data that is written to a ''lowerFile'' is converted to lower
 *  case and forwarded to the ''destFile''. All functions that read from
 *  ''lowerFile'' read from ''destFile'' instead and deliver the data
 *  after converting it to lower case.
 *)</span>
<span class="keywd">const</span> <span class="type">type</span>: lowerFile <span class="keywd">is</span> sub null_file <span class="keywd">struct</span>
    <span class="keywd">var</span> <span class="type">file</span>: destFile <span class="keywd">is</span> STD_NULL;
  <span class="keywd">end</span> <span class="keywd">struct</span>;


<span class="comment">(**
 *  Open a filter file which turns characters to lower case.
 *  All data that is written to a ''lowerFile'' is converted to lower
 *  case and forwarded to the ''destFile''. E.g.:
 *   lowerOutput := openLower(OUT);
 *   repeat
 *     write("Enter sentence: ");
 *     flush(OUT);
 *     readln(sentence);
 *     writeln(lowerOutput, sentence);
 *   until sentence = "";
 *  All functions that read from ''lowerFile'' read from ''destFile''
 *  instead and deliver the data after converting it to lower case.
 *  This can be used to allow upper and lower case commands:
 *   KEYBOARD := openLower(KEYBOARD);
 *   repeat
 *     write("command: ");
 *     flush(OUT);
 *     command := getc(KEYBOARD);
 *     writeln;
 *     ...
 *   until command = 'q';
 *  @param destFile File to which data is written or from which data is read.
 *  @return the ''lowerFile'' opened.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">file</span>: openLower (<span class="op">in</span> <span class="type">file</span>: destFile) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">file</span>: newFile <span class="keywd">is</span> STD_NULL;
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">lowerFile</span>: new_lowerFile <span class="keywd">is</span> lowerFile.value;
  <span class="keywd">begin</span>
    new_lowerFile.destFile := destFile;
    newFile := toInterface(new_lowerFile);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Write the [[string]] ''stri'' to ''outFile''.
 *  The characters are converted to lower case, before they are written.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: write (<span class="keywd">inout</span> <span class="type">lowerFile</span>: outFile, <span class="op">in</span> <span class="type">string</span>: stri) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    write(outFile.destFile, lower(stri));
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Write end-of-line to ''outFile''.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: writeln (<span class="keywd">inout</span> <span class="type">lowerFile</span>: outFile) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    writeln(outFile.destFile);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Write a [[string]] followed by end-of-line to ''outFile''.
 *  The characters are converted to lower case, before they are written.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: writeln (<span class="keywd">inout</span> <span class="type">lowerFile</span>: outFile, <span class="op">in</span> <span class="type">string</span>: stri) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    writeln(outFile.destFile, lower(stri));
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: moveLeft (<span class="keywd">inout</span> <span class="type">lowerFile</span>: outFile, <span class="op">in</span> <span class="type">string</span>: stri) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    moveLeft(outFile.destFile, stri);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: erase (<span class="keywd">inout</span> <span class="type">lowerFile</span>: outFile, <span class="op">in</span> <span class="type">string</span>: stri) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    erase(outFile.destFile, stri);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: cursorOn (<span class="keywd">inout</span> <span class="type">lowerFile</span>: outFile, <span class="op">in</span> <span class="type">char</span>: cursorChar) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    cursorOn(outFile.destFile, cursorChar);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: cursorOff (<span class="keywd">inout</span> <span class="type">lowerFile</span>: outFile, <span class="op">in</span> <span class="type">char</span>: cursorChar) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    cursorOff(outFile.destFile, cursorChar);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Read a [[string]] with a maximum length from a file.
 *  The characters read are converted to lower case.
 *  @return the string read and converted to lower case.
 *  @exception RANGE_ERROR The parameter ''maxLength'' is negative.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">string</span>: gets (<span class="keywd">inout</span> <span class="type">lowerFile</span>: inFile, <span class="op">in</span> <span class="type">integer</span>: maxLength) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">string</span>: stri <span class="keywd">is</span> <span class="stri">""</span>;
  <span class="keywd">begin</span>
    stri := lower(gets(inFile.destFile, maxLength));
  <span class="keywd">end</span> <span class="keywd">func</span>;
</pre>
</body>
</html>
