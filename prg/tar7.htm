<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  tar7.sd7      Tar archiving utility                             *)</span>
<span class="comment">(*  Copyright (C) 1994, 2004, 2005, 2010, 2012  Thomas Mertes       *)</span>
<span class="comment">(*  Copyright (C) 2013, 2019, 2020, 2023  Thomas Mertes             *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is free software; you can redistribute it and/or   *)</span>
<span class="comment">(*  modify it under the terms of the GNU General Public License as  *)</span>
<span class="comment">(*  published by the Free Software Foundation; either version 2 of  *)</span>
<span class="comment">(*  the License, or (at your option) any later version.             *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is distributed in the hope that it will be useful, *)</span>
<span class="comment">(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)</span>
<span class="comment">(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)</span>
<span class="comment">(*  GNU General Public License for more details.                    *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU General Public       *)</span>
<span class="comment">(*  License along with this program; if not, write to the           *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


$ <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/seed7_05.htm">seed7_05.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/tar_cmds.htm">tar_cmds.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/wildcard.htm">wildcard.s7i</a>"</span>;
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/console.htm">console.s7i</a>"</span>;


<span class="keywd">const</span> <span class="type">proc</span>: main <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">string</span>: option <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">char</span>: command <span class="keywd">is</span> <span class="stri">' '</span>;
    <span class="keywd">var</span> <span class="type">string</span>: tarFileName <span class="keywd">is</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">boolean</span>: do_view <span class="keywd">is</span> FALSE;
    <span class="keywd">var</span> <span class="type">boolean</span>: do_zip_unzip <span class="keywd">is</span> FALSE;
    <span class="keywd">var</span> <span class="type">boolean</span>: file_arg <span class="keywd">is</span> FALSE;
    <span class="keywd">var</span> <span class="type">array</span> <span class="type">string</span>: arg_list <span class="keywd">is</span> 0 <span class="op">times</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">array</span> <span class="type">string</span>: fileList <span class="keywd">is</span> 0 <span class="op">times</span> <span class="stri">""</span>;
    <span class="keywd">var</span> <span class="type">integer</span>: index <span class="keywd">is</span> 0;
  <span class="keywd">begin</span>
    OUT := STD_CONSOLE;
    <span class="keywd">if</span> length(argv(PROGRAM)) >= 1 <span class="keywd">then</span>
      option := argv(PROGRAM)[1];
      <span class="keywd">if</span> option[1] = <span class="stri">'-'</span> <span class="keywd">then</span>
        option := option [2 .. ];
      <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">if</span> option &lt;> <span class="stri">""</span> <span class="keywd">then</span>
        command := option[1];
      <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">if</span> command <span class="op">in</span> {<span class="stri">'t'</span>, <span class="stri">'x'</span>, <span class="stri">'c'</span>} <span class="keywd">then</span>
        option := option [2 .. ];
        <span class="keywd">while</span> option &lt;> <span class="stri">""</span> <span class="keywd">do</span>
          <span class="keywd">if</span> option[1] = <span class="stri">'v'</span> <span class="keywd">then</span>
            do_view := TRUE;
          <span class="keywd">end</span> <span class="keywd">if</span>;
          <span class="keywd">if</span> option[1] = <span class="stri">'z'</span> <span class="keywd">then</span>
            do_zip_unzip := TRUE;
          <span class="keywd">end</span> <span class="keywd">if</span>;
          <span class="keywd">if</span> option[1] = <span class="stri">'f'</span> <span class="keywd">then</span>
            file_arg := TRUE;
          <span class="keywd">end</span> <span class="keywd">if</span>;
          option := option [2 .. ];
        <span class="keywd">end</span> <span class="keywd">while</span>;
        <span class="keywd">if</span> file_arg <span class="keywd">then</span>
          <span class="keywd">if</span> length(argv(PROGRAM)) >= 2 <span class="keywd">then</span>
            tarFileName := convDosPath(argv(PROGRAM)[2]);
            arg_list := argv(PROGRAM)[3 .. ];
          <span class="keywd">else</span>
            writeln(<span class="stri">"tar7: The option 'f' needs a file name."</span>);
            command := <span class="stri">' '</span>;
          <span class="keywd">end</span> <span class="keywd">if</span>;
        <span class="keywd">else</span>
          writeln(<span class="stri">"tar7: The option 'f' is missing."</span>);
          command := <span class="stri">' '</span>;
          <span class="comment"># tarFileName := "/dev/flp";</span>
          <span class="comment"># arg_list := argv(PROGRAM)[2 .. ];</span>
        <span class="keywd">end</span> <span class="keywd">if</span>;
        <span class="keywd">case</span> command <span class="keywd">of</span>
          <span class="keywd">when</span> {<span class="stri">'t'</span>}:
            tarTell(tarFileName, arg_list, do_view, do_zip_unzip);
          <span class="keywd">when</span> {<span class="stri">'x'</span>}:
            tarXtract(tarFileName, arg_list, do_view, do_zip_unzip);
          <span class="keywd">when</span> {<span class="stri">'c'</span>}:
            <span class="keywd">for</span> <span class="keywd">key</span> index <span class="keywd">range</span> arg_list <span class="keywd">do</span>
              fileList &amp;:= findMatchingFiles(convDosPath(arg_list[index]));
            <span class="keywd">end</span> <span class="keywd">for</span>;
            tarCreate(tarFileName, fileList, do_view, do_zip_unzip);
        <span class="keywd">end</span> <span class="keywd">case</span>;
      <span class="keywd">else</span>
        write(<span class="stri">"tar7: Illegal option '"</span>);
        write(command);
        writeln(<span class="stri">"'. Legal options are 't', 'x' or 'c'."</span>);
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">else</span>
      writeln(<span class="stri">"Tar7 Version 1.0 - Tar archiving utility"</span>);
      writeln(<span class="stri">"Copyright (C) 1994, 2004, 2005, 2010 Thomas Mertes"</span>);
      writeln(<span class="stri">"This is free software; see the source for copying conditions.  There is NO"</span>);
      writeln(<span class="stri">"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."</span>);
      writeln(<span class="stri">"Tar7 is written in the Seed7 programming language"</span>);
      writeln(<span class="stri">"Homepage: http://seed7.sourceforge.net"</span>);
      writeln;
      writeln(<span class="stri">"usage: tar7 command[options] argument"</span>);
      writeln;
      writeln(<span class="stri">"Commands (one of the commands -c, -t or -x must be specified):"</span>);
      writeln(<span class="stri">"  -t   Tell about the contents of an archive"</span>);
      writeln(<span class="stri">"  -x   Extract files from an archive"</span>);
      writeln(<span class="stri">"  -c   Create a new archive"</span>);
      writeln(<span class="stri">"The commands can be altered with the following modifiers:"</span>);
      writeln(<span class="stri">"   v   Verbosely list files processed"</span>);
      writeln(<span class="stri">"   z   Zip an archve with gzip or decompress a gzip, bzip2, xz, zstd or lzma archive"</span>);
      writeln(<span class="stri">"   f   Use archive file provided as argument"</span>);
      writeln;
      writeln(<span class="stri">"Example of a tar7 usage:"</span>);
      writeln(<span class="stri">"  ./s7 tar7 -tvzf ../../seed7_05_20100221.tgz"</span>);
      writeln;
    <span class="keywd">end</span> <span class="keywd">if</span>;
  <span class="keywd">end</span> <span class="keywd">func</span>;
</pre>
</body>
</html>
