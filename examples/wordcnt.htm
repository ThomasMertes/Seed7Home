<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 Example: Count the words in a file</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('../images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="../images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="../images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('../images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="../index.htm"><big>Seed7</big></a>
<a class="menu" href="../faq.htm">FAQ</a>
<a class="menu" href="../manual/index.htm">Manual</a>
<a class="menu" href="../demo.htm">Demo</a>
<a class="menu" href="../scrshots/index.htm">Screenshots</a>
<a class="menu" href="../examples/index.htm">Examples</a>
<a class="menu" href="../libraries/index.htm">Libraries</a>
<a class="menu" href="../algorith/index.htm">Algorithms</a>
<a class="menu" href="../benchmks/index.htm">Benchmarks</a>
<a class="menu" href="../subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="../build.htm">Build Seed7</a>
<a class="menu" href="../links.htm">Links</a>

<br />

<a class="head" href="index.htm"><big>Examples</big></a>
<a class="menu" href="echo.htm">echo&nbsp;args</a>
<a class="menu" href="strifile.htm">file&nbsp;in&nbsp;string</a>
<a class="menu" href="txtclock.htm">simple&nbsp;clock</a>
<a class="menu" href="wordcnt.htm">count&nbsp;words</a>
<a class="menu" href="subtype.htm">subtype</a>
<a class="menu" href="map.htm">map&nbsp;function</a>
<a class="menu" href="generic.htm">generic&nbsp;func</a>
<a class="menu" href="declstat.htm">declare&nbsp;stmt</a>
<a class="menu" href="for_decl.htm">template</a>
<a class="menu" href="operator.htm">operator</a>
<a class="menu" href="3wayif.htm">3-way&nbsp;if</a>
</div>
<div class="content">
<div style="padding-right:20;">
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="80">
<a class="head" href="index.htm"><big>Examples</big></a>
</td>
<td>
<table width="10">
</table>
</td>
<td align="left" width="60%">
<b><big>Count the words in a file</big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../examples/txtclock.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../examples/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../examples/subtype.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
<p>
This example counts the words from the <a class="link" href="../manual/file.htm#Standard_input_and_output_files">standard input file</a> and writes a list with words and the corresponding count
</p><pre class="indent">
$ <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../prg/seed7_05.htm">seed7_05.s7i</a>"</span>;       <span class="comment"># Standard Seed7 library</span>
  <span class="keywd">include</span> <span class="stri">"<a class="lib" href="../prg/scanfile.htm">scanfile.s7i</a>"</span>;       <span class="comment"># Import the getSimpleSymbol function</span>

<span class="keywd">const</span> <a class="type" href="../manual/types.htm#type">type</a>: wordHash <span class="keywd">is</span> <a class="type" href="../manual/types.htm#hash">hash</a> <span class="type">[</span><a class="type" href="../manual/types.htm#string">string</a><span class="type">]</span> <a class="type" href="../manual/types.htm#integer">integer</a>;

<span class="keywd">const</span> <a class="type" href="../manual/types.htm#proc">proc</a>: main <span class="keywd">is func</span>
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">wordHash</span>: numberOfWords <span class="keywd">is</span> <span class="type">wordHash</span>.EMPTY_HASH;
    <span class="keywd">var</span> <a class="type" href="../manual/types.htm#string">string</a>: symbol <span class="keywd">is</span> <span class="stri">""</span>;
  <span class="keywd">begin</span>
    <span class="keywd">while</span> <span class="op">not</span> eof(IN) <span class="keywd">do</span>
      symbol := getSimpleSymbol(IN);
      <span class="keywd">if</span> symbol <a class="op" href="../libraries/hash.htm#(in_keyType)in(in_hashType)">in</a> numberOfWords <span class="keywd">then</span>
        incr(numberOfWords[symbol]);
      <span class="keywd">else</span>
        numberOfWords @:= [symbol] 1;
      <span class="keywd">end if</span>;
    <span class="keywd">end while</span>;
    <span class="keywd">for</span> symbol <span class="keywd">range</span> sort(keys(numberOfWords)) <span class="keywd">do</span>
      writeln(symbol <a class="op" href="../libraries/string.htm#(in_string)rpad(in_integer)">rpad</a> 20 <& <span class="stri">" "</span> <& numberOfWords[symbol]);
    <span class="keywd">end for</span>;
  <span class="keywd">end func</span>;
</pre><p>
The type <tt>'<a class="type" href="../manual/types.htm#hash">hash [string] integer</a>'</tt> describes a hash table.
Hash tables contain a collection of values which can be accessed by an index.
In contrast to an <tt><a class="type" href="../manual/types.htm#array">array</a></tt> a
<tt><a class="type" href="../manual/types.htm#hash">hash</a></tt> allows a wider range of possible key types.
In case of <tt>'<a class="type" href="../manual/types.htm#hash">hash [string] integer</a>'</tt> the key type is <tt><a class="type" href="../manual/types.htm#string">string</a></tt>
and the element type is <tt><a class="type" href="../manual/types.htm#integer">integer</a></tt>.
</p><p>
The <tt><a class="type" href="../manual/types.htm#hash">hash</a></tt> <tt>'numberOfWords'</tt> is used to count the words (=symbols).
Symbols are read from the <a class="link" href="../manual/file.htm#Standard_input_and_output_files">standard input</a> <tt>'IN'</tt> with the <a class="link" href="../manual/file.htm#Scanning_a_file">scanner</a> function <tt><a class="func" href="../libraries/scanfile.htm#getSimpleSymbol(inout_file)">getSimpleSymbol</a>(IN)</tt>.
Every <tt>'symbol'</tt> is checked with the <tt><a class="op" href="../libraries/hash.htm#(in_keyType)in(in_hashType)">in</a></tt> operator for presence in <tt>'numberOfWords'</tt>.
The <tt><a class="op" href="../libraries/hash.htm#(inout_hashType)@:=_[(in_keyType)](in_baseType)">@:=</a></tt> statement inserts a value into a hash table at the place specified with a key.
With <tt>'numberOfWords <a class="op" href="../libraries/hash.htm#(inout_hashType)@:=_[(in_keyType)](in_baseType)">@:=</a> [symbol] 1;'</tt> the <tt><a class="type" href="../manual/types.htm#integer">integer</a></tt> value <tt>1</tt> is inserted to <tt>'numberOfWords'</tt> at the place specified with <tt>'symbol'</tt>.
With <tt>'numberOfWords[symbol]'</tt> the hash table element with the key <tt>'symbol'</tt> is obtained.
The procedure <tt><a class="func" href="../libraries/integer.htm#incr(inout_integer)">incr</a></tt> increments the the given variable (in this case <tt>'numberOfWords[symbol]'</tt>).
The <tt><a class="func" href="../libraries/hash.htm#keys(in_hashType)">keys</a></tt> function delivers an unordered array of keys from <tt>'numberOfWords'</tt>.
The resulting <tt><a class="type" href="../manual/types.htm#array">array</a> <a class="type" href="../manual/types.htm#string">string</a></tt> is sorted with the <tt>'sort'</tt> function.
</p>
<table width="100%" cellpadding="0" cellspacing="0">
<tr>
<td align="left" width="60%">
<b><big><hr \></big></b></td>
<td align="right">
<table border="0" cellspacing="1" bgcolor="blue">
<tr bgcolor="gainsboro">
<td>&nbsp;<a class="navigation" href="../examples/txtclock.htm">previous</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../examples/index.htm">up</a>&nbsp;</td>
<td>&nbsp;<a class="navigation" href="../examples/subtype.htm">next</a>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</div>
</div>
  </body>
</html>
