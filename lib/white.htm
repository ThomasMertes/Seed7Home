<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  dnafight.sd7  Bacterial dna fight programming game              *)</span>
<span class="comment">(*  Copyright (C) 1985  Markus Stumptner                            *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is free software; you can redistribute it and/or   *)</span>
<span class="comment">(*  modify it under the terms of the GNU General Public License as  *)</span>
<span class="comment">(*  published by the Free Software Foundation; either version 2 of  *)</span>
<span class="comment">(*  the License, or (at your option) any later version.             *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This program is distributed in the hope that it will be useful, *)</span>
<span class="comment">(*  but WITHOUT ANY WARRANTY; without even the implied warranty of  *)</span>
<span class="comment">(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   *)</span>
<span class="comment">(*  GNU General Public License for more details.                    *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU General Public       *)</span>
<span class="comment">(*  License along with this program; if not, write to the           *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


<span class="comment">(* WHITE V3.1 *)</span>


<span class="keywd">const</span> <span class="type">proc</span>: dna (WHITE) <span class="keywd">is</span> <span class="keywd">func</span>

  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">direction</span>: movDir <span class="keywd">is</span> HERE;
    <span class="keywd">var</span> <span class="type">direction</span>: maxDir <span class="keywd">is</span> HERE;
    <span class="keywd">var</span> <span class="type">direction</span>: killDir <span class="keywd">is</span> HERE;
    <span class="keywd">var</span> <span class="type">power</span>: maxFood <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">power</span>: maxKill <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">float</span>: initSplitSize <span class="keywd">is</span> 0.0;
    <span class="keywd">var</span> <span class="type">float</span>: splitSize <span class="keywd">is</span> 0.0;
    <span class="keywd">var</span> <span class="type">directSet</span>: dirSet <span class="keywd">is</span> directSet.EMPTY_SET;


    <span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: meanFood <span class="keywd">is</span> <span class="keywd">func</span>
      <span class="keywd">result</span>
        <span class="keywd">var</span> <span class="type">float</span>: mean <span class="keywd">is</span> 0.0;
      <span class="keywd">local</span>
        <span class="keywd">var</span> <span class="type">direction</span>: actdir <span class="keywd">is</span> HERE;
        <span class="keywd">var</span> <span class="type">power</span>: sum <span class="keywd">is</span> 0;
        <span class="keywd">var</span> <span class="type">integer</span>: anz <span class="keywd">is</span> 1;

      <span class="keywd">begin</span>
        anz := 1;
        sum := 0;
        <span class="keywd">for</span> actdir <span class="keywd">range</span> HERE <span class="keywd">to</span> SE <span class="keywd">do</span>
          <span class="keywd">if</span> view(actdir) &lt;> EDGE <span class="keywd">then</span>
            sum +:= food(actdir);
            incr(anz);
          <span class="keywd">end</span> <span class="keywd">if</span>;
        <span class="keywd">end</span> <span class="keywd">for</span>;
        mean := flt(sum) / flt(anz);
      <span class="keywd">end</span> <span class="keywd">func</span>; <span class="comment">(* meanFood *)</span>


    <span class="keywd">const</span> <span class="type">func</span> <span class="type">boolean</span>: noEnemy <span class="keywd">is</span> <span class="keywd">func</span>
      <span class="keywd">result</span>
        <span class="keywd">var</span> <span class="type">boolean</span>: noEnemy <span class="keywd">is</span> FALSE;
      <span class="keywd">local</span>
        <span class="keywd">const</span> <span class="type">colorSet</span>: ACTSET <span class="keywd">is</span> {CLEAR, EDGE, WHITE};

      <span class="keywd">begin</span>
        noEnemy := (view(NORTH) <span class="op">in</span> ACTSET) <span class="op">and</span> (view(SOUTH) <span class="op">in</span> ACTSET) <span class="op">and</span>
                   (view(WEST)  <span class="op">in</span> ACTSET) <span class="op">and</span> (view(EAST)  <span class="op">in</span> ACTSET) <span class="op">and</span>
                   (view(NW)    <span class="op">in</span> ACTSET) <span class="op">and</span> (view(SW)    <span class="op">in</span> ACTSET) <span class="op">and</span>
                   (view(NE)    <span class="op">in</span> ACTSET) <span class="op">and</span> (view(SE)    <span class="op">in</span> ACTSET);
      <span class="keywd">end</span> <span class="keywd">func</span>; <span class="comment">(* noEnemy *)</span>


  <span class="keywd">begin</span> <span class="comment">(* dna (WHITE) *)</span>
    maxDir := HERE;
    killDir := HERE;
    maxFood := 0;
    maxKill := 0;
    dirSet := directSet.EMPTY_SET;
    initSplitSize := 0.25 * flt(foodReserve) + 4.5;
    splitSize := 0.153 * flt(foodReserve) + 4.7;
    <span class="keywd">for</span> movDir <span class="keywd">range</span> HERE <span class="keywd">to</span> EAST <span class="keywd">do</span>
      <span class="keywd">if</span> (view(movDir) = CLEAR <span class="op">or</span> movDir = HERE) <span class="op">and</span>
          food(movDir) >= maxFood <span class="keywd">then</span>
        <span class="keywd">if</span> food(movDir) = maxFood <span class="keywd">then</span>
          incl(dirSet, movDir);
        <span class="keywd">else</span>
          dirSet := {movDir};
        <span class="keywd">end</span> <span class="keywd">if</span>;
        maxFood := food(movDir);
        maxDir := movDir;
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">end</span> <span class="keywd">for</span>;
    <span class="keywd">for</span> movDir <span class="keywd">range</span> NORTH <span class="keywd">to</span> EAST <span class="keywd">do</span>
      <span class="keywd">if</span> <span class="op">not</span> view(movDir) <span class="op">in</span> {CLEAR, EDGE, WHITE} <span class="op">and</span>
          strength(movDir) &lt;= strength(HERE) <span class="keywd">then</span>
        maxKill := strength(movDir);
        killDir := movDir;
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">end</span> <span class="keywd">for</span>;
    <span class="keywd">if</span> (max(maxFood, maxKill) &lt;= shrinkSize(strength(HERE)) <span class="op">or</span>
        flt(strength(HERE)) > initSplitSize <span class="op">and</span> maxFood = foodReserve <span class="op">and</span>
        noEnemy) <span class="op">and</span>
       (card(dirSet) > 1 <span class="op">or</span>
        dirSet &lt;> {HERE} <span class="op">and</span> dirSet &lt;> directSet.EMPTY_SET) <span class="op">and</span>
        strength(HERE) > 1 <span class="keywd">then</span>
      maxDir := ranDir(dirSet - {HERE});
      split(maxDir,min(strength(HERE) <span class="op">div</span> 2 + ord(odd(strength(HERE))),
                       food(HERE)),
                   min(strength(HERE) <span class="op">div</span> 2, food(maxDir)))
    <span class="keywd">else</span>
      <span class="keywd">if</span> (maxKill > maxFood <span class="op">or</span>
          maxKill >= shrinkSize(strength(HERE))) <span class="op">and</span>
          killDir &lt;> HERE <span class="keywd">then</span>
        kill(killDir);
      <span class="keywd">else</span>
        <span class="keywd">if</span> noEnemy <span class="op">and</span> meanFood &lt; 0.33 * flt(foodReserve) <span class="keywd">then</span>
          eat(ranDir(dirSet - {HERE}), shrinkSize(strength(HERE)));
        <span class="keywd">else</span>
          maxDir := ranDir(dirSet - {HERE});
          eat(maxDir, min(maxFood, strength(HERE)));
        <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">end</span> <span class="keywd">if</span>;
  <span class="keywd">end</span> <span class="keywd">func</span>; <span class="comment">(* dna (WHITE) *)</span>
</pre>
</body>
</html>
