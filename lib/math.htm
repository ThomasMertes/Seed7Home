<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  math.s7i      Mathematical functions and constants              *)</span>
<span class="comment">(*  Copyright (C) 1993, 1994, 2005  Thomas Mertes                   *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This file is part of the Seed7 Runtime Library.                 *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is free software; you can             *)</span>
<span class="comment">(*  redistribute it and/or modify it under the terms of the GNU     *)</span>
<span class="comment">(*  Lesser General Public License as published by the Free Software *)</span>
<span class="comment">(*  Foundation; either version 2.1 of the License, or (at your      *)</span>
<span class="comment">(*  option) any later version.                                      *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is distributed in the hope that it    *)</span>
<span class="comment">(*  will be useful, but WITHOUT ANY WARRANTY; without even the      *)</span>
<span class="comment">(*  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR *)</span>
<span class="comment">(*  PURPOSE.  See the GNU Lesser General Public License for more    *)</span>
<span class="comment">(*  details.                                                        *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU Lesser General       *)</span>
<span class="comment">(*  Public License along with this program; if not, write to the    *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


<span class="comment">(**
 *  Mathematical constant &amp;pi;.
 *  ''PI'' is the ratio of any circle's circumference to its diameter.
 *)</span>
<span class="keywd">const</span> <span class="type">float</span>: PI <span class="keywd">is</span> 3.1415926535897932384626433832795028841971693993751058209749445923;


<span class="comment">(**
 *  Euler's number.
 *  ''E'' is defined as exp(1.0)
 *)</span>
<span class="keywd">const</span> <span class="type">float</span>: E  <span class="keywd">is</span> 2.7182818284590452353602874713526624977572470936999595749669676277;


<span class="comment">(**
 *  Compute the sine of x, where x is given in radians.
 *  @return the trigonometric sine of an angle.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: sin (<span class="op">in</span> <span class="type">float</span>: x)                            <span class="keywd">is</span> action <span class="stri">"FLT_SIN"</span>;


<span class="comment">(**
 *  Compute the cosine of x, where x is given in radians.
 *  @return the trigonometric cosine of an angle.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: cos (<span class="op">in</span> <span class="type">float</span>: x)                            <span class="keywd">is</span> action <span class="stri">"FLT_COS"</span>;


<span class="comment">(**
 *  Compute the tangent of x, where x is given in radians.
 *  @return the trigonometric tangent of an angle.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: tan (<span class="op">in</span> <span class="type">float</span>: x)                            <span class="keywd">is</span> action <span class="stri">"FLT_TAN"</span>;


<span class="comment">(**
 *  Compute the arc sine of x; that is the value whose sine is x.
 *  @return the arc sine of x in radians. The return angle is in the
 *          range [-PI/2, PI/2].
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: asin (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_ASIN"</span>;


<span class="comment">(**
 *  Compute the arc cosine of x; that is the value whose cosine is x.
 *  @return the arc cosine of x in radians. The returned angle is in
 *          the range [0.0, PI].
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: acos (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_ACOS"</span>;


<span class="comment">(**
 *  Compute the arc tangent of x; that is the value whose tangent is x.
 *  @return the arc tangent of x in radians. The returned angle is in
 *          the range [-PI/2, PI/2].
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: atan (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_ATAN"</span>;


<span class="comment">(**
 *  Compute the arc tangent of y/x.
 *  The signs of x and y are used to determine the quadrant of the result.
 *  It determines the angle theta from the conversion of rectangular
 *  coordinates (x, y) to polar coordinates (r, theta).
 *  @return the arc tangent of y/x in radians. The returned angle is in
 *          the range [-PI, PI].
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: atan2 (<span class="op">in</span> <span class="type">float</span>: y, <span class="op">in</span> <span class="type">float</span>: x)             <span class="keywd">is</span> action <span class="stri">"FLT_ATAN2"</span>;


<span class="comment">(**
 *  Compute the hyperbolic sine of x.
 *  sinh(x) is mathematically defined as: (exp(x) - exp(-x)) / 2.0
 *  @return the hyperbolic sine.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: sinh (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_SINH"</span>;


<span class="comment">(**
 *  Compute the hyperbolic cosine of x.
 *  cosh(x) is mathematically defined as: (exp(x) + exp(-x)) / 2.0
 *  @return the hyperbolic cosine.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: cosh (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_COSH"</span>;


<span class="comment">(**
 *  Compute the hyperbolic tangent of x.
 *  tanh(x) is mathematically defined as: sinh(x) / cosh(x)
 *  @return the hyperbolic tangent.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: tanh (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_TANH"</span>;


<span class="comment">(**
 *  Compute Euler's number e raised to the power of x.
 *  @return e raised to the power of x.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: <span class="op">exp</span> (<span class="op">in</span> <span class="type">float</span>: x)                            <span class="keywd">is</span> action <span class="stri">"FLT_EXP"</span>;


<span class="comment">(**
 *  Compute exp(x) - 1.0 (subtract one from e raised to the power of x).
 *  The result is computed in a way that is accurate even if the value
 *  of x is near zero.
 *  @return exp(x) - 1.0
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: expm1 (<span class="op">in</span> <span class="type">float</span>: x)                          <span class="keywd">is</span> action <span class="stri">"FLT_EXPM1"</span>;


<span class="comment">(**
 *  Return the natural logarithm (base e) of x.
 *   log(NaN)       returns NaN
 *   log(1.0)       returns 0.0
 *   log(Infinity)  returns Infinity
 *   log(0.0)       returns -Infinity
 *   log(x)         returns NaN        for x &lt; 0.0
 *  @return the natural logarithm of x.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: log (<span class="op">in</span> <span class="type">float</span>: x)                            <span class="keywd">is</span> action <span class="stri">"FLT_LOG"</span>;


<span class="comment">(**
 *  Compute log(1.0 + x) (natural logarithm of the sum of 1 and x).
 *  The result is computed in a way that is accurate even if the value
 *  of x is near zero.
 *   log1p(NaN)       returns NaN
 *   log1p(0.0)       returns 0.0
 *   log1p(Infinity)  returns Infinity
 *   log1p(-1.0)      returns -Infinity
 *   log1p(x)         returns NaN        for x &lt; -1.0
 *  @return log(1.0 + x)
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: log1p (<span class="op">in</span> <span class="type">float</span>: x)                          <span class="keywd">is</span> action <span class="stri">"FLT_LOG1P"</span>;


<span class="comment">(**
 *  Returns the base 10 logarithm of x.
 *   log10(NaN)       returns NaN
 *   log10(1.0)       returns 0.0
 *   log10(Infinity)  returns Infinity
 *   log10(0.0)       returns -Infinity
 *   log10(X)         returns NaN        for X &lt; 0.0
 *  @return the base 10 logarithm of x.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: log10 (<span class="op">in</span> <span class="type">float</span>: x)                          <span class="keywd">is</span> action <span class="stri">"FLT_LOG10"</span>;


<span class="comment">(**
 *  Returns the base 2 logarithm of x.
 *   log2(NaN)       returns NaN
 *   log2(1.0)       returns 0.0
 *   log2(Infinity)  returns Infinity
 *   log2(0.0)       returns -Infinity
 *   log2(X)         returns NaN        for X &lt; 0.0
 *  @return the base 2 logarithm of x.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: log2 (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_LOG2"</span>;


<span class="comment">(**
 *  Returns the non-negative square root of x.
 *   sqrt(NaN)       returns NaN
 *   sqrt(0.0)       returns 0.0
 *   sqrt(Infinity)  returns Infinity
 *   sqrt(X)         returns NaN        for X &lt; 0.0
 *  @return the square root of x.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">float</span>: sqrt (<span class="op">in</span> <span class="type">float</span>: x)                           <span class="keywd">is</span> action <span class="stri">"FLT_SQRT"</span>;
</pre>
</body>
</html>
