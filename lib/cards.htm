<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  cards.s7i     Playing card pictures of a french deck            *)</span>
<span class="comment">(*  Copyright (C) 2006, 2013  Thomas Mertes                         *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This file is part of the Seed7 Runtime Library.                 *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is free software; you can             *)</span>
<span class="comment">(*  redistribute it and/or modify it under the terms of the GNU     *)</span>
<span class="comment">(*  Lesser General Public License as published by the Free Software *)</span>
<span class="comment">(*  Foundation; either version 2.1 of the License, or (at your      *)</span>
<span class="comment">(*  option) any later version.                                      *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is distributed in the hope that it    *)</span>
<span class="comment">(*  will be useful, but WITHOUT ANY WARRANTY; without even the      *)</span>
<span class="comment">(*  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR *)</span>
<span class="comment">(*  PURPOSE.  See the GNU Lesser General Public License for more    *)</span>
<span class="comment">(*  details.                                                        *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU Lesser General       *)</span>
<span class="comment">(*  Public License along with this program; if not, write to the    *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


<span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/pic_util.htm">pic_util.s7i</a>"</span>;


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_A_sign <span class="keywd">is</span> [](
  <span class="stri">"     X     "</span>,
  <span class="stri">"     X     "</span>,
  <span class="stri">"    XXX    "</span>,
  <span class="stri">"    XXX    "</span>,
  <span class="stri">"   XX XX   "</span>,
  <span class="stri">"   XX XX   "</span>,
  <span class="stri">"  XX   XX  "</span>,
  <span class="stri">"  XXXXXXX  "</span>,
  <span class="stri">" XXXXXXXXX "</span>,
  <span class="stri">" XX     XX "</span>,
  <span class="stri">"XXXX   XXXX"</span>,
  <span class="stri">"XXXX   XXXX"</span>);

<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_K_sign <span class="keywd">is</span> [](
  <span class="stri">"XXXX XXXX "</span>,
  <span class="stri">"XXXX XXXX "</span>,
  <span class="stri">" XX  XX   "</span>,
  <span class="stri">" XX XX    "</span>,
  <span class="stri">" XXXX     "</span>,
  <span class="stri">" XXX      "</span>,
  <span class="stri">" XXXX     "</span>,
  <span class="stri">" XX XX    "</span>,
  <span class="stri">" XX  XX   "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">"XXXX XXXX "</span>,
  <span class="stri">"XXXX XXXX "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_Q_sign <span class="keywd">is</span> [](
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">"     XXX  "</span>,
  <span class="stri">"      XX  "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_J_sign <span class="keywd">is</span> [](
  <span class="stri">"    XXXX  "</span>,
  <span class="stri">"    XXXX  "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">" XX  XX   "</span>,
  <span class="stri">" XX  XX   "</span>,
  <span class="stri">" XXXXXX   "</span>,
  <span class="stri">"  XXXX    "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_10_sign <span class="keywd">is</span> [](
  <span class="stri">" XX  XXXX "</span>,
  <span class="stri">" XX XXXXXX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XX  XX"</span>,
  <span class="stri">" XX XXXXXX"</span>,
  <span class="stri">" XX  XXXX "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_9_sign <span class="keywd">is</span> [](
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">"  XXXXXX  "</span>,
  <span class="stri">"      XX  "</span>,
  <span class="stri">"     XXX  "</span>,
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">"  XXXX    "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_8_sign <span class="keywd">is</span> [](
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">"  XXXXX   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_7_sign <span class="keywd">is</span> [](
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"    XX    "</span>,
  <span class="stri">"    XX    "</span>,
  <span class="stri">"    XX    "</span>,
  <span class="stri">"   XX     "</span>,
  <span class="stri">"   XX     "</span>,
  <span class="stri">"   XX     "</span>,
  <span class="stri">"   XX     "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_6_sign <span class="keywd">is</span> [](
  <span class="stri">"   XXXX   "</span>,
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">" XXX      "</span>,
  <span class="stri">" XX       "</span>,
  <span class="stri">" XXXXXX   "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">"  XXXXX   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_5_sign <span class="keywd">is</span> [](
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX       "</span>,
  <span class="stri">" XX       "</span>,
  <span class="stri">" XXXXXX   "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">"      XX  "</span>,
  <span class="stri">"      XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">"  XXXXX   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_4_sign <span class="keywd">is</span> [](
  <span class="stri">"     XX   "</span>,
  <span class="stri">"    XXX   "</span>,
  <span class="stri">"   XXXX   "</span>,
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">" XXX XX   "</span>,
  <span class="stri">"XXX  XX   "</span>,
  <span class="stri">"XXXXXXXXX "</span>,
  <span class="stri">"XXXXXXXXX "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"     XX   "</span>,
  <span class="stri">"    XXXX  "</span>,
  <span class="stri">"    XXXX  "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_3_sign <span class="keywd">is</span> [](
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX  XX   "</span>,
  <span class="stri">"    XX    "</span>,
  <span class="stri">"   XX     "</span>,
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">"      XX  "</span>,
  <span class="stri">"      XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">"  XXXXX   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: black_2_sign <span class="keywd">is</span> [](
  <span class="stri">"  XXXXX   "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">"      XX  "</span>,
  <span class="stri">"     XXX  "</span>,
  <span class="stri">"    XXX   "</span>,
  <span class="stri">"   XXX    "</span>,
  <span class="stri">"  XXX     "</span>,
  <span class="stri">" XXX  XX  "</span>,
  <span class="stri">" XX   XX  "</span>,
  <span class="stri">" XXXXXXX  "</span>,
  <span class="stri">" XXXXXXX  "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_A_sign <span class="keywd">is</span> [](
  <span class="stri">"     R     "</span>,
  <span class="stri">"     R     "</span>,
  <span class="stri">"    RRR    "</span>,
  <span class="stri">"    RRR    "</span>,
  <span class="stri">"   RR RR   "</span>,
  <span class="stri">"   RR RR   "</span>,
  <span class="stri">"  RR   RR  "</span>,
  <span class="stri">"  RRRRRRR  "</span>,
  <span class="stri">" RRRRRRRRR "</span>,
  <span class="stri">" RR     RR "</span>,
  <span class="stri">"RRRR   RRRR"</span>,
  <span class="stri">"RRRR   RRRR"</span>);

<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_K_sign <span class="keywd">is</span> [](
  <span class="stri">"RRRR RRRR "</span>,
  <span class="stri">"RRRR RRRR "</span>,
  <span class="stri">" RR  RR   "</span>,
  <span class="stri">" RR RR    "</span>,
  <span class="stri">" RRRR     "</span>,
  <span class="stri">" RRR      "</span>,
  <span class="stri">" RRRR     "</span>,
  <span class="stri">" RR RR    "</span>,
  <span class="stri">" RR  RR   "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">"RRRR RRRR "</span>,
  <span class="stri">"RRRR RRRR "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_Q_sign <span class="keywd">is</span> [](
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">"     RRR  "</span>,
  <span class="stri">"      RR  "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_J_sign <span class="keywd">is</span> [](
  <span class="stri">"    RRRR  "</span>,
  <span class="stri">"    RRRR  "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">" RR  RR   "</span>,
  <span class="stri">" RR  RR   "</span>,
  <span class="stri">" RRRRRR   "</span>,
  <span class="stri">"  RRRR    "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_10_sign <span class="keywd">is</span> [](
  <span class="stri">" RR  RRRR "</span>,
  <span class="stri">" RR RRRRRR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RR  RR"</span>,
  <span class="stri">" RR RRRRRR"</span>,
  <span class="stri">" RR  RRRR "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_9_sign <span class="keywd">is</span> [](
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">"  RRRRRR  "</span>,
  <span class="stri">"      RR  "</span>,
  <span class="stri">"     RRR  "</span>,
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">"  RRRR    "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_8_sign <span class="keywd">is</span> [](
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">"  RRRRR   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_7_sign <span class="keywd">is</span> [](
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"    RR    "</span>,
  <span class="stri">"    RR    "</span>,
  <span class="stri">"    RR    "</span>,
  <span class="stri">"   RR     "</span>,
  <span class="stri">"   RR     "</span>,
  <span class="stri">"   RR     "</span>,
  <span class="stri">"   RR     "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_6_sign <span class="keywd">is</span> [](
  <span class="stri">"   RRRR   "</span>,
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">" RRR      "</span>,
  <span class="stri">" RR       "</span>,
  <span class="stri">" RRRRRR   "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">"  RRRRR   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_5_sign <span class="keywd">is</span> [](
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR       "</span>,
  <span class="stri">" RR       "</span>,
  <span class="stri">" RRRRRR   "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">"      RR  "</span>,
  <span class="stri">"      RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">"  RRRRR   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_4_sign <span class="keywd">is</span> [](
  <span class="stri">"     RR   "</span>,
  <span class="stri">"    RRR   "</span>,
  <span class="stri">"   RRRR   "</span>,
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">" RRR RR   "</span>,
  <span class="stri">"RRR  RR   "</span>,
  <span class="stri">"RRRRRRRRR "</span>,
  <span class="stri">"RRRRRRRRR "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"     RR   "</span>,
  <span class="stri">"    RRRR  "</span>,
  <span class="stri">"    RRRR  "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_3_sign <span class="keywd">is</span> [](
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR  RR   "</span>,
  <span class="stri">"    RR    "</span>,
  <span class="stri">"   RR     "</span>,
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">"      RR  "</span>,
  <span class="stri">"      RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">"  RRRRR   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: red_2_sign <span class="keywd">is</span> [](
  <span class="stri">"  RRRRR   "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">"      RR  "</span>,
  <span class="stri">"     RRR  "</span>,
  <span class="stri">"    RRR   "</span>,
  <span class="stri">"   RRR    "</span>,
  <span class="stri">"  RRR     "</span>,
  <span class="stri">" RRR  RR  "</span>,
  <span class="stri">" RR   RR  "</span>,
  <span class="stri">" RRRRRRR  "</span>,
  <span class="stri">" RRRRRRR  "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: small_spades_sign <span class="keywd">is</span> [](
  <span class="stri">"    X    "</span>,
  <span class="stri">"   XXX   "</span>,
  <span class="stri">"  XXXXX  "</span>,
  <span class="stri">" XXXXXXX "</span>,
  <span class="stri">"XXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXX"</span>,
  <span class="stri">" XX X XX "</span>,
  <span class="stri">"    X    "</span>,
  <span class="stri">"   XXX   "</span>);

<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: small_hearts_sign <span class="keywd">is</span> [](
  <span class="stri">" RRR RRR "</span>,
  <span class="stri">"RRRR RRRR"</span>,
  <span class="stri">"RRRRRRRRR"</span>,
  <span class="stri">"RRRRRRRRR"</span>,
  <span class="stri">"RRRRRRRRR"</span>,
  <span class="stri">" RRRRRRR "</span>,
  <span class="stri">"  RRRRR  "</span>,
  <span class="stri">"   RRR   "</span>,
  <span class="stri">"    R    "</span>,
  <span class="stri">"         "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: small_diamonds_sign <span class="keywd">is</span> [](
  <span class="stri">"    R    "</span>,
  <span class="stri">"   RRR   "</span>,
  <span class="stri">"  RRRRR  "</span>,
  <span class="stri">" RRRRRRR "</span>,
  <span class="stri">" RRRRRRR "</span>,
  <span class="stri">" RRRRRRR "</span>,
  <span class="stri">"  RRRRR  "</span>,
  <span class="stri">"   RRR   "</span>,
  <span class="stri">"    R    "</span>,
  <span class="stri">"         "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: small_clubs_sign <span class="keywd">is</span> [](
  <span class="stri">"   XXX   "</span>,
  <span class="stri">"  XXXXX  "</span>,
  <span class="stri">"  XXXXX  "</span>,
  <span class="stri">" X XXX X "</span>,
  <span class="stri">"XXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXX"</span>,
  <span class="stri">" XX X XX "</span>,
  <span class="stri">"    X    "</span>,
  <span class="stri">"   XXX   "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: big_spades_sign <span class="keywd">is</span> [](
  <span class="stri">"       X       "</span>,
  <span class="stri">"      XXX      "</span>,
  <span class="stri">"     XXXXX     "</span>,
  <span class="stri">"    XXXXXXX    "</span>,
  <span class="stri">"   XXXXXXXXX   "</span>,
  <span class="stri">"  XXXXXXXXXXX  "</span>,
  <span class="stri">" XXXXXXXXXXXXX "</span>,
  <span class="stri">" XXXXXXXXXXXXX "</span>,
  <span class="stri">"XXXXXXXXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXXXXXXXX"</span>,
  <span class="stri">"XXXXXX X XXXXXX"</span>,
  <span class="stri">" XXXX  X  XXXX "</span>,
  <span class="stri">"      XXX      "</span>,
  <span class="stri">"     XXXXX     "</span>,
  <span class="stri">"               "</span>,
  <span class="stri">"               "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: big_hearts_sign <span class="keywd">is</span> [](
  <span class="stri">"               "</span>,
  <span class="stri">"               "</span>,
  <span class="stri">"  RRRR   RRRR  "</span>,
  <span class="stri">" RRRRRR RRRRRR "</span>,
  <span class="stri">"RRRRRRR RRRRRRR"</span>,
  <span class="stri">"RRRRRRRRRRRRRRR"</span>,
  <span class="stri">"RRRRRRRRRRRRRRR"</span>,
  <span class="stri">"RRRRRRRRRRRRRRR"</span>,
  <span class="stri">"RRRRRRRRRRRRRRR"</span>,
  <span class="stri">" RRRRRRRRRRRRR "</span>,
  <span class="stri">" RRRRRRRRRRRRR "</span>,
  <span class="stri">"  RRRRRRRRRRR  "</span>,
  <span class="stri">"   RRRRRRRRR   "</span>,
  <span class="stri">"    RRRRRRR    "</span>,
  <span class="stri">"     RRRRR     "</span>,
  <span class="stri">"      RRR      "</span>,
  <span class="stri">"       R       "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: big_diamonds_sign <span class="keywd">is</span> [](
  <span class="stri">"               "</span>,
  <span class="stri">"       R       "</span>,
  <span class="stri">"      RRR      "</span>,
  <span class="stri">"     RRRRR     "</span>,
  <span class="stri">"    RRRRRRR    "</span>,
  <span class="stri">"   RRRRRRRRR   "</span>,
  <span class="stri">"   RRRRRRRRR   "</span>,
  <span class="stri">"  RRRRRRRRRRR  "</span>,
  <span class="stri">" RRRRRRRRRRRRR "</span>,
  <span class="stri">"  RRRRRRRRRRR  "</span>,
  <span class="stri">"   RRRRRRRRR   "</span>,
  <span class="stri">"   RRRRRRRRR   "</span>,
  <span class="stri">"    RRRRRRR    "</span>,
  <span class="stri">"     RRRRR     "</span>,
  <span class="stri">"      RRR      "</span>,
  <span class="stri">"       R       "</span>,
  <span class="stri">"               "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: big_clubs_sign <span class="keywd">is</span> [](
  <span class="stri">"      XXX      "</span>,
  <span class="stri">"     XXXXX     "</span>,
  <span class="stri">"    XXXXXXX    "</span>,
  <span class="stri">"    XXXXXXX    "</span>,
  <span class="stri">"    XXXXXXX    "</span>,
  <span class="stri">"     XXXXX     "</span>,
  <span class="stri">"  XXX XXX XXX  "</span>,
  <span class="stri">" XXXXXXXXXXXXX "</span>,
  <span class="stri">"XXXXXXXXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXXXXXXXX"</span>,
  <span class="stri">"XXXXXXXXXXXXXXX"</span>,
  <span class="stri">" XXXXX X XXXXX "</span>,
  <span class="stri">"  XXX  X  XXX  "</span>,
  <span class="stri">"      XXX      "</span>,
  <span class="stri">"     XXXXX     "</span>,
  <span class="stri">"               "</span>,
  <span class="stri">"               "</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: king_of_spades_pic <span class="keywd">is</span> [](
  <span class="stri">"               XYYYYYYYYYYYYYYYYYYYYX        "</span>,
  <span class="stri">"        X       XYYYYYYYXYXYXYXYXYXX         "</span>,
  <span class="stri">"       XXX       XXYXYXYXRXRXRXRXRX          "</span>,
  <span class="stri">"      XXXXX       XRXRXRRRRRRRRRRX          X"</span>,
  <span class="stri">"     XXXXXXX      XRRRRRXXXXXXXXXX         XX"</span>,
  <span class="stri">"    XXXXXXXXX     XXXXXXX        XX       XYX"</span>,
  <span class="stri">"   XXXXXXXXXXX    X X X X        X X      XYX"</span>,
  <span class="stri">"  XXXXXXXXXXXXX   X X X XXXXX XXXX X      XYX"</span>,
  <span class="stri">"  XXXXXXXXXXXXX   X X X XX XXX XXXX       XYX"</span>,
  <span class="stri">" XXXXXXXXXXXXXXX  X X X X    X   X X      XYX"</span>,
  <span class="stri">" XXXXXXXXXXXXXXX  X X X X    X   X X      XYX"</span>,
  <span class="stri">" XXXXXXXXXXXXXXX  X X X X    X   X X      XYX"</span>,
  <span class="stri">" XXXXXX X XXXXXX  X X X X   XXX  X X      XYX"</span>,
  <span class="stri">"  XXXX  X  XXXX   X X X X XX   X X X      XYX"</span>,
  <span class="stri">"       XXX      XXX X X X X XXX  XX XX    XYX"</span>,
  <span class="stri">"      XXXXX    X  X X X X        X X  X   XYX"</span>,
  <span class="stri">"              X X X X X X  X   X X X  X   XYX"</span>,
  <span class="stri">"            XXX XX  X X XX X X X X  XXYXX XYX"</span>,
  <span class="stri">"          XXXYXX   X  X X  X XXX  XXXYXX XXYX"</span>,
  <span class="stri">"        XXYXRYXXXXX XX X  X X XYXRXXYXX XRXYX"</span>,
  <span class="stri">"      XXXXYXXXYXXYXXXXXXXX X XXYXXXYXX XXXXYX"</span>,
  <span class="stri">"    XXYXYXXYXXYXRXXYXYXYXXXXXXYXRXYXX XRRRXYX"</span>,
  <span class="stri">"  XXRRXXXXXYXRXYXRRXXXXXXYXYXXYXXXYXX XRXXXYX"</span>,
  <span class="stri">" XRYYXXYXXXYXXXYXRRRYYYYXXXXXYXRXYXX XRRRRXYX"</span>,
  <span class="stri">"XYRRXXXXXYXXYXXYXRRRYXXXYYRRXYXXXYXX XRXXXXYX"</span>,
  <span class="stri">"RYYRXXYXYXYXYXRXYXRRYYYYYYRRXYXXYXX XRRRRRXYX"</span>,
  <span class="stri">"RRYXXXXXYXXXYXXXYXXXXXXXXXXXYXRXYXX XRXXXXXXX"</span>,
  <span class="stri">"YRRXXYXYXYYYXYXXYXX   X   XXYXXXYXX XRXYYYYXX"</span>,
  <span class="stri">"YYRXXXXYXYXXXYXXYX  X   X  XYXXYXX XRXYXXXYYY"</span>,
  <span class="stri">"RYYXXYXYXYYYXYXRXYX X X X  XYXXYXX XRXYYX XYY"</span>,
  <span class="stri">"RRYXXXXYXYXXXYXXXYX   X   XYXRXYXXXXRRXXXX XX"</span>,
  <span class="stri">"YRRXXYXYXYYYYXYXXYX X   X XYXXXYXYXXXRRRRRXXX"</span>,
  <span class="stri">"RYRXXXXYXYXXXXYXXYXXXXXXXXXYXXYXXXXXXXXXXX   "</span>,
  <span class="stri">"RRYXXYXXYXYYYXYXXYXYYYYYYYYYXXYXXXXXXXX   XXX"</span>,
  <span class="stri">"XXRXXXXXYXYXXXYXXYXXXXXXXXXYXXYXYYXXXYXX X   "</span>,
  <span class="stri">"  X XXYXXYXYYXYXRYXXXRRRXXXYXXYXXXYYXXXX  XXX"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: queen_of_spades_pic <span class="keywd">is</span> [](
  <span class="stri">"          XX XX X X RXYXXYYYYX               "</span>,
  <span class="stri">"  X      XXXXX X XX RXYYXYYYX       X        "</span>,
  <span class="stri">"  X      XX X XX  X RXYYYYYYX      XXX       "</span>,
  <span class="stri">"  X      XXX X  X  XRXYXXYYX      XXXXX      "</span>,
  <span class="stri">" XYX     X XX    X XRXYYXYYX     XXXXXXX     "</span>,
  <span class="stri">" XYX    XX X      XXRRXYYYYYX   XXXXXXXXX    "</span>,
  <span class="stri">" XYX    XR XXXX XXXXRRXYXXYYX  XXXXXXXXXXX   "</span>,
  <span class="stri">" XYX    XR XXX XXX XRRRXYXYX  XXXXXXXXXXXXX  "</span>,
  <span class="stri">"XYYYX   XR X   X   X RRXYYX   XXXXXXXXXXXXX  "</span>,
  <span class="stri">"XYXYX   XR X   X    XRRRXYX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">"XYYYX  XRR X   X    X RRRXX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">" XYX   XR XX  XXX    XRRRXX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">" XYX   XR XX         X RRRX  XXXXXX X XXXXXX "</span>,
  <span class="stri">"XXXXX  X XXXX XXX   XRX RRRX  XXXX  X  XXXX  "</span>,
  <span class="stri">"XYYYX XR XXXX  X   XRXX RRRXX      XXX       "</span>,
  <span class="stri">" XXX  XR XXXYX    XXXYXX RRRXX    XXXXX      "</span>,
  <span class="stri">"XYYYX XR XYXXYXXXXYXYXYYX RRRXX              "</span>,
  <span class="stri">"XYYYX XXXXYYXXYXYXYXXYYXXX    XX       RR    "</span>,
  <span class="stri">" XXX  XXXXYYYYXXXXXYYYXXXXXXXXRXX    RRXXRR  "</span>,
  <span class="stri">" XRX XXX XXYXYYYYYYXYXXX  XXRRRRXY  RRXYYXRR "</span>,
  <span class="stri">" XYXXYXX XXYYXYXYXYYXX  XXXRRR XYXX  RRXXRR X"</span>,
  <span class="stri">" XYXRYYXXXXXYYYYYYYXX XXXRRRR XYXXYXX  RR  XR"</span>,
  <span class="stri">"XXYXRRYXX XXYXYXYYXX XXXRRR  XYXXXYYYX X  XYR"</span>,
  <span class="stri">"XXYXRRYXXXXXXYYYYXX XXRRRR  XYXRXXXYYYXX XXXY"</span>,
  <span class="stri">"XXYXRRYYXX XXYYYXX XXRRRR RRXYXXXXXXXXYXXXXXY"</span>,
  <span class="stri">"XXYX RRYXXX XXXYX XXRRR  RRRXYXRRRXXXXX    XY"</span>,
  <span class="stri">"XXYXXRRYYXXXXYYX XXRRR RRRXXXYXXXXXXXX     XY"</span>,
  <span class="stri">"XXYX XRRYXXXYRRYXXRRR RRXXXXXYYXRRRRX      XY"</span>,
  <span class="stri">"XXYXX RRYYXXYRRYXRRR RXXX  XXXYXXXXX  X  XXYR"</span>,
  <span class="stri">"XXYX XXRRYYXYRRYXRR RXX     XXXYXRRX XXXXXXXR"</span>,
  <span class="stri">"XXYXX XRRRYYXYYXRR XXX  XXX  XXXYXXXXXYXXXXXX"</span>,
  <span class="stri">"XXYX X XRRRYYXXXR XXX  XXXXX  XXXYXRXYYXYXXXY"</span>,
  <span class="stri">"XXYXX X XRRRRRRRRXXX           XXXYXYYYXYYYYX"</span>,
  <span class="stri">"XXYX X X XXXXXXXXXXXXXXXXXXXXXXXXXXXXYYYYYXXY"</span>,
  <span class="stri">"XXYXX X XRRRRRRRRRRRRRRRRRRRRRRRRRRRXXXXXXYYX"</span>,
  <span class="stri">"XXYX X XXX XXX XXX XXX XXX XXX XXX XXXYYYYXXX"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: jack_of_spades_pic <span class="keywd">is</span> [](
  <span class="stri">"   XX   XRRXRRRXRXRRXRXRRRXRRX               "</span>,
  <span class="stri">"  XYYX   XRRXRRXRXRRXRXRRXRRX       X        "</span>,
  <span class="stri">" XYXRYX   XRRXXXRXXXXRXXXRRX       XXX       "</span>,
  <span class="stri">" XYXRYX    XRRRRRRRRRRRRRRX       XXXXX      "</span>,
  <span class="stri">" XYXRYX    XXXXXXXXXXXXXXX       XXXXXXX     "</span>,
  <span class="stri">"  XYYX     X     XYXYXYXYX      XXXXXXXXX    "</span>,
  <span class="stri">"   XX      X XX  XYXYXYXYX     XXXXXXXXXXX   "</span>,
  <span class="stri">"  XYYX     X X XX XYXYXYXYX   XXXXXXXXXXXXX  "</span>,
  <span class="stri">" XYXRYX    X      XYXYXYXYX   XXXXXXXXXXXXX  "</span>,
  <span class="stri">"  XYYX    X       XYXYXYXYX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">"   XX    X        XYXYXYXYX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">"  XYYX   XX  XX X XYXYXYXYX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">" XYXRYX    X  XXX XYXYXYXYX  XXXXXX X XXXXXX "</span>,
  <span class="stri">" XYXRYX    X      XYXYXYXYYXX XXXX  X  XXXX  "</span>,
  <span class="stri">" XYXRYX    XXX   XYYXYXYXYYYYX     XXX       "</span>,
  <span class="stri">"  XYYX     X     XYYXYYXYXYXYYX   XXXXX      "</span>,
  <span class="stri">" XXXXX    XX     RXXYXYXYXYYXYX              "</span>,
  <span class="stri">" X   XX XXXXX  RRRRXYXXYXYXXYYX              "</span>,
  <span class="stri">"  XX  XXXXXXXXRRRRRXXYYXYXYYYXX              "</span>,
  <span class="stri">" X  XXXX XXXXXXXXXXXXXXXXXXXXXXXX            "</span>,
  <span class="stri">" X XXX X XXXXXXXXXXXXXXXXXXXX X XXX          "</span>,
  <span class="stri">" XXX XXXX XYXYXYXYXYXYXYXYXYX XXX XXX        "</span>,
  <span class="stri">"XRXXX X X XXXXXXXXXXXXXXXXXXX X X XXRXX      "</span>,
  <span class="stri">"RXXRX XXXX XRRRRRRRRRRRRRRRRX XXX XRRRXXX  XX"</span>,
  <span class="stri">"XXRXXX X X XXRYRRYRRYRRYRRYRX X X XRXXXRRXXYX"</span>,
  <span class="stri">"XRXXYX XXXX XRRRYXYRYRYXYRRRX XXX XXXRRXXYYYX"</span>,
  <span class="stri">"RXXYXYX X X XXRYXYRYYYRYXYRRX X X XRRXXYYXXXX"</span>,
  <span class="stri">"XXYXYXX XXXXXYXRYRRYXYRRYRRRX XXX XXXXYYYYYXX"</span>,
  <span class="stri">"XYXYXYXX XXYXXXXXX XXX XXX XX X X XXXYYXXXXXY"</span>,
  <span class="stri">"YXYXYXXXXXYXXYX X X X X X X X XXXXXXYYYYYYXXY"</span>,
  <span class="stri">"XYXYXXRXXYXXYYXX XXX XXX XXXX X XXXYYXYXXXXYX"</span>,
  <span class="stri">"YYYXX RXYXXXXYXXXXXXXXXXXXXXXXXXXXYYYYYYYXXYX"</span>,
  <span class="stri">"YXXXRRXYXXYYYYX                  XYYXYXXXXYXR"</span>,
  <span class="stri">"XXX RXYXXYXXXYXRRRRRRRRRRRRRRRRRXYYYYYYYXXYRR"</span>,
  <span class="stri">"XXRRXYXXYYYYYXXXXXXXXXXXXXXXXXXXXYXYXXXXXYXRR"</span>,
  <span class="stri">"XYRXYXXXXYXXYXXXYXX X   XX XX XXYYYYYYYXYRRRR"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: king_of_hearts_pic <span class="keywd">is</span> [](
  <span class="stri">"               XYXYYYXYYYXYYYXYYYYYYX        "</span>,
  <span class="stri">"   RRRR   RRRR  XXXYXXXYXXXYXXXYXXYX         "</span>,
  <span class="stri">"  RRRRRR RRRRRR  XYYYYYYYYYYYYXYYXX  XX      "</span>,
  <span class="stri">" RRRRRRR RRRRRRR  XRRRRRRRRRYYYYYX  XYYX     "</span>,
  <span class="stri">" RRRRRRRRRRRRRRR  XXXXXXXXXXRRRRRX  XYYXXX   "</span>,
  <span class="stri">" RRRRRRRRRRRRRRR  X        XXXXXXXXXXYX  XX  "</span>,
  <span class="stri">" RRRRRRRRRRRRRRR  X        X X X X  XYX  XYX "</span>,
  <span class="stri">" RRRRRRRRRRRRRRR XXXXX XXXXX X X XXXYYXXXXYX "</span>,
  <span class="stri">"  RRRRRRRRRRRRR X XXX XXX XX X X XXXYYXX  X  "</span>,
  <span class="stri">"  RRRRRRRRRRRRR X X   X    X X X X XYYX   X  "</span>,
  <span class="stri">"   RRRRRRRRRRR  X X   X    X X X X  XXXXXXX  "</span>,
  <span class="stri">"    RRRRRRRRR   X X   X    X X X  X  XRRRRX  "</span>,
  <span class="stri">"     RRRRRRR   X X   XXX    X X X X XXXXXXXX "</span>,
  <span class="stri">"      RRRRR    X X          X  X X XXRXRXRXRX"</span>,
  <span class="stri">"       RRR      XX X XXX     X X X XRRRRRRRXX"</span>,
  <span class="stri">"        R   XXXXX  X      X X X X  XXRRRRRX  "</span>,
  <span class="stri">"          XXXRXX  X X   X X X X   X  XXXRX RR"</span>,
  <span class="stri">"       XXXXXXXRXXX  X X X XXX   XX X   XXXRRX"</span>,
  <span class="stri">"     XXXRX  XXRRX XX  X X  X XXX     XXRXXXXX"</span>,
  <span class="stri">"   XX  XRX   XXRRXX  XX XX XYYX  X  XRXRXYXXX"</span>,
  <span class="stri">" XXX X XRX X  XXRRXXXYXX XXYYYX X  XRYXRXXXYX"</span>,
  <span class="stri">"XYYRX X XRX X  XRRXXYXYXXYYYYX    XRYXRXXXXXY"</span>,
  <span class="stri">"YRRRXX  XRX    XXRRXXYXXYYYYYXX   XYRXRXYXXXX"</span>,
  <span class="stri">"RRXXXXX  XRX X  XRRRXXXYYYYYYX   XYRXRXXRYYXX"</span>,
  <span class="stri">"RXXXXXRX XRRX X XXRRXXYYYYYYX  X XRXRRXXXXYYX"</span>,
  <span class="stri">"XYXXXRRRX XRRX   XRRRXYYYYYXX X  XXRRXXXXRRYY"</span>,
  <span class="stri">"YRRYXXXRRX XRRRX XXRXYYYYYXRX   XXRRXXXXRRRRY"</span>,
  <span class="stri">"RRYYYRXXXXX XXRRXX XXYYYYYXX  XXRRXXXXXRRYRXY"</span>,
  <span class="stri">"RYYYXRYYXXXX  XXXXXXXXXXXXXXXXRRXXXXXXRRRRRYY"</span>,
  <span class="stri">"YYYXRXXXYXXXXX     RRRRRRRRRRRXXXXXXXRRYRXYYX"</span>,
  <span class="stri">"YYYXRYYYYXYX    RXXXXXXXXXXXXX XXXXXRRRRRYYYX"</span>,
  <span class="stri">"YYYXRXXXYXYX         XRRRRX    XXXXRRYRXYYYXX"</span>,
  <span class="stri">"YYYXRYYYYXYX       XXX RRRX X XXXXRYRRRYYYXXX"</span>,
  <span class="stri">"XYYYXRYYXXXXXXXXXXX XXXXXRXX XXXXXXXRXYYYXXXR"</span>,
  <span class="stri">"XXYYYYXXXXXXXXX   XXYYYYYXX  XXXXRRXYYYYXXXRX"</span>,
  <span class="stri">"RXXYXXXXXYYYYYX   XXYXRXYX  X XYYYYYYYYXXXXRR"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: queen_of_hearts_pic <span class="keywd">is</span> [](
  <span class="stri">"           XX X X  XXXRYYYYYX                "</span>,
  <span class="stri">"          XX X X X XXXRYXYYX   RRRR   RRRR   "</span>,
  <span class="stri">"         XXXX XX   XXXRYYYYX  RRRRRR RRRRRR  "</span>,
  <span class="stri">"         XYX X  X   XXRYXYX  RRRRRRR RRRRRRR "</span>,
  <span class="stri">"        XXYXX    XX XXRRYYX  RRRRRRRRRRRRRRR "</span>,
  <span class="stri">"        XYRX       XXXXRYYX  RRRRRRRRRRRRRRR "</span>,
  <span class="stri">"       XXYRXXXX XXX XXXRRYYX RRRRRRRRRRRRRRR "</span>,
  <span class="stri">"       XYRRXXX XXX XXXXXRRYX RRRRRRRRRRRRRRR "</span>,
  <span class="stri">"      XXYRRX   X    X XXXRX   RRRRRRRRRRRRR  "</span>,
  <span class="stri">"      XYRRYX   X    X XXXX    RRRRRRRRRRRRR  "</span>,
  <span class="stri">"      XYRRYX   X    X  XXXX    RRRRRRRRRRR   "</span>,
  <span class="stri">"      XYRRYX  XXX    X XXXXX    RRRRRRRRR    "</span>,
  <span class="stri">"     XYRRYYX         X  XXXXX    RRRRRRR     "</span>,
  <span class="stri">"     XYRRYXXX XXX   XYX  XXXXX    RRRRR      "</span>,
  <span class="stri">"     XYRRXXYX  X   XYYX   XXXXXX   RRR       "</span>,
  <span class="stri">"     XYRXYXXYX    XYYXXX   XXXXXXX  R        "</span>,
  <span class="stri">"     XYX YXXXYXXXXYYXXXYX   XXXXXX           "</span>,
  <span class="stri">"     XXY XYXXXYYYYXXXXYX X   XXXX    XX XX   "</span>,
  <span class="stri">"    XXYXYR YXXXXXXXXXYR YXXX   X    XYYXYYX  "</span>,
  <span class="stri">"   XYYYYXY XYYXXXXYYYX YXXXXXXXX    XYRRRX   "</span>,
  <span class="stri">"  XXXYXXYXYR XYYYYX RYYXXXX     X    XYRYYX  "</span>,
  <span class="stri">" XYYYYYYYYXYYYR XRYYYXX XX  X X XX XXXXYYX X "</span>,
  <span class="stri">"XXXXYXXXYYXXXXYYYYXXXXYXX X    XRRXYYYXXXYXX "</span>,
  <span class="stri">"YYYYYYYYYXX  XXXXXYXXXYXX    XXRRXYYYX  XXYX "</span>,
  <span class="stri">"XXXYXXXXYX X XXXXXXYXYXX X XXRRXXXXXX   XYYX "</span>,
  <span class="stri">"YYYYYYYYXX XXXX  XXYXYXX  XRRRXYYYX XXXXXYX  "</span>,
  <span class="stri">"XYXYXXXYXXX XX  X XXYXX X XRRXYRRRX XRX XX   "</span>,
  <span class="stri">"YYYYYYYYX X XRXX  XXYXX  XRRXYRRYRXX XX XX   "</span>,
  <span class="stri">"XXYXYXXYXXX XYRRX  XYX X XRRXYRRRXXX X X  X  "</span>,
  <span class="stri">"YYYYYYYYXX XXYYRRX XXX  XRRXYRRYRXX XX X  X  "</span>,
  <span class="stri">"XYXXXXYXX XXYXYYRXXXXX  XRRXYRRRRX XXX  XXX  "</span>,
  <span class="stri">"YYYYYYYXX XXYXXYRXXYYXXXXRRXYRYRRX X X   XRX "</span>,
  <span class="stri">"XYXXYYXXX XXYRXYYRXXXYYYXXRXYRRXXX XXX XXRRRX"</span>,
  <span class="stri">"YYYYYXRXXX XYRXYRRXYXXXXYYXXXXXRRXX XXXRRRRRR"</span>,
  <span class="stri">"XXXYXRRX X XYXXYYRXYXYYYXXYYXRRRYX X XRRRRRRX"</span>,
  <span class="stri">"YYYXRRRXX XXYXYYRXYXYRRRYXXXRRYYYXXX XRRRRXXY"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: jack_of_hearts_pic <span class="keywd">is</span> [](
  <span class="stri">"        XR RRR RR RR RR RRR RX               "</span>,
  <span class="stri">"X  XXX   XR RR RR RR RR RR RX  RRRR   RRRR   "</span>,
  <span class="stri">"RX  XYX   XR   RR    RR   RX  RRRRRR RRRRRR  "</span>,
  <span class="stri">"RX  XYYX   XRRRRRRRRRRRRRRX  RRRRRRR RRRRRRR "</span>,
  <span class="stri">"RX  XYYX    XXXXXXXXXXXXXXX  RRRRRRRRRRRRRRR "</span>,
  <span class="stri">"XXXX XYYX   XYXYXYXYX     X  RRRRRRRRRRRRRRR "</span>,
  <span class="stri">" R R  XYX   XYXYXYXYX  XX X  RRRRRRRRRRRRRRR "</span>,
  <span class="stri">" R R   XX  XYXYXYXYX XX X X  RRRRRRRRRRRRRRR "</span>,
  <span class="stri">" X X  XYX  XYXYXYXYX      X   RRRRRRRRRRRRR  "</span>,
  <span class="stri">"XXXX XYYX  XYXYXYXYX       X  RRRRRRRRRRRRR  "</span>,
  <span class="stri">"RX  XYYX   XYXYXYXYX        X  RRRRRRRRRRR   "</span>,
  <span class="stri">"RX  XYYX   XYXYXYXYX   XX XXX   RRRRRRRRR    "</span>,
  <span class="stri">"RX  XYX    XYXYXYXYX XXX  X      RRRRRRR     "</span>,
  <span class="stri">"RX XXX   XXXYXYXYXYX      X       RRRRR      "</span>,
  <span class="stri">"RX      XYYYXXYXYXYX    XXX        RRR   X   "</span>,
  <span class="stri">"RX     XYYXYXYXYXXYX      X         R  XXRXX "</span>,
  <span class="stri">"RX     XYXYYXYXYXYXRRR    XXXXXX       XRRRX "</span>,
  <span class="stri">"RX     XYYXXYYXYXXRRRRRXXXYYXYYYX       XRX  "</span>,
  <span class="stri">"RX      XYYYYXYXXRRRRRRRRRXYYXXYX       XRX  "</span>,
  <span class="stri">"RX      XXXXXXXYYXXRRRRRRRXXYYYYX   XXXXXRX  "</span>,
  <span class="stri">"RX    XXR RXYYYYYYYXXXXXXYYYXYYXX  XX    XXX "</span>,
  <span class="stri">"RX  XXXXXXR XXYYYYYYYYYYYYYYYXX RXXX  XX X X "</span>,
  <span class="stri">"RXXX  RRXXXXR XXXYYYYYYYYYXXX RRRXXXX  XXXXX "</span>,
  <span class="stri">"RXRR    RRXXXXR RXXXXXXXXXR RRRXXXXRRX  X  X "</span>,
  <span class="stri">"XXXXRR    RRXXXXR R R R R RRRXXXXRR   XXXXXX "</span>,
  <span class="stri">"YYYXXXRR    RRXXXXRXXXXXXXRXXXXRR    RXX  X  "</span>,
  <span class="stri">"YYXYYYXXRR    RRXXXRX   XRXXXRR    RRXX XXX  "</span>,
  <span class="stri">"YXYYYXYYXXRR    RRXXRX XRXXRR    RRXXYX    X "</span>,
  <span class="stri">"XXXYXYYRXXXXRR    RXXRXRXXR    RRXXYYYX X XXX"</span>,
  <span class="stri">"   XYYRXXYYYXXRR   RXXRXXR    RXXYYYYYX    XX"</span>,
  <span class="stri">"X   XRXXYYYYYYXRR   RXXXR   RRXYYYYYYYX X XXX"</span>,
  <span class="stri">"  X XXXYXXXXXXXXXR   RXR   RXXXXXXXXXYX    XX"</span>,
  <span class="stri">"X    XYYX       XRR  XXX  RRX       XYX X XXX"</span>,
  <span class="stri">"XX X XYYX XXXXX XXRRX   XRRXX XXXXX XYX    XX"</span>,
  <span class="stri">"XX    XYX XYYXXXX XX XXX XX XXXXYYX XYX X XXX"</span>,
  <span class="stri">"XXX X XYX XYYXX  XX XRRRX XX  XXYYX XYX    XX"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: king_of_diamonds_pic <span class="keywd">is</span> [](
  <span class="stri">"             XYYYYXYYYXYYYYYYYYYYYYYX        "</span>,
  <span class="stri">"       R      XYYXXXYXXXYYXYYYYYYYYX   XXX  X"</span>,
  <span class="stri">"      RRR      XRRRRRRRRYXXXYYXYYYX   XYX  XR"</span>,
  <span class="stri">"     RRRRR     XXXXXXXXXRRRRYXXXYXX  XYYX  XR"</span>,
  <span class="stri">"    RRRRRRR     XXXXXXXXXXXXRRRRRX   XYYX  XR"</span>,
  <span class="stri">"   RRRRRRRRR    X      XX XXXXXXXX  XYYX XXXX"</span>,
  <span class="stri">"   RRRRRRRRR    X XX   X X XXXXXXX  XYX  R R "</span>,
  <span class="stri">"  RRRRRRRRRRR   XXX X  X X X X X X  XX   R R "</span>,
  <span class="stri">" RRRRRRRRRRRRR  X      X X X X X X  XYX  X X "</span>,
  <span class="stri">"  RRRRRRRRRRR  X       X X X X X X  XYYX XXXX"</span>,
  <span class="stri">"   RRRRRRRRR  X        X X X X X X   XYYX  XR"</span>,
  <span class="stri">"   RRRRRRRRR  XXX       X X X X X X  XYYX  XR"</span>,
  <span class="stri">"    RRRRRRR     XXXX X  X X X X X X   XYX  XR"</span>,
  <span class="stri">"     RRRRR      X  XXX   X X X X X X   XXX XR"</span>,
  <span class="stri">"      RRR        XX       X X X X X X      XR"</span>,
  <span class="stri">"       R        X      XXX  X X X X X      XR"</span>,
  <span class="stri">"  XXX           XX    X   X X X X X X      XR"</span>,
  <span class="stri">" X X XXX     XX X     X XX  X X X X X      XR"</span>,
  <span class="stri">" XX X X X   X XX      XX   X X X X X       XR"</span>,
  <span class="stri">"XX X X X X  X          XXXXXXXXXXXXXXXX    XR"</span>,
  <span class="stri">"X X X     XXYX     XXXXXXXXYYX   XYYX  XXXXXX"</span>,
  <span class="stri">" X X    XXXXXYXXXXXXXXXXX XXYYX XXXYYX  XYYX "</span>,
  <span class="stri">"  X  XXXXXRRXXYXXXRRXXXX XX XYYXXX XYYX XXYYX"</span>,
  <span class="stri">"   XXRXXYXRRXXXYXRXRRXXXXXXXXXXXXXXXXXXXX XY "</span>,
  <span class="stri">" XXRRRRRXYXX XXYXRRXRXXYYYYYYYYYYYYYYXXXXXXXX"</span>,
  <span class="stri">"XRRRRRXXYXYXXRRXXXRRXX X X X X X X  XYXXXXXXX"</span>,
  <span class="stri">"RRRRXXYYYYXYXRRXYXXX               XYXRRXX  X"</span>,
  <span class="stri">"RRXXYYYYXXXXYXXXYX   XXXXXXXXXXX  XYXYXRRXX X"</span>,
  <span class="stri">"RXYYYYXXXXXXYX XYX XXYYYYYYYYYYX XYXXRYXRRXXX"</span>,
  <span class="stri">"XYYYXXXXX XXYXXXYXXYYXXXXXXXXYX XYXYYXRYXRRXX"</span>,
  <span class="stri">"YYYXXXX   XXXYXXXXYXXXXRRRRXYX  XYXXYYXRYXRRX"</span>,
  <span class="stri">"YYXRRXXX   XXYXXXYXXXRRRRRRXYX XYXXXXYXXXXXXX"</span>,
  <span class="stri">"YXRXRRXXX  XXYXXXYXXXXXXXXXYX  XYXXXXXRYXRYXR"</span>,
  <span class="stri">"XYYRXRRXXX XXXYXXYXRRRRRRRXYX XYXXXXYXRYXRYXR"</span>,
  <span class="stri">"XRYYRXRRXXX XXYXXYXXXXXXXXYX  XYXXRRYXRXXXXXX"</span>,
  <span class="stri">"RRXRYYRXXXXXXXXXXXYX     XYXXXXXXXXXXXRYYRXRR"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: queen_of_diamonds_pic <span class="keywd">is</span> [](
  <span class="stri">" XYYYYYYYYYXRRX  X X XXYX                    "</span>,
  <span class="stri">"  XYYYYYXXYXRRX X X X XYYX           R       "</span>,
  <span class="stri">"  XYYYYYYYYXRRX   XX XXXYX          RRR      "</span>,
  <span class="stri">"   XYYYYXXYXRRX  X  X XXXYX        RRRRR     "</span>,
  <span class="stri">"   XYYYYYYXXRX XX    XXXXXYX      RRRRRRR    "</span>,
  <span class="stri">"   XYYYXXYXRRXX       XRXXYX     RRRRRRRRR   "</span>,
  <span class="stri">"   XYYYYYXXRX  XXX XXXXRXXXYX    RRRRRRRRR   "</span>,
  <span class="stri">"   XYYXXYXRRX X XXX XXXRRXXYX   RRRRRRRRRRR  "</span>,
  <span class="stri">"   XYYYYXXRXX     X   XRRXXXYX RRRRRRRRRRRRR "</span>,
  <span class="stri">"  XYYXXYXRRX X    X   XRRRXXYX  RRRRRRRRRRR  "</span>,
  <span class="stri">"  XYYYYXXRX X X   X   XRRRXXYX   RRRRRRRRR   "</span>,
  <span class="stri">" XYYXYXXRRX XX   XXX  XRRRXXYX   RRRRRRRRR   "</span>,
  <span class="stri">"  XYYXXRRX  X         XRRRRXXYX   RRRRRRR    "</span>,
  <span class="stri">"   XXXRRX  XRX   XXX XYXRRRXXYX    RRRRR     "</span>,
  <span class="stri">"    XRRX   XXRX   X  XYXXRRXXYX     RRR      "</span>,
  <span class="stri">"   XRRX   XYYXXX    XYYX XRXXYX      R       "</span>,
  <span class="stri">"  XRRXXXXX XYYYXXXXXXYYX XXXXYX              "</span>,
  <span class="stri">" XRRXX XXXX XXXXYYYYXXX XXXXXYX      XXX     "</span>,
  <span class="stri">"XRRXX X XXXX    XXXX   XXX XXYX    XXYYXX    "</span>,
  <span class="stri">"RRX XX XXXXXXXX      XXX XXXYXX    XYXXYYX X "</span>,
  <span class="stri">"RXYX XXXX XX XXXXXXXXXX X XXXYX   XYYYYYX  XX"</span>,
  <span class="stri">"XXXYX XXXXX X XXXX XXXXX XXX XYX   XXXYX  XYX"</span>,
  <span class="stri">"XXYXYX XXXX X X X X X XXXXX XYYXX     XX XYYX"</span>,
  <span class="stri">"XYXXXYX  XXX XXXX X XXXXXX XYYXXXX     XXYXX "</span>,
  <span class="stri">"YXXRXXYXX  XXXXXXX XXXXX  XYXYXX XX   XXXXX  "</span>,
  <span class="stri">"XXRXXYXYYXX   XXXXXXXX  XXYXXYX XXXX X   XXX "</span>,
  <span class="stri">"XRXXYXRXXYYXXX        XXYYXXXYX XXXXX  XXX X "</span>,
  <span class="stri">"RXXYXXXR XXYYYXXXXXXXXYYXXXRXYX XXXXYX  X XX "</span>,
  <span class="stri">"XXYXXRXXR XXXXYYYYYYYYXXYXXRXYXX XXYYXX  X X "</span>,
  <span class="stri">"XYXXYXRXXR RXYXXXXXXXXYYYXXR XYXXXYYXXXX X X "</span>,
  <span class="stri">"YXXXYXXRX R XXYXXXXXYYXXYXXR XYYXYYX X XX X  "</span>,
  <span class="stri">" X XXYXRXR R XYX RXXYYYYYXXR RXYYYXXXXXXXX   "</span>,
  <span class="stri">"XXXXXYXRX R XXYX RXXYXXXYXXRXXRXYXXX X X XX  "</span>,
  <span class="stri">" X X XYXXR R XYX RXXYYYYYXXXRRXYXXYXXXXXXXXX "</span>,
  <span class="stri">"XXXXXXYXR R XXYXXXXXXXXXXRRRYRXYXRXYXX X X XX"</span>,
  <span class="stri">" X X XXYXR R XYXRRRRRRRRRYYYRXYXX RXYXXXXXXXX"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: jack_of_diamonds_pic <span class="keywd">is</span> [](
  <span class="stri">"         XR RRR RR RR RR RRR RX              "</span>,
  <span class="stri">"          XR RR RR RR RR RR RX       R       "</span>,
  <span class="stri">"           XR   RR    RR   RX       RRR      "</span>,
  <span class="stri">"X           XRRRRRRRRRRRRRRX       RRRRR     "</span>,
  <span class="stri">"XX          XXXXXXXXXXXXXXXX      RRRRRRR    "</span>,
  <span class="stri">"XYX         XXXXXYX        XX    RRRRRRRRR   "</span>,
  <span class="stri">"XYX         XXXYXYX        XX    RRRRRRRRR   "</span>,
  <span class="stri">"XYX         XYXYXYX XXX XXXXYX  RRRRRRRRRRR  "</span>,
  <span class="stri">"XYX    X    XYXYXYXX XXX XXXYX RRRRRRRRRRRRR "</span>,
  <span class="stri">"XYX   XX    XYXYXYX    X   XYX  RRRRRRRRRRR  "</span>,
  <span class="stri">"XYX XXYX    XYXYXYX    X   XYX   RRRRRRRRR   "</span>,
  <span class="stri">"XXXXYYX     XYXYXYX    X   XYX   RRRRRRRRR   "</span>,
  <span class="stri">"RYYYXXX     XYXYXYX   XXX  XYX    RRRRRRR    "</span>,
  <span class="stri">"XYXXXX      XYXYXYX        XYXXX   RRRRR     "</span>,
  <span class="stri">"RYXX      XXYYXYXYX   XXX X YXYYX   RRR      "</span>,
  <span class="stri">"XYX      XYYXYXYXYXX      XXYYXYX    R       "</span>,
  <span class="stri">"RYX      XYXXYXXYXR X    X RXYYYX           X"</span>,
  <span class="stri">"XYX      XYYYXYYXRRRRXXXXRRRRXXXXX         XR"</span>,
  <span class="stri">"RYX      XXXXXXXXRRRRRRRRRRRXX XYXXX      XYX"</span>,
  <span class="stri">"XYX    XXRXXX XXXXXRRRRRRRXXXXXXYX XXX    XYR"</span>,
  <span class="stri">"RYX  XXXYXRXXXX XXXXXXXXXXXXX XXYXXXYYXX  XYX"</span>,
  <span class="stri">"XYXXXXXXXYXRXXXXX XXXXXXXXX XXXXYX XYYXRXXXYR"</span>,
  <span class="stri">"RYXXXXXXXXYXRXXXXXX X X X XXXRXXYXXXXYXRRRXYX"</span>,
  <span class="stri">"XYXXXRXXXXXYXRXXXXXXXXXXXXXRXRXXYYX XYYXXRXYR"</span>,
  <span class="stri">"XXX XXRXXXXXYXRXXRXRXRXRXRXRXRX XYXXXXYYYXXYX"</span>,
  <span class="stri">"  X XYXRXXXXXYXRXXRYRYRYRYRYRYX XYYX XXXYYXYR"</span>,
  <span class="stri">"XXX XXYXRXXXXXYXRXXRXRXRXRXRXRX XXYYXX XXXXYX"</span>,
  <span class="stri">"  XXXYXYXRXXXXXYXRXXXRXRXRXRXRX XXXYYYXXX XYR"</span>,
  <span class="stri">"XXXRRXYXXXYXXXXXYXRXXRXRXRXRXRX XX XXYYYXXXYX"</span>,
  <span class="stri">" XX RXYXYYXRXXXXXYXRXXRYRYRYRYX XX X XXYYYXYR"</span>,
  <span class="stri">"XYXRRRXYXXXRYXXXXXYXRXXRXRXRXRX XX XXYXXXXXYX"</span>,
  <span class="stri">"XYX  RXYXYXRYRXXXXXYXRXXXRXRXRX XX XXXXYXRXYR"</span>,
  <span class="stri">"RYXRRRXYXXXRYRYXX XXYXRXXRXRXRX XX XYYXYX XYX"</span>,
  <span class="stri">"XYX  RXYXYXRYRXXXXXXRYXRXXRYRYXXXX XXXYXRRXYR"</span>,
  <span class="stri">"RYXRRRXYXXXRYXX XXXYRRYXRXXRXRXXXXXYYXYXR XYX"</span>,
  <span class="stri">"XYX  RXYXYXRXXXXXXRXYRRYXRXXRXX XXXXXYXRRRXYR"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: king_of_clubs_pic <span class="keywd">is</span> [](
  <span class="stri">"                XYYYXYYYXYYYXYYYYYYYYX       "</span>,
  <span class="stri">"       XXX       XYXXXYXXXYXXXYYXYYYX        "</span>,
  <span class="stri">"      XXXXX       XRRRRRRRRRRRRXXXYX         "</span>,
  <span class="stri">"     XXXXXXX       XXXXXXXXXXXXRRRX        X "</span>,
  <span class="stri">"     XXXXXXX       XXXXXXXXXXXXXXXX       XXX"</span>,
  <span class="stri">"     XXXXXXX      XX        X XXXXX      X XR"</span>,
  <span class="stri">"      XXXXX      X X        X X XXX      X XR"</span>,
  <span class="stri">"   XXX XXX XXX   X XXXX XXXXX X X X      X XR"</span>,
  <span class="stri">"  XXXXXXXXXXXXX  XXXXX XXX XX X X X      X XR"</span>,
  <span class="stri">" XXXXXXXXXXXXXXX X X   X    X X X X      X XR"</span>,
  <span class="stri">" XXXXXXXXXXXXXXX X X   X    X X X X      X XR"</span>,
  <span class="stri">" XXXXXXXXXXXXXXX X X   X    X X X X      X XR"</span>,
  <span class="stri">"  XXXXX X XXXXX  X X  XXX   X X X X      X XR"</span>,
  <span class="stri">"   XXX  X  XXX  X  XXX   XX X X X XXX    X XR"</span>,
  <span class="stri">"       XXX      XXXX  XXX   X X X X  X   X XR"</span>,
  <span class="stri">"      XXXXX      X X        X X  X X XX  X XR"</span>,
  <span class="stri">"               XXX X X   X XX X XXX XXRXXX XR"</span>,
  <span class="stri">"              X  X X X X X X XX X X XRRRRX XR"</span>,
  <span class="stri">"              X X  X X X X XX X   XXRYRRRX XR"</span>,
  <span class="stri">"           XXXX   X X XRX X  XRXXXRRYYRRRX XR"</span>,
  <span class="stri">"        XXXXXXXXXXXXRXRRRXRXXRRRRXRRRRRYXX XR"</span>,
  <span class="stri">"     XXXRRXYYXX XXYXXRRRRRRRRRRXXRYRRRRX X XR"</span>,
  <span class="stri">"    XRRRRRRXYYXXXXXYXXXRRRRRRXXXRYYRRYX  X XR"</span>,
  <span class="stri">"  XXR R R R XYYXX XYXYXXXRRXXXYXRRRRRX  XX XR"</span>,
  <span class="stri">" XXXRRRRRRRRRXYYXXXXYXYXXXXXXYXRRRRYX  XXX XR"</span>,
  <span class="stri">"RXXX R R R R RXYYXXXYXYYXXXXYYXRYRRRX XXXX XR"</span>,
  <span class="stri">"RXXXRRRRRRRRRRXXYRXXXYXXYXXYXXRYYRRX  XXXX XR"</span>,
  <span class="stri">"RXXXR R R R R XXXYRXXYXYYYYYYXRRRRYX XXRXX XR"</span>,
  <span class="stri">"RXXXRRRRRXXXXRXXRXYXXXYXXXRXXXRRRRRX XXXXX XR"</span>,
  <span class="stri">"XYYXXR RX    XXXXXXYXXYXYYYYYXRYRYX  XXRXX XR"</span>,
  <span class="stri">"YYYYXRRX  XX  XXRRXYXXYXXXRXXRYYRRX XXXXXX XR"</span>,
  <span class="stri">"XYYXXXRX XRRX XXXXXXYXXYXYYYXRRRRYX XXXXXXXXR"</span>,
  <span class="stri">"XXXXXXXX XRRX XXRRRXYXXYXXRXXRRRRRX XXX  X  X"</span>,
  <span class="stri">"XRRXXXXX  XX  XXXXXXXYXYXYYYXRRYRYX XX    XXX"</span>,
  <span class="stri">"XXXXXXXXX    XXXXXXXXXXXXXXXXRYYRRX XX XX   X"</span>,
  <span class="stri">"X  X  XXXXXXXRRX    XRRRXXXXXXRRRYX XX   XXXX"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: queen_of_clubs_pic <span class="keywd">is</span> [](
  <span class="stri">"YYYYYYYYYYRXXR X X XX X                      "</span>,
  <span class="stri">"XYYYYYYYYYRXXR XX X XXX            XXX       "</span>,
  <span class="stri">" XYYYYYXXYRXXR X  XX XX           XXXXX      "</span>,
  <span class="stri">"  XYYYYXYRRXXR X X  X X          XXXXXXX     "</span>,
  <span class="stri">"  XYYYYYRRXXRR XX    XXX         XXXXXXX     "</span>,
  <span class="stri">"   XYYYYRRXXR  X      XX         XXXXXXX     "</span>,
  <span class="stri">"   XYXXYRXXXR  XXX XXXXRX         XXXXX      "</span>,
  <span class="stri">"   XYXYRRXXRR X XX  XXXRX      XXX XXX XXX   "</span>,
  <span class="stri">"  XYYYRRXXXR  X   X   XXRX    XXXXXXXXXXXXX  "</span>,
  <span class="stri">"  XYYYRRXXRR X    X   XXRX   XXXXXXXXXXXXXXX "</span>,
  <span class="stri">" XYXXRRXXRR  X    X   XXXRX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">"XYYXRRXXXR  X    XXX  XRXRRX XXXXXXXXXXXXXXX "</span>,
  <span class="stri">" XXRRXXXRR  X         XRRXRRX XXXXX X XXXXX  "</span>,
  <span class="stri">"   XXXXRR  XRX   XXX XXXRXXRRX XXX  X  XXX   "</span>,
  <span class="stri">"    XXXR   XXRX   X  XXXXRXXRRX    XXX       "</span>,
  <span class="stri">"   XXXRR  XXYXXX    XYXXXXRXXRRX  XXXXX      "</span>,
  <span class="stri">"  XXXRR XXRYRYXYXXXXYXRYYRXRRXXRX            "</span>,
  <span class="stri">" XXXRR X  XRYRRYXYXYRRYYRX XRRXXRX   XX      "</span>,
  <span class="stri">"XXXRXXXXXXXXRYYRRRRRYYYRXXXXXRRXRX  XRRXX    "</span>,
  <span class="stri">"XXRYYYXXXXX XXRYYYYYYRRX X XYXRXRX XRXXRRX   "</span>,
  <span class="stri">"XYYXYYYX  X  XXXRXXXRXX  XXYXYXRX XRRRRRX    "</span>,
  <span class="stri">"YYYYXYXYX X XXX XRRRX XXXXYYYXXX   XXXRX XXX "</span>,
  <span class="stri">"RRRRRXYYYXXXX X XRYRX X XYXYXXXYX     X XYYYX"</span>,
  <span class="stri">"RRRRRRXYYXYXX X XRRRX XXYYYXRXXYXX XXX XYYXX "</span>,
  <span class="stri">"RRRRRRRXXYYYYXXXXXRXXXXYXYXRRXXYXXXYYYXXXXX  "</span>,
  <span class="stri">"YXYXYXRRRXXYXYYYYXXXYYYYXXXYRXXYXXYYYX X   X "</span>,
  <span class="stri">"XYXYXYXYXRRXXXYYYYYYYYXXXXXYRRXXYXXXXX  XXXX "</span>,
  <span class="stri">"YXYXXXXXXXXRRYXXXXXXXXXXYXXYRRXXXRRXRXX X  X "</span>,
  <span class="stri">"XYXXYYYYYYYXXRRYXXXXYXXYXXYRRRRXR  RXXXXXXXX "</span>,
  <span class="stri">"YXYYYXXXXXYYYXRRXXXXXYXYXXYRRRXYXR RRXRX   X "</span>,
  <span class="stri">"XYYXXXYXYXXXYYXRYXXXXXYXXXYRRXYYXXRRRRXXXXX  "</span>,
  <span class="stri">"RXXXYXYXYXYXXYYXRXXXXYXYXXYRRXYXYYXR  RXRX   "</span>,
  <span class="stri">"RRXXYXXXXXXYYXYXRYXXYXXXYXYRXYYXXXXXR RRXXX  "</span>,
  <span class="stri">"R RXXRRRRRXXXXYYXRXYXXXXXXYRXYXYYXRRXRRRRXRX "</span>,
  <span class="stri">"R  RXR   RRXYYXYXXXXXYYYXXXXXYXXXXR  XR  RXXX"</span>,
  <span class="stri">"XRRRRX XX RXXXXYXRRXRRRRRXYYXYXYYXR X XR RRXR"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: jack_of_clubs_pic <span class="keywd">is</span> [](
  <span class="stri">"        XRRXRRRXRXRRXRXRRRXRRX               "</span>,
  <span class="stri">"X        XRRXRRXRXRRXRXRRXRRX      XXX       "</span>,
  <span class="stri">"RX       XXRRXXXRXXXXRXXXRRX      XXXXX      "</span>,
  <span class="stri">"RRX     XGGXRRRRRRRRRRRRRRX      XXXXXXX     "</span>,
  <span class="stri">"RRRX    XGXXXXXXXXXXXXXXXXX      XXXXXXX     "</span>,
  <span class="stri">"XXXXX   GGXX        XYXYXYX      XXXXXXX     "</span>,
  <span class="stri">"YYYX   XGGXX        XYXYXYX       XXXXX      "</span>,
  <span class="stri">"XYYX   XXXYXXXX XXX XYXYXYX    XXX XXX XXX   "</span>,
  <span class="stri">"YYYX     XYXXX XXX XXYXYXYX   XXXXXXXXXXXXX  "</span>,
  <span class="stri">"XYYX     XYX   X    XYXYXYX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">"YYYX    XXYX   X    XYXYXYX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">"XYYX   XYXYX   X    XYXYXYX  XXXXXXXXXXXXXXX "</span>,
  <span class="stri">"YYYX   XYXYX  XXX   XYXYXYXX  XXXXX X XXXXX  "</span>,
  <span class="stri">"XXYX   XXXYX        XYXYXXYYX  XXX  X  XXX   "</span>,
  <span class="stri">"YYYX  XYYXY X XXX   XYXXXYYXX      XXX       "</span>,
  <span class="stri">"XXYX  XYXYYXX      XXYXYYXXXXXX   XXXXX      "</span>,
  <span class="stri">"YYYX  XYYYXXRX    XRXYXXYXXX X X             "</span>,
  <span class="stri">"YYYXX  XXXRXRRXXXXRRRXYYYXX XX RXX          X"</span>,
  <span class="stri">"XYX  XXRXRXXRRRRXXRRRXXXXXXXYX RRRXX       XY"</span>,
  <span class="stri">" X    XXRXRXRYYRXXXRXX  XX XYX RRYR XX    XYY"</span>,
  <span class="stri">"XXXXX XRXRXXRRRRX XXX  XX XYYX RYYYR XXXXXYYY"</span>,
  <span class="stri">"  XX  XXRXRXRYYRX  X  XX XYYYX YYRYY XXXXXYYY"</span>,
  <span class="stri">"XXYX  XRXRXXRRRRXX   XX XYYXXX RYYYR XXXXXYYY"</span>,
  <span class="stri">" XYX  XXRXRXRYYRXXX XX RXYYYYX RRYRR XXXXXYYY"</span>,
  <span class="stri">"XYYX  XRXRXXRRRRX XXX RXYYXXXX RRRRR XXXXXYYY"</span>,
  <span class="stri">" XYX XRXRXXXRYYRXX X XXYYYYYYX RRYRR XXXXXYYY"</span>,
  <span class="stri">"XYYXXXXRXXXXRRRRXRX XRXYXYXXXX RYYYR XXXXXYYY"</span>,
  <span class="stri">"YYYXXXXXXXXRYYRXYXRXRXYYYYYYYX YYRYY XXXXXYYY"</span>,
  <span class="stri">"YYYXX XXX XRRRRXXYXRXYXYXXXXXX RYYYRXXXRRXYYY"</span>,
  <span class="stri">"YYYX   X  XRYYRXYYYXYYYYYYYYYX RRYRRXRRRYXYYY"</span>,
  <span class="stri">"YYYX X   XXRRRRXXXXYYXYXXXXXXX XXXXRRYYRRXYYY"</span>,
  <span class="stri">"YYYXX X X XRYYRXYYYYYYYYYYYYYXX  XRRRRRRRXYYY"</span>,
  <span class="stri">"YYYX X X XXRRRRXXYRXYXXXYXRYX   XRRYYRRXXXYYY"</span>,
  <span class="stri">"YYYXX X X RYYRXYYYXRX   XRXX    XRRRRRXX XYYY"</span>,
  <span class="stri">"YYYX X X XRRRRXXYYYX XXX X     XRYYRRX X XYYY"</span>,
  <span class="stri">"YYYXX X XXRYYRXYXXX XRRRX X   XXRRRRX X XXYYY"</span>);


<span class="keywd">const</span> <span class="type">array</span> <span class="type">string</span>: backside_pic <span class="keywd">is</span> [](
  <span class="stri">"   BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB   "</span>,
  <span class="stri">"  B B                                                     B B  "</span>,
  <span class="stri">" B B  BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB  B B "</span>,
  <span class="stri">"B B  B      B B      B B      B B      B B      B B      B  B B"</span>,
  <span class="stri">"BB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B B      B B      B B      B B      B B      B B      B B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B B      B B      B B      B B      B B      B B      B B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B B      B B      B B      B B      B B      B B      B B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B B      B B      B B      B B      B B      B B      B B  B"</span>,
  <span class="stri">"BB BB  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  B  BBBB  BB BB"</span>,
  <span class="stri">"B  B  B BB B   B BB B   B BB B   B BB B   B BB B   B BB B  B  B"</span>,
  <span class="stri">"BB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BBBB B B BB"</span>,
  <span class="stri">"BB B BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB BBB  BBB B BB"</span>);

<span class="keywd">const</span> <span class="type">type</span>: suitSignPosition <span class="keywd">is</span> <span class="type">array</span> <span class="type">array</span> integer;


<span class="keywd">const</span> <span class="type">proc</span>: drawPic (<span class="keywd">inout</span> <span class="type">PRIMITIVE_WINDOW</span>: pixmap,
    <span class="op">in</span> <span class="type">integer</span>: xPos, <span class="op">in</span> <span class="type">integer</span>: yPos, <span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: pattern,
    <span class="op">in</span> <span class="type">integer</span>: scale) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">integer</span>: line <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: column <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">char</span>: ch <span class="keywd">is</span> <span class="stri">' '</span>;
    <span class="keywd">var</span> <span class="type">color</span>: col <span class="keywd">is</span> black;
  <span class="keywd">begin</span>
    <span class="keywd">for</span> line <span class="keywd">range</span> 1 <span class="keywd">to</span> length(pattern) <span class="keywd">do</span>
      <span class="keywd">for</span> column <span class="keywd">range</span> 1 <span class="keywd">to</span> length(pattern[1]) <span class="keywd">do</span>
        ch := pattern[line][column];
        <span class="keywd">if</span> ch &lt;> <span class="stri">' '</span> <span class="keywd">then</span>
          col := charColor(ch, white);
          rect(pixmap, (xPos + column) * scale, (yPos + line) * scale,
              scale, scale, col);
        <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">end</span> <span class="keywd">for</span>;
    <span class="keywd">end</span> <span class="keywd">for</span>;
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: drawPic2 (<span class="keywd">inout</span> <span class="type">PRIMITIVE_WINDOW</span>: pixmap,
    <span class="op">in</span> <span class="type">integer</span>: xPos, <span class="op">in</span> <span class="type">integer</span>: yPos, <span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: pattern,
    <span class="op">in</span> <span class="type">integer</span>: scale) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">integer</span>: height <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: width <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: line <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: column <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">char</span>: ch <span class="keywd">is</span> <span class="stri">' '</span>;
    <span class="keywd">var</span> <span class="type">color</span>: col <span class="keywd">is</span> black;
  <span class="keywd">begin</span>
    height := height(pixmap) <span class="op">div</span> scale;
    width := width(pixmap) <span class="op">div</span> scale;
    <span class="keywd">for</span> line <span class="keywd">range</span> 1 <span class="keywd">to</span> length(pattern) <span class="keywd">do</span>
      <span class="keywd">for</span> column <span class="keywd">range</span> 1 <span class="keywd">to</span> length(pattern[1]) <span class="keywd">do</span>
        ch := pattern[line][column];
        <span class="keywd">if</span> ch &lt;> <span class="stri">' '</span> <span class="keywd">then</span>
          col := charColor(ch, white);
          rect(pixmap, (xPos + column) * scale, (yPos + line) * scale,
              scale, scale, col);
          rect(pixmap, pred(width - xPos - column) * scale,
              pred(height - yPos - line) * scale,
              scale, scale, col);
        <span class="keywd">end</span> <span class="keywd">if</span>;
      <span class="keywd">end</span> <span class="keywd">for</span>;
    <span class="keywd">end</span> <span class="keywd">for</span>;
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">func</span> <span class="type">PRIMITIVE_WINDOW</span>: genPixmap (<span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: pattern,
    <span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: small_suit_sign, <span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: color_sign,
    <span class="op">in</span> <span class="type">integer</span>: scale) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">PRIMITIVE_WINDOW</span>: pixmap <span class="keywd">is</span> PRIMITIVE_WINDOW.value;
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">integer</span>: height <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: width <span class="keywd">is</span> 0;
  <span class="keywd">begin</span>
    height := 2 * (length(pattern) + 12);
    width := length(pattern[1]) + 2 * 13;
    pixmap := newPixmap(width * scale, height * scale);
    clear(pixmap, black);
    rectTo(pixmap, 1 * scale, 1 * scale,
        pred(pred(width) * scale),
        pred(pred(height) * scale), white);
    rect(pixmap, scale, scale,
        scale, scale, light_gray);
    rect(pixmap, (width - 2) * scale, scale,
        scale, scale, light_gray);
    rect(pixmap, scale, (height - 2) * scale,
        scale, scale, light_gray);
    rect(pixmap, (width - 2) * scale, (height - 2) * scale,
        scale, scale, light_gray);
    rectTo(pixmap, 12 * scale, 11 * scale,
        pred((width - 12) * scale),
        pred((height - 11) * scale), black);
    rectTo(pixmap, 13 * scale, 12 * scale,
        pred((width - 13) * scale),
        pred((height - 12) * scale), white);
    drawPic2(pixmap, 12, 11, pattern, scale);
    drawPic2(pixmap,  1,  3, small_suit_sign, scale);
    drawPic2(pixmap,  1, 18, color_sign, scale);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">func</span> <span class="type">PRIMITIVE_WINDOW</span>: genPixmap (<span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: big_suit_sign,
    <span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: small_suit_sign, <span class="op">in</span> <span class="type">array</span> <span class="type">string</span>: color_sign,
    <span class="op">in</span> <span class="type">suitSignPosition</span>: positions, <span class="op">in</span> <span class="type">integer</span>: scale) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">PRIMITIVE_WINDOW</span>: pixmap <span class="keywd">is</span> PRIMITIVE_WINDOW.value;
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">integer</span>: height <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: width <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">color</span>: col <span class="keywd">is</span> black;
    <span class="keywd">var</span> <span class="type">integer</span>: index <span class="keywd">is</span> 0;
  <span class="keywd">begin</span>
    height := 96;
    width := 71;
    pixmap := newPixmap(width * scale, height * scale);
    clear(pixmap, black);
    rectTo(pixmap, 1 * scale, 1 * scale,
        pred(pred(width) * scale),
        pred(pred(height) * scale), white);
    rect(pixmap, scale, scale,
        scale, scale, light_gray);
    rect(pixmap, (width - 2) * scale, scale,
        scale, scale, light_gray);
    rect(pixmap, scale, (height - 2) * scale,
        scale, scale, light_gray);
    rect(pixmap, (width - 2) * scale, (height - 2) * scale,
        scale, scale, light_gray);
    <span class="keywd">for</span> index <span class="keywd">range</span> 1 <span class="keywd">to</span> length(positions) <span class="keywd">do</span>
      <span class="keywd">if</span> positions[index][3] = 2 <span class="keywd">then</span>
        drawPic2(pixmap, positions[index][1], positions[index][2],
            big_suit_sign, scale);
      <span class="keywd">else</span>
        drawPic(pixmap, positions[index][1], positions[index][2],
            big_suit_sign, scale);
      <span class="keywd">end</span> <span class="keywd">if</span>;
    <span class="keywd">end</span> <span class="keywd">for</span>;
    drawPic2(pixmap,  1,  3, small_suit_sign, scale);
    drawPic2(pixmap,  1, 18, color_sign, scale);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Describes the suits of a french deck.
 *)</span>
<span class="keywd">const</span> <span class="type">type</span>: cardSuit <span class="keywd">is</span> <span class="keywd">new</span> <span class="keywd">enum</span>
    clubs, diamonds, hearts, spades
  <span class="keywd">end</span> <span class="keywd">enum</span>;

<span class="keywd">const</span> <span class="type">func</span> <span class="type">string</span>: str (<span class="op">in</span> <span class="type">cardSuit</span>: suit) <span class="keywd">is</span>
  <span class="keywd">return</span> literal(suit);

<span class="keywd">const</span> <span class="type">set</span> <span class="type">of</span> <span class="type">cardSuit</span>: blackCardSuit <span class="keywd">is</span> {clubs, spades};
<span class="keywd">const</span> <span class="type">set</span> <span class="type">of</span> <span class="type">cardSuit</span>: redCardSuit <span class="keywd">is</span> {diamonds, hearts};


<span class="comment">(**
 *  Describes the ranks of a french deck.
 *)</span>
<span class="keywd">const</span> <span class="type">type</span>: cardRank <span class="keywd">is</span> <span class="keywd">new</span> <span class="keywd">enum</span>
    two, three, four, five, six, seven, eight, nine, ten, jack, queen, king, ace
  <span class="keywd">end</span> <span class="keywd">enum</span>;

<span class="keywd">const</span> <span class="type">func</span> <span class="type">string</span>: str (<span class="op">in</span> <span class="type">cardRank</span>: rank) <span class="keywd">is</span>
  <span class="keywd">return</span> literal(rank);


<span class="comment">(**
 *  Create a pixmap with a card from the french deck.
 *  @return the created pixmap.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">PRIMITIVE_WINDOW</span>: cardPixmap (<span class="op">in</span> <span class="type">cardSuit</span>: suit, <span class="op">in</span> <span class="type">cardRank</span>: rank, <span class="op">in</span> <span class="type">integer</span>: scale) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">PRIMITIVE_WINDOW</span>: pixmap <span class="keywd">is</span> PRIMITIVE_WINDOW.value;
  <span class="keywd">local</span>
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: ACE_POS   <span class="keywd">is</span> []([](27, 39, 1));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: TEN_POS   <span class="keywd">is</span> []([](13,  8, 2), [](41,  8, 2), [](13, 28, 2), [](41, 28, 2), [](27, 18, 2));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: NINE_POS  <span class="keywd">is</span> []([](13,  8, 2), [](41,  8, 2), [](13, 28, 2), [](41, 28, 2), [](27, 39, 1));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: EIGHT_POS <span class="keywd">is</span> []([](13,  8, 2), [](41,  8, 2), [](13, 39, 1), [](41, 39, 1), [](27, 23, 2));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: SEVEN_POS <span class="keywd">is</span> []([](13,  8, 2), [](41,  8, 2), [](13, 39, 1), [](41, 39, 1), [](27, 23, 1));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: SIX_POS   <span class="keywd">is</span> []([](13,  8, 2), [](41,  8, 2), [](13, 39, 1), [](41, 39, 1));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: FIVE_POS  <span class="keywd">is</span> []([](13,  8, 2), [](41,  8, 2), [](27, 39, 1));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: FOUR_POS  <span class="keywd">is</span> []([](13,  8, 2), [](41,  8, 2));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: THREE_POS <span class="keywd">is</span> []([](27,  8, 2), [](27, 39, 1));
    <span class="keywd">const</span> <span class="type">suitSignPosition</span>: TWO_POS   <span class="keywd">is</span> []([](27,  8, 2));
  <span class="keywd">begin</span>
    <span class="keywd">case</span> suit <span class="keywd">of</span>
      <span class="keywd">when</span> {clubs}:
        <span class="keywd">case</span> rank <span class="keywd">of</span>
          <span class="keywd">when</span> {ace}:   pixmap := genPixmap(big_clubs_sign,     black_A_sign,  small_clubs_sign, ACE_POS,   scale);
          <span class="keywd">when</span> {king}:  pixmap := genPixmap(king_of_clubs_pic,  black_K_sign,  small_clubs_sign, scale);
          <span class="keywd">when</span> {queen}: pixmap := genPixmap(queen_of_clubs_pic, black_Q_sign,  small_clubs_sign, scale);
          <span class="keywd">when</span> {jack}:  pixmap := genPixmap(jack_of_clubs_pic,  black_J_sign,  small_clubs_sign, scale);
          <span class="keywd">when</span> {ten}:   pixmap := genPixmap(big_clubs_sign,     black_10_sign, small_clubs_sign, TEN_POS,   scale);
          <span class="keywd">when</span> {nine}:  pixmap := genPixmap(big_clubs_sign,     black_9_sign,  small_clubs_sign, NINE_POS,  scale);
          <span class="keywd">when</span> {eight}: pixmap := genPixmap(big_clubs_sign,     black_8_sign,  small_clubs_sign, EIGHT_POS, scale);
          <span class="keywd">when</span> {seven}: pixmap := genPixmap(big_clubs_sign,     black_7_sign,  small_clubs_sign, SEVEN_POS, scale);
          <span class="keywd">when</span> {six}:   pixmap := genPixmap(big_clubs_sign,     black_6_sign,  small_clubs_sign, SIX_POS,   scale);
          <span class="keywd">when</span> {five}:  pixmap := genPixmap(big_clubs_sign,     black_5_sign,  small_clubs_sign, FIVE_POS,  scale);
          <span class="keywd">when</span> {four}:  pixmap := genPixmap(big_clubs_sign,     black_4_sign,  small_clubs_sign, FOUR_POS,  scale);
          <span class="keywd">when</span> {three}: pixmap := genPixmap(big_clubs_sign,     black_3_sign,  small_clubs_sign, THREE_POS, scale);
          <span class="keywd">when</span> {two}:   pixmap := genPixmap(big_clubs_sign,     black_2_sign,  small_clubs_sign, TWO_POS,   scale);
        <span class="keywd">end</span> <span class="keywd">case</span>;
      <span class="keywd">when</span> {diamonds}:
        <span class="keywd">case</span> rank <span class="keywd">of</span>
          <span class="keywd">when</span> {ace}:   pixmap := genPixmap(big_diamonds_sign,     red_A_sign,  small_diamonds_sign, ACE_POS,   scale);
          <span class="keywd">when</span> {king}:  pixmap := genPixmap(king_of_diamonds_pic,  red_K_sign,  small_diamonds_sign, scale);
          <span class="keywd">when</span> {queen}: pixmap := genPixmap(queen_of_diamonds_pic, red_Q_sign,  small_diamonds_sign, scale);
          <span class="keywd">when</span> {jack}:  pixmap := genPixmap(jack_of_diamonds_pic,  red_J_sign,  small_diamonds_sign, scale);
          <span class="keywd">when</span> {ten}:   pixmap := genPixmap(big_diamonds_sign,     red_10_sign, small_diamonds_sign, TEN_POS,   scale);
          <span class="keywd">when</span> {nine}:  pixmap := genPixmap(big_diamonds_sign,     red_9_sign,  small_diamonds_sign, NINE_POS,  scale);
          <span class="keywd">when</span> {eight}: pixmap := genPixmap(big_diamonds_sign,     red_8_sign,  small_diamonds_sign, EIGHT_POS, scale);
          <span class="keywd">when</span> {seven}: pixmap := genPixmap(big_diamonds_sign,     red_7_sign,  small_diamonds_sign, SEVEN_POS, scale);
          <span class="keywd">when</span> {six}:   pixmap := genPixmap(big_diamonds_sign,     red_6_sign,  small_diamonds_sign, SIX_POS,   scale);
          <span class="keywd">when</span> {five}:  pixmap := genPixmap(big_diamonds_sign,     red_5_sign,  small_diamonds_sign, FIVE_POS,  scale);
          <span class="keywd">when</span> {four}:  pixmap := genPixmap(big_diamonds_sign,     red_4_sign,  small_diamonds_sign, FOUR_POS,  scale);
          <span class="keywd">when</span> {three}: pixmap := genPixmap(big_diamonds_sign,     red_3_sign,  small_diamonds_sign, THREE_POS, scale);
          <span class="keywd">when</span> {two}:   pixmap := genPixmap(big_diamonds_sign,     red_2_sign,  small_diamonds_sign, TWO_POS,   scale);
        <span class="keywd">end</span> <span class="keywd">case</span>;
      <span class="keywd">when</span> {hearts}:
        <span class="keywd">case</span> rank <span class="keywd">of</span>
          <span class="keywd">when</span> {ace}:   pixmap := genPixmap(big_hearts_sign,     red_A_sign,  small_hearts_sign, ACE_POS,   scale);
          <span class="keywd">when</span> {king}:  pixmap := genPixmap(king_of_hearts_pic,  red_K_sign,  small_hearts_sign, scale);
          <span class="keywd">when</span> {queen}: pixmap := genPixmap(queen_of_hearts_pic, red_Q_sign,  small_hearts_sign, scale);
          <span class="keywd">when</span> {jack}:  pixmap := genPixmap(jack_of_hearts_pic,  red_J_sign,  small_hearts_sign, scale);
          <span class="keywd">when</span> {ten}:   pixmap := genPixmap(big_hearts_sign,     red_10_sign, small_hearts_sign, TEN_POS,   scale);
          <span class="keywd">when</span> {nine}:  pixmap := genPixmap(big_hearts_sign,     red_9_sign,  small_hearts_sign, NINE_POS,  scale);
          <span class="keywd">when</span> {eight}: pixmap := genPixmap(big_hearts_sign,     red_8_sign,  small_hearts_sign, EIGHT_POS, scale);
          <span class="keywd">when</span> {seven}: pixmap := genPixmap(big_hearts_sign,     red_7_sign,  small_hearts_sign, SEVEN_POS, scale);
          <span class="keywd">when</span> {six}:   pixmap := genPixmap(big_hearts_sign,     red_6_sign,  small_hearts_sign, SIX_POS,   scale);
          <span class="keywd">when</span> {five}:  pixmap := genPixmap(big_hearts_sign,     red_5_sign,  small_hearts_sign, FIVE_POS,  scale);
          <span class="keywd">when</span> {four}:  pixmap := genPixmap(big_hearts_sign,     red_4_sign,  small_hearts_sign, FOUR_POS,  scale);
          <span class="keywd">when</span> {three}: pixmap := genPixmap(big_hearts_sign,     red_3_sign,  small_hearts_sign, THREE_POS, scale);
          <span class="keywd">when</span> {two}:   pixmap := genPixmap(big_hearts_sign,     red_2_sign,  small_hearts_sign, TWO_POS,   scale);
        <span class="keywd">end</span> <span class="keywd">case</span>;
      <span class="keywd">when</span> {spades}:
        <span class="keywd">case</span> rank <span class="keywd">of</span>
          <span class="keywd">when</span> {ace}:   pixmap := genPixmap(big_spades_sign,     black_A_sign,  small_spades_sign, ACE_POS,   scale);
          <span class="keywd">when</span> {king}:  pixmap := genPixmap(king_of_spades_pic,  black_K_sign,  small_spades_sign, scale);
          <span class="keywd">when</span> {queen}: pixmap := genPixmap(queen_of_spades_pic, black_Q_sign,  small_spades_sign, scale);
          <span class="keywd">when</span> {jack}:  pixmap := genPixmap(jack_of_spades_pic,  black_J_sign,  small_spades_sign, scale);
          <span class="keywd">when</span> {ten}:   pixmap := genPixmap(big_spades_sign,     black_10_sign, small_spades_sign, TEN_POS,   scale);
          <span class="keywd">when</span> {nine}:  pixmap := genPixmap(big_spades_sign,     black_9_sign,  small_spades_sign, NINE_POS,  scale);
          <span class="keywd">when</span> {eight}: pixmap := genPixmap(big_spades_sign,     black_8_sign,  small_spades_sign, EIGHT_POS, scale);
          <span class="keywd">when</span> {seven}: pixmap := genPixmap(big_spades_sign,     black_7_sign,  small_spades_sign, SEVEN_POS, scale);
          <span class="keywd">when</span> {six}:   pixmap := genPixmap(big_spades_sign,     black_6_sign,  small_spades_sign, SIX_POS,   scale);
          <span class="keywd">when</span> {five}:  pixmap := genPixmap(big_spades_sign,     black_5_sign,  small_spades_sign, FIVE_POS,  scale);
          <span class="keywd">when</span> {four}:  pixmap := genPixmap(big_spades_sign,     black_4_sign,  small_spades_sign, FOUR_POS,  scale);
          <span class="keywd">when</span> {three}: pixmap := genPixmap(big_spades_sign,     black_3_sign,  small_spades_sign, THREE_POS, scale);
          <span class="keywd">when</span> {two}:   pixmap := genPixmap(big_spades_sign,     black_2_sign,  small_spades_sign, TWO_POS,   scale);
        <span class="keywd">end</span> <span class="keywd">case</span>;
    <span class="keywd">end</span> <span class="keywd">case</span>;
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Create a pixmap with the backside of a card.
 *  @return the created pixmap.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">PRIMITIVE_WINDOW</span>: cardBackside (<span class="op">in</span> <span class="type">integer</span>: scale) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">PRIMITIVE_WINDOW</span>: pixmap <span class="keywd">is</span> PRIMITIVE_WINDOW.value;
  <span class="keywd">local</span>
    <span class="keywd">var</span> <span class="type">integer</span>: height <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: width <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: xPos <span class="keywd">is</span> 0;
    <span class="keywd">var</span> <span class="type">integer</span>: yPos <span class="keywd">is</span> 0;
  <span class="keywd">begin</span>
    height := 96;
    width := 71;
    pixmap := newPixmap(width * scale, height * scale);
    clear(pixmap, black);
    rectTo(pixmap, 1 * scale, 1 * scale,
        pred(pred(width) * scale),
        pred(pred(height) * scale), white);
    rect(pixmap, scale, scale,
        scale, scale, light_gray);
    rect(pixmap, (width - 2) * scale, scale,
        scale, scale, light_gray);
    rect(pixmap, scale, (height - 2) * scale,
        scale, scale, light_gray);
    rect(pixmap, (width - 2) * scale, (height - 2) * scale,
        scale, scale, light_gray);
    drawPic2(pixmap, 3, 3, backside_pic, scale);
  <span class="keywd">end</span> <span class="keywd">func</span>;
</pre>
</body>
</html>
