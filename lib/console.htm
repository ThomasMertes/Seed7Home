<html>
<head>
<title>
Seed7 Program listing</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="../style3.css" type="text/css" />
</head>
<body>
<pre class="indent">

<span class="comment">(********************************************************************)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  console.s7i   Text implementation type for text console/window. *)</span>
<span class="comment">(*  Copyright (C) 1992, 1993, 1994, 2005, 2011  Thomas Mertes       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  This file is part of the Seed7 Runtime Library.                 *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is free software; you can             *)</span>
<span class="comment">(*  redistribute it and/or modify it under the terms of the GNU     *)</span>
<span class="comment">(*  Lesser General Public License as published by the Free Software *)</span>
<span class="comment">(*  Foundation; either version 2.1 of the License, or (at your      *)</span>
<span class="comment">(*  option) any later version.                                      *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  The Seed7 Runtime Library is distributed in the hope that it    *)</span>
<span class="comment">(*  will be useful, but WITHOUT ANY WARRANTY; without even the      *)</span>
<span class="comment">(*  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR *)</span>
<span class="comment">(*  PURPOSE.  See the GNU Lesser General Public License for more    *)</span>
<span class="comment">(*  details.                                                        *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(*  You should have received a copy of the GNU Lesser General       *)</span>
<span class="comment">(*  Public License along with this program; if not, write to the    *)</span>
<span class="comment">(*  Free Software Foundation, Inc., 51 Franklin Street,             *)</span>
<span class="comment">(*  Fifth Floor, Boston, MA  02110-1301, USA.                       *)</span>
<span class="comment">(*                                                                  *)</span>
<span class="comment">(********************************************************************)</span>


<span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/null_file.htm">null_file.s7i</a>"</span>;
<span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/text.htm">text.s7i</a>"</span>;
<span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/enable_io.htm">enable_io.s7i</a>"</span>;
<span class="keywd">include</span> <span class="stri">"<a class="lib" href="../lib/color.htm">color.s7i</a>"</span>;


<span class="comment">(**
 *  [[text|Text]] implementation type for text console/window.
 *  This type allows writing to text terminals, terminal emulations
 *  and console windows.
 *)</span>
<span class="keywd">const</span> <span class="type">type</span>: console_file <span class="keywd">is</span> sub null_file <span class="keywd">struct</span>
  <span class="keywd">end</span> <span class="keywd">struct</span>;


type_implements_interface(console_file, text);


<span class="comment">(**
 *  Standard console file of the current process.
 *  When characters are written to ''STD_CONSOLE'' they are displayed
 *  on the console/terminal (if it exists and is able to display them).
 *  Unlike the byte file [[stdio#STD_OUT|STD_OUT]] ''STD_CONSOLE''
 *  accepts also Unicode characters. Unicode characters are written
 *  with the encoding of the operating system. If the standard output
 *  file of the operating system has been redirected UTF-8 encoded
 *  characters are written to the redirected file.
 *)</span>
<span class="keywd">var</span> <span class="type">console_file</span>: STD_CONSOLE <span class="keywd">is</span> console_file.value;


<span class="keywd">const</span> <span class="type">proc</span>: CON_OPEN                                             <span class="keywd">is</span> action <span class="stri">"CON_OPEN"</span>;


<span class="comment">(**
 *  Creates a ''console_file'' at the upper left corner of the console/window.
 *  The ''console_file'' extends over the whole text console/window.
 *  @return the file opened.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">console_file</span>: open (CONSOLE) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">result</span>
    <span class="keywd">var</span> <span class="type">console_file</span>: consoleFile <span class="keywd">is</span> STD_CONSOLE;
  <span class="keywd">begin</span>
    CON_OPEN;
    consoleFile := STD_CONSOLE;
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Forces that all buffered data of ''aFile'' is sent to its destination.
 *  This causes data to be sent to the text console/window of the OS.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: flush (<span class="op">in</span> <span class="type">console_file</span>: aFile)                       <span class="keywd">is</span> action <span class="stri">"CON_FLUSH"</span>;


<span class="comment">(**
 *  Get the height of 'aConsoleFile'.
 *  @return the height of 'aConsoleFile'.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: height (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile)       <span class="keywd">is</span> action <span class="stri">"CON_HEIGHT"</span>;


<span class="comment">(**
 *  Get the width of 'aConsoleFile'.
 *  @return the width of 'aConsoleFile'.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: width (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile)        <span class="keywd">is</span> action <span class="stri">"CON_WIDTH"</span>;


<span class="comment">(**
 *  Set the current position of 'aConsoleFile' to 'line' and 'column'.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: setPos (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile,
    <span class="op">in</span> <span class="type">integer</span>: line, <span class="op">in</span> <span class="type">integer</span>: column)                        <span class="keywd">is</span> action <span class="stri">"CON_SETPOS"</span>;


<span class="comment">(**
 *  Get the cursor column of 'aConsoleFile'.
 *  @return the cursor column of 'aConsoleFile'.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: column (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile)       <span class="keywd">is</span> action <span class="stri">"CON_COLUMN"</span>;


<span class="comment">(**
 *  Get the cursor line of 'aConsoleFile'.
 *  @return the cursor line of 'aConsoleFile'.
 *)</span>
<span class="keywd">const</span> <span class="type">func</span> <span class="type">integer</span>: line (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile)         <span class="keywd">is</span> action <span class="stri">"CON_LINE"</span>;


<span class="keywd">const</span> <span class="type">proc</span>: cursor (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">boolean</span>: on)  <span class="keywd">is</span> action <span class="stri">"CON_CURSOR"</span>;
<span class="keywd">const</span> <span class="type">proc</span>: clearArea (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">integer</span>: upper,
    <span class="op">in</span> <span class="type">integer</span>: left, <span class="op">in</span> <span class="type">integer</span>: lower, <span class="op">in</span> <span class="type">integer</span>: right)      <span class="keywd">is</span> action <span class="stri">"CON_CLEAR"</span>;


<span class="comment">(**
 *  Clear an area of ''aConsoleFile'' with space characters.
 *  The area is specified in (line, column) coordinates and is
 *  between the (''upper'', ''left'') and (''lower'', ''right'').
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: clear (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">integer</span>: upper,
    <span class="op">in</span> <span class="type">integer</span>: left, <span class="op">in</span> <span class="type">integer</span>: lower, <span class="op">in</span> <span class="type">integer</span>: right) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    clearArea(aConsoleFile, upper, left, lower, right);
    setPos(aConsoleFile, 1, 1);
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="comment">(**
 *  Clear 'aConsoleFile' with space characters.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: clear (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    clear(aConsoleFile, 1, 1, height(aConsoleFile), width(aConsoleFile));
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: v_scroll (<span class="keywd">inout</span> <span class="type">console_file</span>: aConsoleFile,
    <span class="op">in</span> <span class="type">integer</span>: upper, <span class="op">in</span> <span class="type">integer</span>: left, <span class="op">in</span> <span class="type">integer</span>: lower,
    <span class="op">in</span> <span class="type">integer</span>: right, <span class="op">in</span> <span class="type">integer</span>: count)                        <span class="keywd">is</span> action <span class="stri">"CON_V_SCL"</span>;
<span class="keywd">const</span> <span class="type">proc</span>: h_scroll (<span class="keywd">inout</span> <span class="type">console_file</span>: aConsoleFile,
    <span class="op">in</span> <span class="type">integer</span>: upper, <span class="op">in</span> <span class="type">integer</span>: left, <span class="op">in</span> <span class="type">integer</span>: lower,
    <span class="op">in</span> <span class="type">integer</span>: right, <span class="op">in</span> <span class="type">integer</span>: count)                        <span class="keywd">is</span> action <span class="stri">"CON_H_SCL"</span>;


<span class="keywd">const</span> <span class="type">proc</span>: color (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">color</span>: foreground) <span class="keywd">is</span> noop;
<span class="keywd">const</span> <span class="type">proc</span>: color (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">color</span>: foreground, <span class="op">in</span> <span class="type">color</span>: background) <span class="keywd">is</span> noop;


<span class="comment">(**
 *  Write a string to the current position of 'aConsoleFile'.
 *  Unicode characters are written with the encoding of the
 *  operating system. The cursor position is changed, if
 *  one of the characters '\n', '\r' and '\b' is written.
 *  If the standard output file of the operating system has
 *  been redirected UTF-8 encoded characters are written to
 *  the redirected file.
 *)</span>
<span class="keywd">const</span> <span class="type">proc</span>: write (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">string</span>: stri) <span class="keywd">is</span> action <span class="stri">"CON_WRITE"</span>;


<span class="keywd">const</span> <span class="type">proc</span>: moveLeft (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">string</span>: stri) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    write(aConsoleFile, <span class="stri">"\b"</span> <span class="op">mult</span> width(stri));
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: erase (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">string</span>: stri) <span class="keywd">is</span> <span class="keywd">func</span>
  <span class="keywd">begin</span>
    write(aConsoleFile, <span class="stri">" "</span> <span class="op">mult</span> width(stri));
  <span class="keywd">end</span> <span class="keywd">func</span>;


<span class="keywd">const</span> <span class="type">proc</span>: cursorOn (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">char</span>: cursorChar) <span class="keywd">is</span> noop;
<span class="keywd">const</span> <span class="type">proc</span>: cursorOff (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile, <span class="op">in</span> <span class="type">char</span>: cursorChar) <span class="keywd">is</span> noop;


<span class="keywd">const</span> <span class="type">proc</span>: box (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile)       <span class="keywd">is</span> noop;
<span class="keywd">const</span> <span class="type">proc</span>: clear_box (<span class="op">in</span> <span class="type">console_file</span>: aConsoleFile) <span class="keywd">is</span> noop;
</pre>
</body>
</html>
