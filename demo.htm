<html>
<head>
<meta charset="utf-8" />
<title>
Seed7 demos</title>
<meta name="author" content="Thomas Mertes" />
<meta name="copyright" content="Thomas Mertes" />
<meta name="keywords" content="Seed7, SeedSeven, Seed, Seven, 7, programming, language, extensible, extendable" />
<meta name="description" content="Seed7 - The extensible programming language" />
<meta name="page-topic" content="programming language, computer, software, downloads" />
<meta name="audience" content="all" />
<meta name="content-language" content="en" />
<meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="images/favicon.ico" type="image/x-icon" />
<link rel="stylesheet" href="style3.css" type="text/css" />
</head>
<body style="margin:0 0 0 0;">
<div style="background-image: url('images/header1x.png');" class="top_image">
<img style="overflow:hidden;" src="images/hearts7m.png" height="68" width="50"
 /><img style="overflow:hidden;" src="images/header3.png" height="68" width="745" />
</div>
<div style="background-image: url('images/fillpix.png');" class="space_below_top_image">
</div>
<div class="menu">

<a class="head" href="index.htm"><big>Seed7</big></a>
<a class="menu" href="faq.htm">FAQ</a>
<a class="menu" href="manual/index.htm">Manual</a>
<a class="menu" href="demo.htm">Demo</a>
<a class="menu" href="scrshots/index.htm">Screenshots</a>
<a class="menu" href="examples/index.htm">Examples</a>
<a class="menu" href="libraries/index.htm">Libraries</a>
<a class="menu" href="algorith/index.htm">Algorithms</a>
<a class="menu" href="benchmks/index.htm">Benchmarks</a>
<a class="menu" href="subject_index.htm">Index</a>
<a class="menu" href="http://sourceforge.net/project/showfiles.php?group_id=151126">Download</a>
<a class="menu" href="https://github.com/ThomasMertes/seed7">GitHub</a>
<a class="menu" href="build.htm">Build Seed7</a>
<a class="menu" href="links.htm">Links</a>

</div>
<div class="content">
<div style="padding-right:20;">
<p></p><hr /><h1 align="center">
Seed7 demo programs
</h1><hr />
<p></p>
<p>Start a program by clicking on the image. Only one program can run at a time. A running program can be terminated with:</p>
<div style="padding-bottom:20px;"><button onclick="closeAll()">Terminate program</button></div>
<br />
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onpanic()" style="padding:0;border:none;background:none;"><img src="../images/panic1m.png" width="201" height="147" border="0"></button><p style="text-align:center;">Panic</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onmandelbr()" style="padding:0;border:none;background:none;"><img src="../images/mandelbr2m.png" width="200" height="209" border="0"></button><p style="text-align:center;">Mandelbrot set viewer</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onplanets()" style="padding:0;border:none;background:none;"><img src="../images/planets2m.png" width="200" height="154" border="0"></button><p style="text-align:center;">Display planets and stars</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onklondike()" style="padding:0;border:none;background:none;"><img src="../images/klondike2m.png" width="200" height="170" border="0"></button><p style="text-align:center;">Klondike solitaire</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="ondnafight()" style="padding:0;border:none;background:none;"><img src="../images/dnafight2m.png" width="201" height="158" border="0"></button><p style="text-align:center;">Dnafight programming game</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onsudoku7()" style="padding:0;border:none;background:none;"><img src="../images/sudoku7_2m.png" width="200" height="162" border="0"></button><p style="text-align:center;">Sudoku</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onwator()" style="padding:0;border:none;background:none;"><img src="../images/wator1m.png" width="201" height="158" border="0"></button><p style="text-align:center;">Planet Wator simulation</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="oncastle()" style="padding:0;border:none;background:none;"><img src="../images/castle1m.png" width="200" height="154" border="0"></button><p style="text-align:center;">Castle</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="ontetg()" style="padding:0;border:none;background:none;"><img src="../images/tetg1m.png" width="200" height="205" border="0"></button><p style="text-align:center;">Tetris</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onquiz()" style="padding:0;border:none;background:none;"><img src="../images/quiz_1m.png" width="200" height="143" border="0"></button><p style="text-align:center;">Programming quiz</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="ongkbd()" style="padding:0;border:none;background:none;"><img src="../images/gkbd1m.png" width="200" height="159" border="0"></button><p style="text-align:center;">Graphic keybord test</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onpairs()" style="padding:0;border:none;background:none;"><img src="../images/pairs1m.png" width="200" height="147" border="0"></button><p style="text-align:center;">Pairs</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onshisen()" style="padding:0;border:none;background:none;"><img src="../images/shisen1m.png" width="200" height="147" border="0"></button><p style="text-align:center;">Shisen Sho</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onlander()" style="padding:0;border:none;background:none;"><img src="../images/lander1m.png" width="200" height="157" border="0"></button><p style="text-align:center;">Lunar lander</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onmahjong()" style="padding:0;border:none;background:none;"><img src="../images/mahjong1m.png" width="200" height="143" border="0"></button><p style="text-align:center;">Mahjong solitaire</p></div>
<div style="float:left;height:300px;margin-left:20px;margin-right:20px;"><button onclick="onsokoban()" style="padding:0;border:none;background:none;"><img src="../images/sokoban1m.png" width="200" height="115" border="0"></button><p style="text-align:center;">Sokoban</p></div>
<div id="div"></div>
<script type="text/javascript">
removeOldWindows();
var isRunning = ""

var panicscript = document.createElement("script");
panicscript.setAttribute("src", "demo/panic.js");
panicscript.setAttribute("type", "text/javascript");
panicscript.setAttribute("async", true);
var onpanic = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(panicscript);
    isRunning = "panic";
  }
}

var mandelbrscript = document.createElement("script");
mandelbrscript.setAttribute("src", "demo/mandelbr.js");
mandelbrscript.setAttribute("type", "text/javascript");
mandelbrscript.setAttribute("async", true);
var onmandelbr = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(mandelbrscript);
    isRunning = "mandelbr";
  }
}

var planetsscript = document.createElement("script");
planetsscript.setAttribute("src", "demo/planets.js");
planetsscript.setAttribute("type", "text/javascript");
planetsscript.setAttribute("async", true);
var onplanets = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(planetsscript);
    isRunning = "planets";
  }
}

var klondikescript = document.createElement("script");
klondikescript.setAttribute("src", "demo/klondike.js");
klondikescript.setAttribute("type", "text/javascript");
klondikescript.setAttribute("async", true);
var onklondike = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(klondikescript);
    isRunning = "klondike";
  }
}

var dnafightscript = document.createElement("script");
dnafightscript.setAttribute("src", "demo/dnafight.js");
dnafightscript.setAttribute("type", "text/javascript");
dnafightscript.setAttribute("async", true);
var ondnafight = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(dnafightscript);
    isRunning = "dnafight";
  }
}

var sudoku7script = document.createElement("script");
sudoku7script.setAttribute("src", "demo/sudoku7.js");
sudoku7script.setAttribute("type", "text/javascript");
sudoku7script.setAttribute("async", true);
var onsudoku7 = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(sudoku7script);
    isRunning = "sudoku7";
  }
}

var watorscript = document.createElement("script");
watorscript.setAttribute("src", "demo/wator.js");
watorscript.setAttribute("type", "text/javascript");
watorscript.setAttribute("async", true);
var onwator = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(watorscript);
    isRunning = "wator";
  }
}

var castlescript = document.createElement("script");
castlescript.setAttribute("src", "demo/castle.js");
castlescript.setAttribute("type", "text/javascript");
castlescript.setAttribute("async", true);
var oncastle = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(castlescript);
    isRunning = "castle";
  }
}

var tetgscript = document.createElement("script");
tetgscript.setAttribute("src", "demo/tetg.js");
tetgscript.setAttribute("type", "text/javascript");
tetgscript.setAttribute("async", true);
var ontetg = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(tetgscript);
    isRunning = "tetg";
  }
}

var quizscript = document.createElement("script");
quizscript.setAttribute("src", "demo/quiz.js");
quizscript.setAttribute("type", "text/javascript");
quizscript.setAttribute("async", true);
var onquiz = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(quizscript);
    isRunning = "quiz";
  }
}

var gkbdscript = document.createElement("script");
gkbdscript.setAttribute("src", "demo/gkbd.js");
gkbdscript.setAttribute("type", "text/javascript");
gkbdscript.setAttribute("async", true);
var ongkbd = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(gkbdscript);
    isRunning = "gkbd";
  }
}

var pairsscript = document.createElement("script");
pairsscript.setAttribute("src", "demo/pairs.js");
pairsscript.setAttribute("type", "text/javascript");
pairsscript.setAttribute("async", true);
var onpairs = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(pairsscript);
    isRunning = "pairs";
  }
}

var shisenscript = document.createElement("script");
shisenscript.setAttribute("src", "demo/shisen.js");
shisenscript.setAttribute("type", "text/javascript");
shisenscript.setAttribute("async", true);
var onshisen = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(shisenscript);
    isRunning = "shisen";
  }
}

var landerscript = document.createElement("script");
landerscript.setAttribute("src", "demo/lander.js");
landerscript.setAttribute("type", "text/javascript");
landerscript.setAttribute("async", true);
var onlander = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(landerscript);
    isRunning = "lander";
  }
}

var mahjongscript = document.createElement("script");
mahjongscript.setAttribute("src", "demo/mahjong.js");
mahjongscript.setAttribute("type", "text/javascript");
mahjongscript.setAttribute("async", true);
var onmahjong = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(mahjongscript);
    isRunning = "mahjong";
  }
}

var sokobanscript = document.createElement("script");
sokobanscript.setAttribute("src", "demo/sokoban.js");
sokobanscript.setAttribute("type", "text/javascript");
sokobanscript.setAttribute("async", true);
var onsokoban = function(){
  if (isRunning !== "") {
    if (confirm("A program is already running (" + isRunning + ").\nYou need to terminate it before a new program can be started.\nShould " + isRunning + " be terminated now?")) {
      closeAll();
    }
  } else {
    document.getElementById("div").appendChild(sokobanscript);
    isRunning = "sokoban";
  }
}

function reloadPage() {
    setTimeout(function() {
        location.reload();
    }, 1000);
}

const windowsReference = [];
const windowNames = [];

function registerWindow(windowObject){
    windowsReference.push(windowObject);
    windowNames.push(windowObject.name);
    localStorage.setItem("windowNames", windowNames);
}

function closeAll(){
    if (windowsReference.length !== 0) {
        windowsReference.map(function(reference){
            reference.close();
        });
        localStorage.removeItem("windowNames");
        reloadPage();
    }
}

function removeOldWindows(){
    const oldWindowNames = localStorage.getItem("windowNames");
    if(oldWindowNames){
        oldWindowNamesArray = oldWindowNames.split(",");
        oldWindowNamesArray.map(function(nameOfWindow){
            let aWindow = window.open("", nameOfWindow);
            if (aWindow !== null) {
                aWindow.close();
            }
        });
        localStorage.removeItem("windowNames");
    }
}

</script>
</body>
</html>
</div>
</div>
  </body>
</html>
